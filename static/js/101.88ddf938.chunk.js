(this["webpackJsonppopulation-arcgis"]=this["webpackJsonppopulation-arcgis"]||[]).push([[101],{1258:function(e,t,i){"use strict";i.d(t,"a",(function(){return s}));var a=i(558),r=i(899),n=i(249);async function s(e,t,i){const s=Object(a.c)(e);return Object(r.executeQueryForCount)(s,n.a.from(t),{...i}).then((e=>e.data.count))}},1259:function(e,t,i){"use strict";i.d(t,"a",(function(){return s}));var a=i(558),r=i(899),n=i(249);async function s(e,t,i){const s=Object(a.c)(e);return Object(r.executeQueryForIds)(s,n.a.from(t),{...i}).then((e=>e.data.objectIds))}},1404:function(e,t,i){"use strict";i.r(t),i.d(t,"default",(function(){return Ot}));var a=i(0),r=i(374),n=i(2),s=i(721),o=i(23),l=i(1),u=(i(17),i(12)),c=i(10),p=i(50),m=i(423),d=i(167),b=i(171),h=i(1304),y=i(134),f=i(16),g=i(61),O=i(25),j=i(22),v=i(13),R=i(44),w=i(51),S=i(183),x=i(1234),I=i(27),F=i(1216);const T={StretchFunction:{arguments:{ComputeGamma:{isDataset:!1,isPublic:!1,name:"ComputeGamma",type:"RasterFunctionVariable",value:!1},DRA:{isDataset:!1,isPublic:!1,name:"DRA",type:"RasterFunctionVariable",value:!1},EstimateStatsHistogram:{isDataset:!1,isPublic:!1,name:"EstimateStatsHistogram",type:"RasterFunctionVariable",value:!1},Gamma:{displayName:"Gamma",isDataset:!1,isPublic:!1,name:"Gamma",type:"RasterFunctionVariable"},Histograms:{isDataset:!1,isPublic:!1,name:"Histograms",type:"RasterFunctionVariable"},Max:{isDataset:!1,isPublic:!1,name:"Max",type:"RasterFunctionVariable",value:255},MaxPercent:{isDataset:!1,isPublic:!1,name:"MaxPercent",type:"RasterFunctionVariable",value:.5},Min:{isDataset:!1,isPublic:!1,name:"Min",type:"RasterFunctionVariable",value:0},MinPercent:{isDataset:!1,isPublic:!1,name:"MinPercent",type:"RasterFunctionVariable",value:.25},NumberOfStandardDeviations:{isDataset:!1,isPublic:!1,name:"NumberOfStandardDeviation",type:"RasterFunctionVariable",value:2},Raster:{isDataset:!0,isPublic:!1,name:"Raster",type:"RasterFunctionVariable"},SigmoidStrengthLevel:{isDataset:!1,isPublic:!1,name:"SigmoidStrengthLevel",type:"RasterFunctionVariable",value:2},Statistics:{isDataset:!1,isPublic:!1,name:"Statistics",type:"RasterFunctionVariable"},StretchType:{isDataset:!1,isPublic:!1,name:"StretchType",type:"RasterFunctionVariable",value:0},type:"StretchFunctionArguments",UseGamma:{isDataset:!1,isPublic:!1,name:"UseGamma",type:"RasterFunctionVariable",value:!1}},description:"Enhances an image by adjusting the range of values displayed. This does not alter the underlying pixel values. If a pixel has a value outside of the specified range, it will appear as either the minimum or maximum value.",function:{description:"Enhances an image by adjusting the range of values displayed. This does not alter the underlying pixel values. If a pixel has a value outside of the specified range, it will appear as either the minimum or maximum value.",name:"Stretch",pixelType:"UNKNOWN",type:"StretchFunction"},functionType:0,name:"Stretch",thumbnail:""},RemapFunction:{name:"Remap",description:"Changes pixel values by assigning new values to ranges of pixel values or using an external table.",function:{type:"RemapFunction",pixelType:"UNKNOWN",name:"Remap",description:"Changes pixel values by assigning new values to ranges of pixel values or using an external table."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},UseTable:{name:"UseTable",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},InputRanges:{name:"InputRanges",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"Input Ranges"},OutputValues:{name:"OutputValues",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"Output Values"},NoDataRanges:{name:"NoDataRanges",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"NoData Ranges"},Table:{name:"Table",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},InputField:{name:"InputField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},OutputField:{name:"OutputField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},InputMaxField:{name:"InputMaxField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},RemapTableType:{name:"RemapTableType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},AllowUnmatched:{name:"AllowUnmatched",isPublic:!1,isDataset:!1,value:!0,type:"RasterFunctionVariable"},type:"RemapFunctionArguments"},functionType:0,thumbnail:""},ColormapFunction:{name:"Colormap",description:"Changes pixel values to display the raster data as either a grayscale or a red, green, blue (RGB) image, based on a colormap or a color ramp.",function:{type:"ColormapFunction",pixelType:"UNKNOWN",name:"Colormap",description:"Changes pixel values to display the raster data as either a grayscale or a red, green, blue (RGB) image, based on a colormap or a color ramp."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ColorSchemeType:{name:"ColorSchemeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},Colormap:{name:"Colormap",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},ColormapName:{name:"ColormapName",isPublic:!1,isDataset:!1,value:"Gray",type:"RasterFunctionVariable"},ColorRamp:{name:"ColorRamp",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},type:"ColormapFunctionArguments"},functionType:0,thumbnail:""},ShadedReliefFunction:{name:"Shaded Relief",description:"Creates a multiband, color coded, 3D representation of the surface, with the sun's relative position taken into account for shading the image.",function:{type:"ShadedReliefFunction",pixelType:"UNKNOWN",name:"Shaded Relief",description:"Creates a multiband, color coded, 3D representation of the surface, with the sun's relative position taken into account for shading the image."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ColorSchemeType:{name:"ColorSchemeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ColorRamp:{name:"ColorRamp",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},HillshadeType:{name:"HillshadeType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},Colormap:{name:"Colormap",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},Azimuth:{name:"Azimuth",isPublic:!1,isDataset:!1,value:315,type:"RasterFunctionVariable"},Altitude:{name:"Altitude",isPublic:!1,isDataset:!1,value:45,type:"RasterFunctionVariable"},SlopeType:{name:"SlopeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ZFactor:{name:"ZFactor",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},PSPower:{name:"PSPower",isPublic:!1,isDataset:!1,value:.664,type:"RasterFunctionVariable"},PSZFactor:{name:"PSZFactor",isPublic:!1,isDataset:!1,value:.024,type:"RasterFunctionVariable"},RemoveEdgeEffect:{name:"RemoveEdgeEffect",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},type:"ShadedReliefFunctionArguments"},functionType:0,thumbnail:""},HillshadeFunction:{name:"Hillshade",description:"Creates a 3D representation of the surface, with the sun's relative position taken into account for shading the image",function:{type:"HillshadeFunction",pixelType:"UNKNOWN",name:"Hillshade",description:"Creates a 3D representation of the surface, with the sun's relative position taken into account for shading the image"},arguments:{DEM:{name:"DEM",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},HillshadeType:{name:"HillshadeType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},Azimuth:{name:"Azimuth",isPublic:!1,isDataset:!1,value:315,type:"RasterFunctionVariable"},Altitude:{name:"Altitude",isPublic:!1,isDataset:!1,value:45,type:"RasterFunctionVariable"},SlopeType:{name:"SlopeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ZFactor:{name:"ZFactor",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},PSPower:{name:"PSPower",isPublic:!1,isDataset:!1,value:.664,type:"RasterFunctionVariable"},PSZFactor:{name:"PSZFactor",isPublic:!1,isDataset:!1,value:.024,type:"RasterFunctionVariable"},RemoveEdgeEffect:{name:"RemoveEdgeEffect",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},type:"HillshadeFunctionArguments"},functionType:0,thumbnail:""},ResampleFunction:{name:"Resample",description:"Changes the cell size of a raster.",function:{type:"ResampleFunction",pixelType:"UNKNOWN",name:"Resample",description:"Changes the cell size of a raster."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ResamplingType:{name:"ResamplingType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},InputCellSize:{name:"InputCellsize",isPublic:!1,isDataset:!1,value:{x:0,y:0},type:"RasterFunctionVariable"},OutputCellSize:{name:"OutputCellsize",isPublic:!1,isDataset:!1,value:{x:0,y:0},type:"RasterFunctionVariable"},type:"ResampleFunctionArguments"},functionType:0,thumbnail:""}};var D=i(1252),N=i(1340),P=i(382);const C={u1:[0,1],u2:[0,3],u4:[0,15],u8:[0,255],s8:[-128,127],u16:[0,65535],s16:[-32768,32767]},_={simple_scalar:"Simple Scalar",wind_barb:"Wind Barb",single_arrow:"Single Arrow",beaufort_kn:"Beaufort Wind (Knots)",beaufort_m:"Beaufort Wind (MetersPerSecond)",ocean_current_m:"Ocean Current (MetersPerSecond)",ocean_current_kn:"Ocean Current (Knots)"},V=new Set(["raster-stretch","unique-value","class-breaks","raster-shaded-relief","vector-field","raster-colormap"]);function M(e){return V.has(e.type)}function A(e,t){if(!e||!t)return Object(O.a)(e||t);const i=Object(O.a)(e);if(t.rasterFunctionDefinition){const e=t.rasterFunctionDefinition;(e.thumbnail||e.thumbnailEx)&&(e.thumbnail=e.thumbnailEx=null),J(i.rasterFunctionDefinition.arguments,t)}else"none"!==t.functionName.toLowerCase()&&(q(i.functionArguments).Raster=t);return i}function J(e,t){for(const i in e)"raster"===i.toLowerCase()&&("RasterFunctionVariable"===e[i].type?(e[i]=t.rasterFunctionDefinition,e[i].type="RasterFunctionTemplate"):"RasterFunctionTemplate"===e[i].type&&J(e[i].arguments,t))}function E(e){const t=Object(O.a)(T[e.functionName+"Function"]),i=e.functionArguments;for(const a in i)"raster"===a.toLowerCase()?(t.arguments[a]=E(i[a]),t.arguments[a].type="RasterFunctionTemplate"):"colormap"===a.toLowerCase()?(t.arguments[a].value=U(i[a]),t.arguments.ColorSchemeType.value=0):t.arguments[a].value=i[a];return t}function L(e,t){switch(t=t||{},e.type){case"raster-stretch":return function(e,t){const i=t.convertToRFT,a=new F.a;a.functionName="Stretch";const r=z[N.b.toJSON(e.stretchType)],n="u8",s={StretchType:r,Statistics:Q(e.statistics),DRA:e.dynamicRangeAdjustment,UseGamma:e.useGamma,Gamma:e.gamma,ComputeGamma:e.computeGamma};if(null!=e.outputMin&&(s.Min=e.outputMin),null!=e.outputMax&&(s.Max=e.outputMax),r===z.standardDeviation?(s.NumberOfStandardDeviations=e.numberOfStandardDeviations,a.outputPixelType=n):r===z.percentClip?(s.MinPercent=e.minPercent,s.MaxPercent=e.maxPercent,a.outputPixelType=n):r===z.minMax?a.outputPixelType=n:r===z.sigmoid&&(s.SigmoidStrengthLevel=e.sigmoidStrengthLevel),a.functionArguments=s,a.variableName="Raster",e.colorRamp){const r=e.colorRamp,n=new F.a;if(i)n.functionArguments={ColorRamp:Object(D.e)(r)};else{const i=Object(D.d)(r);if(i)n.functionArguments={colorRamp:i};else if(!t.convertColorRampToColormap||"algorithmic"!==r.type&&"multipart"!==r.type){var o;const t=e.colorRamp.toJSON();"algorithmic"===t.type?t.algorithm=t.algorithm||"esriCIELabAlgorithm":"multipart"===t.type&&(null==(o=t.colorRamps)?void 0:o.length)&&t.colorRamps.forEach((e=>e.algorithm=e.algorithm||"esriCIELabAlgorithm")),n.functionArguments={colorRamp:t}}else n.functionArguments={Colormap:Object(D.b)(r,256)}}return n.variableName="Raster",n.functionName="Colormap",n.functionArguments.Raster=a,i?new F.a({rasterFunctionDefinition:E(n)}):n}return i?new F.a({rasterFunctionDefinition:E(a)}):a}(e,t);case"class-breaks":return function(e,t){const i=[],a=[],r=[],s=[],o=1e-6,{pixelType:l,rasterAttributeTable:u}=t,c=Object(n.k)(u)?null:u.features,p=H(u);if(c&&Array.isArray(c)&&e.classBreakInfos){e.classBreakInfos.forEach(((t,i)=>{const a=t.symbol.color;let r;a.a&&c.forEach((n=>{r=n.attributes[e.field],(r>=t.minValue&&r<t.maxValue||i===e.classBreakInfos.length-1&&r>=t.minValue)&&s.push([n.attributes[p],a.r,a.g,a.b])}))}));const i=l?k(s,l):s,a=new F.a;return a.functionName="Colormap",a.functionArguments={},a.functionArguments.Colormap=i,a.variableName="Raster",t.convertToRFT?new F.a({rasterFunctionDefinition:E(a)}):a}e.classBreakInfos.forEach(((e,t)=>{const n=e.symbol&&e.symbol.color;n.a?(0===t?i.push(e.minValue,e.maxValue+o):i.push(e.minValue+o,e.maxValue+o),a.push(t),s.push([t,n.r,n.g,n.b])):r.push(e.minValue,e.maxValue)}));const m=l?k(s,l):s,d=new F.a;d.functionName="Remap",d.functionArguments={InputRanges:i,OutputValues:a,NoDataRanges:r},d.variableName="Raster";const b=new F.a;return b.functionName="Colormap",b.functionArguments={Colormap:m,Raster:d},t.convertToRFT?new F.a({rasterFunctionDefinition:E(b)}):b}(e,t);case"unique-value":return function(e,t){var i,a;const r=[],{pixelType:s,rasterAttributeTable:o}=t,l=Object(n.k)(o)?null:o.features,u=H(o),c=null==(i=e.defaultSymbol)||null==(a=i.color)?void 0:a.toRgb(),p=e.uniqueValueInfos;if(p)if(l){const t=new Map;p.forEach((e=>{const i=e.value,a=e.symbol.color;null!=i&&a&&a.a&&t.set(String(i),a.toRgb())}));const i=e.field;l.forEach((({attributes:e})=>{const a=String(e[i]),n=e[u];if(t.has(a)){const e=t.get(a);r.push([n,...e])}else c&&r.push([n,...c])}))}else for(let n=0;n<p.length;n++){const e=p[n],t=e.symbol.color,i=+e.value;if(null!=t&&t.a){if(isNaN(i))return null;r.push([i,t.r,t.g,t.b])}}const m=s&&r.length>0?k(r,s):r,d=new F.a;return d.functionName="Colormap",d.functionArguments={},d.functionArguments.Colormap=m,d.variableName="Raster",t.convertToRFT?new F.a({rasterFunctionDefinition:E(d)}):d}(e,t);case"raster-colormap":return function(e,t){const i=e.extractColormap();if(!i||0===i.length)return;const{pixelType:a}=t,r=a?k(i,a):i,n=new F.a;return n.functionName="Colormap",n.functionArguments={},n.functionArguments.Colormap=r,t.convertToRFT?new F.a({rasterFunctionDefinition:E(n)}):n}(e,t);case"vector-field":return function(e,t){const i=new F.a;i.functionName="VectorFieldRenderer";const{dataType:a,bandProperties:r}=t,n="vector-uv"===a;let s,o;r&&2===r.length&&(s=r.map((e=>e.BandName.toLowerCase())).indexOf("magnitude"),o=r.map((e=>e.BandName.toLowerCase())).indexOf("direction")),-1!==s&&null!==s||(s=0,o=1);const l="arithmetic"===e.rotationType?1:2,u="flow-from"===e.flowRepresentation?0:1,c=e.visualVariables?e.visualVariables.find((e=>"Magnitude"===e.field)):new P.a,p={magnitudeBandID:s,directionBandID:o,isUVComponents:n,referenceSystem:l,massFlowAngleRepresentation:u,symbolTileSize:50,symbolTileSizeUnits:100,calculationMethod:"Vector Average",symbologyName:_[e.style.toLowerCase().replace("-","_")],minimumMagnitude:c.minDataValue,maximumMagnitude:c.maxDataValue,minimumSymbolSize:c.minSize,maximumSymbolSize:c.maxSize};return i.functionArguments=p,t.convertToRFT?new F.a({rasterFunctionDefinition:E(i)}):i}(e,t);case"raster-shaded-relief":return function(e,t){const i=t.convertToRFT;if("elevation"!==t.dataType&&("generic"!==t.dataType||1!==t.bandCount||"s16"!==t.pixelType&&"s32"!==t.pixelType&&"f32"!==t.pixelType&&"f64"!==t.pixelType))return new F.a;const a=new F.a;a.functionName="Hillshade";const r="traditional"===e.hillshadeType?0:1,n="none"===e.scalingType?1:3,s={HillshadeType:r,SlopeType:n,ZFactor:e.zFactor};return 0===r&&(s.Azimuth=e.azimuth,s.Altitude=e.altitude),3===n&&(s.PSPower=e.pixelSizePower,s.PSZFactor=e.pixelSizeFactor),a.functionArguments=s,a.variableName="Raster",e.colorRamp&&(a.functionName="ShadedRelief",i?s.ColorRamp=Object(D.e)(e.colorRamp):s.Colormap=Object(D.b)(e.colorRamp,256)),i?new F.a({rasterFunctionDefinition:E(a)}):a}(e,t);case"flow":throw new Error("Unsupported rendering rule.")}}function q(e){const t=null==e?void 0:e.Raster;return t&&"esri.layers.support.RasterFunction"===t.declaredClass?q(t.functionArguments):e}const z={none:0,standardDeviation:3,histogramEqualization:4,minMax:5,percentClip:6,sigmoid:9};function k(e,t){const i=C[String(t).toLowerCase()];return i&&e.push([Math.floor(i[0]-1),0,0,0],[Math.ceil(i[1]+1),0,0,0]),e}function H(e){if(Object(n.k)(e))return;const{fields:t}=e,i=t&&t.find((e=>e&&e.name&&"value"===e.name.toLowerCase()));return i&&i.name}function Q(e){const t=[];return e.forEach((e=>{const i=e;if(Array.isArray(i))t.push(i);else{if(null==i.min||null==i.max)return;const e=[i.min,i.max,i.avg||0,i.stddev||0];t.push(e)}})),t}function U(e){const t=[],i=[];return e.forEach((e=>{t.push(e[0]),i.push(Object(D.f)([...e.slice(1),255]))})),{type:"RasterColormap",values:t,colors:i}}var G,B=i(72),W=i(62);const $=Object(g.b)()({MT_FIRST:"first",MT_LAST:"last",MT_MIN:"min",MT_MAX:"max",MT_MEAN:"mean",MT_BLEND:"blend",MT_SUM:"sum"}),K=Object(g.b)()({esriMosaicNone:"none",esriMosaicCenter:"center",esriMosaicNadir:"nadir",esriMosaicViewpoint:"viewpoint",esriMosaicAttribute:"attribute",esriMosaicLockRaster:"lock-raster",esriMosaicNorthwest:"northwest",esriMosaicSeamline:"seamline"});let Z=G=class extends I.a{constructor(e){super(e),this.ascending=!0,this.itemRenderingRule=null,this.lockRasterIds=null,this.method=null,this.multidimensionalDefinition=null,this.objectIds=null,this.operation=null,this.sortField=null,this.sortValue=null,this.viewpoint=null,this.where=null}readAscending(e,t){return null!=t.ascending?t.ascending:null==t.sortAscending||t.sortAscending}readMethod(e,t){return function(e){let t;switch(e?e.toLowerCase().replace("esrimosaic",""):""){case"byattribute":case"attribute":t="esriMosaicAttribute";break;case"lockraster":t="esriMosaicLockRaster";break;case"center":t="esriMosaicCenter";break;case"northwest":t="esriMosaicNorthwest";break;case"nadir":t="esriMosaicNadir";break;case"viewpoint":t="esriMosaicViewpoint";break;case"seamline":t="esriMosaicSeamline";break;default:t="esriMosaicNone"}return K.fromJSON(t)}(t.mosaicMethod||t.defaultMosaicMethod)}readOperation(e,t){const i=t.mosaicOperation,a=t.mosaicOperator&&t.mosaicOperator.toLowerCase(),r=i||(a?$.toJSON(a):null);return $.fromJSON(r)||"first"}castSortValue(e){return null==e||"string"==typeof e||"number"==typeof e?e:`${e}`}clone(){return new G({ascending:this.ascending,itemRenderingRule:Object(O.a)(this.itemRenderingRule),lockRasterIds:Object(O.a)(this.lockRasterIds),method:this.method,multidimensionalDefinition:Object(O.a)(this.multidimensionalDefinition),objectIds:Object(O.a)(this.objectIds),operation:this.operation,sortField:this.sortField,sortValue:this.sortValue,viewpoint:Object(O.a)(this.viewpoint),where:this.where})}};Object(a.a)([Object(l.b)({type:Boolean,json:{write:!0}})],Z.prototype,"ascending",void 0),Object(a.a)([Object(w.a)("ascending",["ascending","sortAscending"])],Z.prototype,"readAscending",null),Object(a.a)([Object(l.b)({type:F.a,json:{write:!0}})],Z.prototype,"itemRenderingRule",void 0),Object(a.a)([Object(l.b)({type:[u.a],json:{write:{overridePolicy(){return{enabled:"lock-raster"===this.method}}}}})],Z.prototype,"lockRasterIds",void 0),Object(a.a)([Object(l.b)({type:String,json:{type:K.jsonValues,write:{target:"mosaicMethod",writer:K.write}}})],Z.prototype,"method",void 0),Object(a.a)([Object(w.a)("method",["mosaicMethod","defaultMosaicMethod"])],Z.prototype,"readMethod",null),Object(a.a)([Object(l.b)({type:[x.a],json:{write:!0}})],Z.prototype,"multidimensionalDefinition",void 0),Object(a.a)([Object(l.b)({type:[u.a],json:{name:"fids",write:!0}})],Z.prototype,"objectIds",void 0),Object(a.a)([Object(l.b)({json:{type:$.jsonValues,read:{reader:$.read},write:{target:"mosaicOperation",writer:$.write}}})],Z.prototype,"operation",void 0),Object(a.a)([Object(w.a)("operation",["mosaicOperation","mosaicOperator"])],Z.prototype,"readOperation",null),Object(a.a)([Object(l.b)({type:String,json:{write:{overridePolicy(){return{enabled:"attribute"===this.method}}}}})],Z.prototype,"sortField",void 0),Object(a.a)([Object(l.b)({type:[String,Number],json:{write:{allowNull:!0,overridePolicy(){return{enabled:"attribute"===this.method,allowNull:!0}}}}})],Z.prototype,"sortValue",void 0),Object(a.a)([Object(B.a)("sortValue")],Z.prototype,"castSortValue",null),Object(a.a)([Object(l.b)({type:W.a,json:{write:!0}})],Z.prototype,"viewpoint",void 0),Object(a.a)([Object(l.b)({type:String,json:{write:!0}})],Z.prototype,"where",void 0),Z=G=Object(a.a)([Object(c.a)("esri.layers.support.MosaicRule")],Z);const X=Z;var Y=i(1309);let ee=class extends I.a{constructor(){super(...arguments),this.layer=null,this.adjustAspectRatio=void 0,this.compression=void 0,this.pixelType=void 0,this.lercVersion=2}writeAdjustAspectRatio(e,t,i){this.layer.version<10.3||(t[i]=e)}get bandIds(){return this.layer.bandIds}set bandIds(e){this.layer&&(this.layer.bandIds=e)}get compressionQuality(){var e;return null==(e=this.layer)?void 0:e.compressionQuality}set compressionQuality(e){this.layer&&(this.layer.compressionQuality=e)}writeCompressionQuality(e,t,i){this.format&&this.format.toLowerCase().includes("jpg")&&null!=e&&(t[i]=e)}get compressionTolerance(){var e;return null==(e=this.layer)?void 0:e.compressionTolerance}set compressionTolerance(e){this.layer&&(this.layer.compressionTolerance=e)}writeCompressionTolerance(e,t,i){"lerc"===this.format&&null!=e&&(t[i]=e)}get format(){var e;return"vector-field"===(null==(e=this.layer.renderer)?void 0:e.type)?"lerc":this.layer.format}get interpolation(){var e;return null==(e=this.layer)?void 0:e.interpolation}set interpolation(e){this.layer&&(this.layer.interpolation=e)}get noData(){var e;return null==(e=this.layer)?void 0:e.noData}set noData(e){this.layer&&(this.layer.noData=e)}get noDataInterpretation(){var e;return null==(e=this.layer)?void 0:e.noDataInterpretation}set noDataInterpretation(e){this.layer&&(this.layer.noDataInterpretation=e)}writeLercVersion(e,t,i){"lerc"===this.format&&this.layer.version>=10.5&&(t[i]=e)}get version(){const e=this.layer;return e.commitProperty("bandIds"),e.commitProperty("format"),e.commitProperty("compressionQuality"),e.commitProperty("compressionTolerance"),e.commitProperty("interpolation"),e.commitProperty("noData"),e.commitProperty("noDataInterpretation"),e.commitProperty("mosaicRule"),e.commitProperty("renderingRule"),e.commitProperty("adjustAspectRatio"),e.commitProperty("pixelFilter"),e.commitProperty("definitionExpression"),e.commitProperty("multidimensionalSubset"),(this._get("version")||0)+1}set version(e){this._set("version",e)}get mosaicRule(){const e=this.layer;let t=e.mosaicRule;const i=e.definitionExpression;return t?i&&i!==t.where&&(t=t.clone(),t.where=i):i&&(t=new X({where:i})),t}get renderingRule(){var e,t;const i=this.layer;let a=i.renderingRule;const r=i.pixelFilter,n=!i.format||i.format.includes("jpg")||i.format.includes("png");a=this._addResampleRasterFunction(a);const s=null==(e=i.multidimensionalSubset)?void 0:e.areaOfInterest;return s&&(a=this._addClipFunction(a,s)),n&&!r&&"vector-field"!==(null==(t=i.renderer)?void 0:t.type)&&(a=this.combineRendererWithRenderingRule(a)),a}combineRendererWithRenderingRule(e){var t,i;const a=this.layer,{rasterInfo:r,renderer:n}=a;return e=e||a.renderingRule,n&&M(n)?A(L(n,{rasterAttributeTable:r.attributeTable,pixelType:r.pixelType,dataType:r.dataType,bandProperties:null==(t=r.keyProperties)?void 0:t.BandProperties,convertColorRampToColormap:a.version<10.6,convertToRFT:!(null==(i=e)||!i.rasterFunctionDefinition),bandCount:r.bandCount}),e):e}_addResampleRasterFunction(e){var t;if("vector-field"!==(null==(t=this.layer.renderer)?void 0:t.type)||"Resample"===(null==e?void 0:e.functionName))return e;const i="esriImageServiceDataTypeVector-UV"===this.layer.serviceDataType?7:10,a=this.layer.serviceRasterInfo.pixelSize;let r=new F.a({functionName:"Resample",functionArguments:{ResamplingType:i,InputCellSize:a}});return r=null!=e&&e.rasterFunctionDefinition?new F.a({rasterFunctionDefinition:E(r)}):r,A(r,e)}_addClipFunction(e,t){return A(new F.a({functionName:"Clip",functionArguments:{ClippingGeometry:t.toJSON(),ClippingType:1}}),e)}};Object(a.a)([Object(l.b)()],ee.prototype,"layer",void 0),Object(a.a)([Object(l.b)({json:{write:!0}})],ee.prototype,"adjustAspectRatio",void 0),Object(a.a)([Object(p.a)("adjustAspectRatio")],ee.prototype,"writeAdjustAspectRatio",null),Object(a.a)([Object(l.b)({json:{write:!0}})],ee.prototype,"bandIds",null),Object(a.a)([Object(l.b)({json:{write:!0}})],ee.prototype,"compression",void 0),Object(a.a)([Object(l.b)({json:{write:!0}})],ee.prototype,"compressionQuality",null),Object(a.a)([Object(p.a)("compressionQuality")],ee.prototype,"writeCompressionQuality",null),Object(a.a)([Object(l.b)({json:{write:!0}})],ee.prototype,"compressionTolerance",null),Object(a.a)([Object(p.a)("compressionTolerance")],ee.prototype,"writeCompressionTolerance",null),Object(a.a)([Object(l.b)({json:{write:!0}})],ee.prototype,"format",null),Object(a.a)([Object(l.b)({type:String,json:{read:{reader:Y.a.read},write:{writer:Y.a.write}}})],ee.prototype,"interpolation",null),Object(a.a)([Object(l.b)({json:{write:!0}})],ee.prototype,"noData",null),Object(a.a)([Object(l.b)({type:String,json:{read:{reader:Y.b.read},write:{writer:Y.b.write}}})],ee.prototype,"noDataInterpretation",null),Object(a.a)([Object(l.b)({json:{write:!0}})],ee.prototype,"pixelType",void 0),Object(a.a)([Object(l.b)({json:{write:!0}})],ee.prototype,"lercVersion",void 0),Object(a.a)([Object(p.a)("lercVersion")],ee.prototype,"writeLercVersion",null),Object(a.a)([Object(l.b)({type:Number})],ee.prototype,"version",null),Object(a.a)([Object(l.b)({json:{write:!0}})],ee.prototype,"mosaicRule",null),Object(a.a)([Object(l.b)({json:{write:!0}})],ee.prototype,"renderingRule",null),ee=Object(a.a)([Object(c.a)("esri.layers.mixins.ExportImageServiceParameters")],ee);var te=i(448),ie=i(900),ae=i(1472),re=i(1141),ne=i(1153),se=i(1473),oe=i(1384),le=i(1312),ue=i(1254),ce=i(1474),pe=i(1342),me=i(675),de=i(558),be=i(57);let he=class extends I.a{constructor(){super(...arguments),this.north=null,this.up=null,this.spatialReference=null}};Object(a.a)([Object(l.b)({type:Number,json:{write:!0}})],he.prototype,"north",void 0),Object(a.a)([Object(l.b)({type:Number,json:{write:!0}})],he.prototype,"up",void 0),Object(a.a)([Object(l.b)({type:be.a,json:{write:!0}})],he.prototype,"spatialReference",void 0),he=Object(a.a)([Object(c.a)("esri.rest.support.ImageAngleResult")],he);const ye=he;var fe=i(474);let ge=class extends I.a{constructor(){super(...arguments),this.catalogItemVisibilities=null,this.catalogItems=null,this.location=null,this.name=null,this.objectId=null,this.processedValues=null,this.properties=null,this.value=null}};Object(a.a)([Object(l.b)({json:{write:!0}})],ge.prototype,"catalogItemVisibilities",void 0),Object(a.a)([Object(l.b)({type:fe.default,json:{write:!0}})],ge.prototype,"catalogItems",void 0),Object(a.a)([Object(l.b)({type:W.a,json:{write:!0}})],ge.prototype,"location",void 0),Object(a.a)([Object(l.b)({json:{write:!0}})],ge.prototype,"name",void 0),Object(a.a)([Object(l.b)({json:{write:!0}})],ge.prototype,"objectId",void 0),Object(a.a)([Object(l.b)({json:{write:!0}})],ge.prototype,"processedValues",void 0),Object(a.a)([Object(l.b)({json:{write:!0}})],ge.prototype,"properties",void 0),Object(a.a)([Object(l.b)({json:{write:!0}})],ge.prototype,"value",void 0),ge=Object(a.a)([Object(c.a)("esri.rest.support.ImageIdentifyResult")],ge);const Oe=ge;let je=class extends I.a{constructor(){super(...arguments),this.geometries=null}};Object(a.a)([Object(l.b)({json:{write:!0}})],je.prototype,"geometries",void 0),je=Object(a.a)([Object(c.a)("esri.rest.support.ImagePixelLocationResult")],je);const ve=je;let Re=class extends I.a{constructor(){super(...arguments),this.attributes=null,this.location=null,this.locationId=null,this.rasterId=null,this.resolution=null,this.pixelValue=null}};Object(a.a)([Object(l.b)({json:{write:!0}})],Re.prototype,"attributes",void 0),Object(a.a)([Object(l.b)({type:W.a,json:{write:!0}})],Re.prototype,"location",void 0),Object(a.a)([Object(l.b)({json:{write:!0}})],Re.prototype,"locationId",void 0),Object(a.a)([Object(l.b)({json:{write:!0}})],Re.prototype,"rasterId",void 0),Object(a.a)([Object(l.b)({json:{write:!0}})],Re.prototype,"resolution",void 0),Object(a.a)([Object(l.b)({json:{write:!0}})],Re.prototype,"pixelValue",void 0),Re=Object(a.a)([Object(c.a)("esri.rest.support.ImageSample")],Re);const we=Re;let Se=class extends I.a{constructor(){super(...arguments),this.samples=null}};Object(a.a)([Object(l.b)({type:[we],json:{write:!0}})],Se.prototype,"samples",void 0),Se=Object(a.a)([Object(c.a)("esri.rest.support.ImageSampleResult")],Se);const xe=Se;function Ie(e){const t=null==e?void 0:e.time;if(t&&(null!=t.start||null!=t.end)){const i=[];null!=t.start&&i.push(t.start),null==t.end||i.includes(t.end)||i.push(t.end),e.time=i.join(",")}}async function Fe(e,t,i){const a=Object(de.c)(e),r=t.geometry?[t.geometry]:[],s=await Object(me.a)(r),o=t.toJSON();Ie(o);const l=s&&s[0];Object(n.l)(l)&&(o.geometry=l.toJSON());const u=Object(de.b)({...a.query,f:"json",...o});return Object(de.a)(u,i)}async function Te(e,t,i){const a=Object(de.c)(e),r=t.geometry?[t.geometry]:[];return Object(me.a)(r).then((e=>{const r=t.toJSON(),s=e&&e[0];Object(n.l)(s)&&(r.geometry=JSON.stringify(s.toJSON()));const o=Object(de.b)({...a.query,f:"json",...r}),l=Object(de.a)(o,i);return Object(y.default)(a.path+"/identify",l)})).then((e=>Oe.fromJSON(e.data)))}function De(e){const{imageCoordinateSystem:t}=e;if(t){const{id:e,referenceServiceName:i}=t;return null!=e?i?{icsid:e,icsns:i}:{icsid:e}:{ics:t}}return e.toJSON()}function Ne(e,t){const i=De(e),{icsid:a,icsns:r,wkid:n}=i;return null!=a?null==r||null!=t&&t.toLowerCase().includes("/"+r.toLowerCase()+"/")?`0:${a}`:JSON.stringify(i):n?n.toString():JSON.stringify(i)}i(32),i(565);var Pe,Ce=i(759),_e=(i(136),i(165),i(68),i(47),i(336),i(86)),Ve=(i(254),i(354)),Me=i(180),Ae=(i(250),i(872),i(249)),Je=(i(879),i(603),i(1258)),Ee=i(1259),Le=(i(514),i(599),i(1475)),qe=i(1196);let ze=Pe=class extends I.a{constructor(){super(...arguments),this.angleNames=null,this.point=null,this.spatialReference=null,this.rasterId=null}clone(){return new Pe(Object(O.a)({angleNames:this.angleNames,point:this.point,spatialReference:this.spatialReference,rasterId:this.rasterId}))}};Object(a.a)([Object(l.b)({type:[String],json:{name:"angleName",write:!0}})],ze.prototype,"angleNames",void 0),Object(a.a)([Object(l.b)({type:W.a,json:{write:!0}})],ze.prototype,"point",void 0),Object(a.a)([Object(l.b)({type:be.a,json:{write:!0}})],ze.prototype,"spatialReference",void 0),Object(a.a)([Object(l.b)({type:u.a,json:{write:!0}})],ze.prototype,"rasterId",void 0),ze=Pe=Object(a.a)([Object(c.a)("esri.rest.support.ImageAngleParameters")],ze);const ke=ze;var He,Qe=i(265),Ue=i(122);let Ge=He=class extends I.a{constructor(){super(...arguments),this.geometry=null,this.mosaicRule=null,this.renderingRule=null,this.pixelSize=null,this.raster=void 0,this.timeExtent=null}writeGeometry(e,t,i){null!=e&&(t.geometryType=Object(Ue.c)(e),t[i]=e.toJSON())}clone(){return new He(Object(O.a)({geometry:this.geometry,mosaicRule:this.mosaicRule,renderingRule:this.renderingRule,pixelSize:this.pixelSize,raster:this.raster,timeExtent:this.timeExtent}))}};Object(a.a)([Object(l.b)({types:d.a,json:{read:Ue.a}})],Ge.prototype,"geometry",void 0),Object(a.a)([Object(p.a)("geometry")],Ge.prototype,"writeGeometry",null),Object(a.a)([Object(l.b)({type:X,json:{write:!0}})],Ge.prototype,"mosaicRule",void 0),Object(a.a)([Object(l.b)({type:F.a,json:{write:!0}})],Ge.prototype,"renderingRule",void 0),Object(a.a)([Object(l.b)({type:W.a,json:{write:!0}})],Ge.prototype,"pixelSize",void 0),Object(a.a)([Object(l.b)({json:{write:!0}})],Ge.prototype,"raster",void 0),Object(a.a)([Object(l.b)({type:Qe.a,json:{read:{source:"time"},write:{target:"time"}}})],Ge.prototype,"timeExtent",void 0),Ge=He=Object(a.a)([Object(c.a)("esri.rest.support.ImageHistogramParameters")],Ge);const Be=Ge;var We;let $e=We=class extends I.a{constructor(){super(...arguments),this.geometry=null,this.renderingRules=null,this.pixelSize=null,this.returnGeometry=!0,this.returnCatalogItems=!0,this.returnPixelValues=!0,this.maxItemCount=null,this.timeExtent=null,this.raster=void 0,this.viewId=void 0,this.processAsMultidimensional=!1}writeGeometry(e,t,i){null!=e&&(t.geometryType=Object(Ue.c)(e),t[i]=JSON.stringify(e.toJSON()))}set mosaicRule(e){let t=e;t&&t.mosaicMethod&&(t=X.fromJSON({...t.toJSON(),mosaicMethod:t.mosaicMethod,mosaicOperation:t.mosaicOperation})),this._set("mosaicRule",t)}writeMosaicRule(e,t,i){null!=e&&(t[i]=JSON.stringify(e.toJSON()))}set renderingRule(e){let t=e;t&&t.rasterFunction&&(t=F.a.fromJSON({...t.toJSON(),rasterFunction:t.rasterFunction,rasterFunctionArguments:t.rasterFunctionArguments})),this._set("renderingRule",t)}writeRenderingRule(e,t,i){null!=e&&(t[i]=JSON.stringify(e.toJSON())),e.rasterFunctionDefinition&&(t[i]=JSON.stringify(e.rasterFunctionDefinition))}writeRenderingRules(e,t,i){null!=e&&(t[i]=JSON.stringify(e.map((e=>e.rasterFunctionDefinition||e.toJSON()))))}writePixelSize(e,t,i){null!=e&&(t[i]=JSON.stringify(e))}writeTimeExtent(e,t,i){if(null!=e){const a=Object(n.l)(e.start)?e.start.getTime():null,r=Object(n.l)(e.end)?e.end.getTime():null;t[i]=null!=a?null!=r?`${a},${r}`:`${a}`:null}}clone(){return new We(Object(O.a)({geometry:this.geometry,mosaicRule:this.mosaicRule,renderingRule:this.renderingRule,pixelSize:this.pixelSize,returnGeometry:this.returnGeometry,returnCatalogItems:this.returnCatalogItems,returnPixelValues:this.returnPixelValues,maxItemCount:this.maxItemCount,processAsMultidimensional:this.processAsMultidimensional,raster:this.raster,viewId:this.viewId,timeExtent:this.timeExtent}))}};Object(a.a)([Object(l.b)({json:{write:!0}})],$e.prototype,"geometry",void 0),Object(a.a)([Object(p.a)("geometry")],$e.prototype,"writeGeometry",null),Object(a.a)([Object(l.b)({type:X,json:{write:!0}})],$e.prototype,"mosaicRule",null),Object(a.a)([Object(p.a)("mosaicRule")],$e.prototype,"writeMosaicRule",null),Object(a.a)([Object(l.b)({type:F.a,json:{write:!0}})],$e.prototype,"renderingRule",null),Object(a.a)([Object(p.a)("renderingRule")],$e.prototype,"writeRenderingRule",null),Object(a.a)([Object(l.b)({type:[F.a],json:{write:!0}})],$e.prototype,"renderingRules",void 0),Object(a.a)([Object(p.a)("renderingRules")],$e.prototype,"writeRenderingRules",null),Object(a.a)([Object(l.b)({type:W.a,json:{write:!0}})],$e.prototype,"pixelSize",void 0),Object(a.a)([Object(p.a)("pixelSize")],$e.prototype,"writePixelSize",null),Object(a.a)([Object(l.b)({type:Boolean,json:{write:!0}})],$e.prototype,"returnGeometry",void 0),Object(a.a)([Object(l.b)({type:Boolean,json:{write:!0}})],$e.prototype,"returnCatalogItems",void 0),Object(a.a)([Object(l.b)({type:Boolean,json:{write:!0}})],$e.prototype,"returnPixelValues",void 0),Object(a.a)([Object(l.b)({type:Number,json:{write:!0}})],$e.prototype,"maxItemCount",void 0),Object(a.a)([Object(l.b)({type:Qe.a,json:{write:{target:"time"}}})],$e.prototype,"timeExtent",void 0),Object(a.a)([Object(p.a)("timeExtent")],$e.prototype,"writeTimeExtent",null),Object(a.a)([Object(l.b)({json:{write:!0}})],$e.prototype,"raster",void 0),Object(a.a)([Object(l.b)({json:{write:!0}})],$e.prototype,"viewId",void 0),Object(a.a)([Object(l.b)({type:Boolean,json:{write:!0}})],$e.prototype,"processAsMultidimensional",void 0),$e=We=Object(a.a)([Object(c.a)("esri.rest.support.ImageIdentifyParameters")],$e);const Ke=$e;var Ze;let Xe=Ze=class extends I.a{constructor(){super(...arguments),this.geometries=null,this.rasterId=null}writeGeometry(e,t,i){t.geometries={geometryType:"esriGeometryPoint",geometries:e.map((e=>e.toJSON()))}}clone(){var e,t;return new Ze({geometries:null!=(e=null==(t=this.geometries)?void 0:t.map((e=>e.clone())))?e:[],rasterId:this.rasterId})}};Object(a.a)([Object(l.b)({type:[W.a],json:{write:!0}})],Xe.prototype,"geometries",void 0),Object(a.a)([Object(p.a)("geometries")],Xe.prototype,"writeGeometry",null),Object(a.a)([Object(l.b)({type:u.a,json:{write:!0}})],Xe.prototype,"rasterId",void 0),Xe=Ze=Object(a.a)([Object(c.a)("esri.rest.support.ImagePixelLocationParameters")],Xe);const Ye=Xe;var et;let tt=et=class extends I.a{constructor(){super(...arguments),this.geometry=null,this.interpolation="nearest",this.mosaicRule=null,this.outFields=null,this.pixelSize=null,this.returnFirstValueOnly=!0,this.sampleDistance=null,this.sampleCount=null,this.sliceId=null,this.timeExtent=null}writeGeometry(e,t,i){null!=e&&(t.geometryType=Object(Ue.c)(e),t[i]=e.toJSON())}set locations(e){if(null!=e&&e.length){const t=new Ve.a({spatialReference:e[0].spatialReference});t.points=e.map((e=>[e.x,e.y])),this._set("locations",e),this.geometry=t}}clone(){return new et(Object(O.a)({geometry:this.geometry,locations:this.locations,interpolation:this.interpolation,mosaicRule:this.mosaicRule,outFields:this.outFields,raster:this.raster,returnFirstValueOnly:this.returnFirstValueOnly,sampleDistance:this.sampleDistance,sampleCount:this.sampleCount,sliceId:this.sliceId,pixelSize:this.pixelSize,timeExtent:this.timeExtent}))}};Object(a.a)([Object(l.b)({types:d.a,json:{read:Ue.a}})],tt.prototype,"geometry",void 0),Object(a.a)([Object(p.a)("geometry")],tt.prototype,"writeGeometry",null),Object(a.a)([Object(l.b)()],tt.prototype,"locations",null),Object(a.a)([Object(l.b)({type:String,json:{type:Y.a.jsonValues,read:Y.a.read,write:Y.a.write}})],tt.prototype,"interpolation",void 0),Object(a.a)([Object(l.b)({type:X,json:{write:!0}})],tt.prototype,"mosaicRule",void 0),Object(a.a)([Object(l.b)({type:[String],json:{write:!0}})],tt.prototype,"outFields",void 0),Object(a.a)([Object(l.b)({type:W.a,json:{write:!0}})],tt.prototype,"pixelSize",void 0),Object(a.a)([Object(l.b)({type:String,json:{write:!0}})],tt.prototype,"raster",void 0),Object(a.a)([Object(l.b)({type:Boolean,json:{write:!0}})],tt.prototype,"returnFirstValueOnly",void 0),Object(a.a)([Object(l.b)({type:Number,json:{write:!0}})],tt.prototype,"sampleDistance",void 0),Object(a.a)([Object(l.b)({type:Number,json:{write:!0}})],tt.prototype,"sampleCount",void 0),Object(a.a)([Object(l.b)({type:Number,json:{write:!0}})],tt.prototype,"sliceId",void 0),Object(a.a)([Object(l.b)({type:Qe.a,json:{read:{source:"time"},write:{target:"time"}}})],tt.prototype,"timeExtent",void 0),tt=et=Object(a.a)([Object(c.a)("esri.rest.support.ImageSampleParameters")],tt);const it=tt;var at=i(1343);const rt=Object(g.b)()({U1:"u1",U2:"u2",U4:"u4",U8:"u8",S8:"s8",U16:"u16",S16:"s16",U32:"u32",S32:"s32",F32:"f32",F64:"f64",C64:"c64",C128:"c128",UNKNOWN:"unknown"}),nt=new Set(["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff"]),st=Object(l.a)(u.i,{min:0,max:255});const ot=e=>{let t=class extends e{constructor(){super(...arguments),this._functionRasterInfos={},this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this._cachedRendererJson=null,this._serviceSupportsMosaicRule=null,this._rasterAttributeTableFieldPrefix="Raster.",this.adjustAspectRatio=null,this.bandIds=void 0,this.capabilities=null,this.compressionQuality=void 0,this.compressionTolerance=.01,this.copyright=null,this.defaultMosaicRule=null,this.definitionExpression=null,this.exportImageServiceParameters=null,this.rasterInfo=null,this.fields=null,this.fullExtent=null,this.hasMultidimensions=!1,this.imageMaxHeight=4100,this.imageMaxWidth=4100,this.interpolation=void 0,this.minScale=0,this.maxScale=0,this.multidimensionalSubset=null,this.noData=null,this.noDataInterpretation=void 0,this.objectIdField=null,this.geometryType="polygon",this.typeIdField=null,this.types=[],this.pixelFilter=null,this.raster=void 0,this.sourceType=null,this.viewId=void 0,this.symbolizer=null,this.rasterFunctionInfos=null,this.serviceDataType=null,this.spatialReference=null,this.pixelType=null,this.serviceRasterInfo=null,this.sourceJSON=null,this.url=null,this.version=void 0}initialize(){this._set("exportImageServiceParameters",new ee({layer:this}))}readServiceSupportsMosaicRule(e,t){return this._isMosaicRuleSupported(t)}get _rasterFunctionNamesIndex(){const e=new Map;return!this.rasterFunctionInfos||Object(n.l)(this.rasterFunctionInfos)&&this.rasterFunctionInfos.length<1||Object(n.l)(this.rasterFunctionInfos)&&this.rasterFunctionInfos.forEach((t=>{e.set(t.name.toLowerCase().replace(/ /gi,"_"),t.name)})),e}readBandIds(e,t){if(Array.isArray(e)&&e.length>0&&e.every((e=>"number"==typeof e)))return e}readCapabilities(e,t){return this._readCapabilities(t)}writeCompressionQuality(e,t,i){null!=e&&"lerc"!==this.format&&(t[i]=e)}writeCompressionTolerance(e,t,i){"lerc"===this.format&&null!=e&&(t[i]=e)}readDefaultMosaicRule(e,t){return this._serviceSupportsMosaicRule?X.fromJSON(t):null}get fieldsIndex(){return this.fields?new ie.a(this.fields):null}set format(e){e&&nt.has(e.toLowerCase())&&this._set("format",e.toLowerCase())}readFormat(e,t){return"esriImageServiceDataTypeVector-UV"===t.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===t.serviceDataType||null!=this.pixelFilter?"lerc":"jpgpng"}readMinScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}readMaxScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}set mosaicRule(e){let t=e;t&&t.mosaicMethod&&(t=X.fromJSON({...t.toJSON(),mosaicMethod:t.mosaicMethod,mosaicOperation:t.mosaicOperation})),this._set("mosaicRule",t)}readMosaicRule(e,t){const i=e||t.mosaicRule;return i?X.fromJSON(i):this._isMosaicRuleSupported(t)?X.fromJSON(t):null}writeMosaicRule(e,t,i){let a=this.mosaicRule;const r=this.definitionExpression;a?r&&r!==a.where&&(a=a.clone(),a.where=r):r&&(a=new X({where:r})),this._isValidCustomizedMosaicRule(a)&&(t[i]=a.toJSON())}get multidimensionalInfo(){return Object(n.l)(this.serviceRasterInfo)?this.serviceRasterInfo.multidimensionalInfo:null}writeNoData(e,t,i){null!=e&&"number"==typeof e&&(t[i]=st(e))}readObjectIdField(e,t){if(!e){const i=t.fields.filter((e=>"esriFieldTypeOID"===e.type||"oid"===e.type));e=i&&i[0]&&i[0].name}return e}get parsedUrl(){return Object(R.N)(this.url)}readSourceType(e,t){return this._isMosaicDataset(t)?"mosaic-dataset":"raster-dataset"}set renderer(e){this.loaded&&(e=this._configRenderer(e)),this._set("renderer",e)}readRenderer(e,t,i){var a,r;const n=null==t||null==(a=t.layerDefinition)||null==(r=a.drawingInfo)?void 0:r.renderer,s=Object(h.b)(n,i);return null==s?null:("vector-field"===s.type&&t.symbolTileSize&&!n.symbolTileSize&&(s.symbolTileSize=t.symbolTileSize),M(s)||j.a.getLogger(this.declaredClass).warn("ArcGISImageService","Imagery layer doesn't support given renderer type."),s)}writeRenderer(e,t,i){t.layerDefinition=t.layerDefinition||{},t.layerDefinition.drawingInfo=t.layerDefinition.drawingInfo||{},t.layerDefinition.drawingInfo.renderer=e.toJSON(),"vector-field"===e.type&&(t.symbolTileSize=e.symbolTileSize)}get rasterFields(){var e,t;const i=this._rasterAttributeTableFieldPrefix||"Raster.",a=new te.a({name:"Raster.ItemPixelValue",alias:"Item Pixel Value",domain:null,editable:!1,length:50,type:"string"}),r=new te.a({name:"Raster.ServicePixelValue",alias:"Service Pixel Value",domain:null,editable:!1,length:50,type:"string"}),s=new te.a({name:"Raster.ServicePixelValue.Raw",alias:"Raw Service Pixel Value",domain:null,editable:!1,length:50,type:"string"});let o=this.fields?Object(O.a)(this.fields):[];o.push(r),null!=(e=this.capabilities)&&e.operations.supportsQuery&&this.fields&&this.fields.length>0&&o.push(a),this.version>=10.4&&Object(n.l)(this.rasterFunctionInfos)&&this.rasterFunctionInfos.some((e=>"none"===e.name.toLowerCase()))&&o.push(s),Object(n.l)(this.rasterFunctionInfos)&&this.rasterFunctionInfos.filter((e=>"none"!==e.name.toLowerCase())).forEach((e=>{o.push(new te.a({name:"Raster.ServicePixelValue."+e.name,alias:e.name,domain:null,editable:!1,length:50,type:"string"}))})),this._isVectorDataSet()&&(o.push(new te.a({name:"Raster.Magnitude",alias:"Magnitude",domain:null,editable:!1,type:"double"})),o.push(new te.a({name:"Raster.Direction",alias:"Direction",domain:null,editable:!1,type:"double"})));const{attributeTable:l}=null!=(t=this.rasterInfo)?t:{};if(Object(n.l)(l)){const e=l.fields.filter((e=>"esriFieldTypeOID"!==e.type&&"value"!==e.name.toLowerCase())).map((e=>{const t=Object(O.a)(e);return t.name=i+e.name,t}));o=o.concat(e)}return o}set renderingRule(e){let t=e;t&&t.rasterFunction&&(t=F.a.fromJSON({...t.toJSON(),rasterFunction:t.rasterFunction,rasterFunctionArguments:t.rasterFunctionArguments})),this._set("renderingRule",t)}readRenderingRule(e,t){const i=t.rasterFunctionInfos;return t.renderingRule||i&&i.length&&"None"!==i[0].name?this._isRFTJson(t.renderingRule)?F.a.fromJSON({rasterFunctionDefinition:t.renderingRule}):F.a.fromJSON(t.renderingRule||{rasterFunctionInfos:t.rasterFunctionInfos}):null}writeRenderingRule(e,t,i){const a=e.toJSON();a.rasterFunctionDefinition?t[i]=a.rasterFunctionDefinition:t[i]=a}readSpatialReference(e,t){const i=e||t.extent.spatialReference;return i?be.a.fromJSON(i):null}readPixelType(e){return rt.fromJSON(e)||e}writePixelType(e,t,i){(Object(n.k)(this.serviceRasterInfo)||this.pixelType!==this.serviceRasterInfo.pixelType)&&(t[i]=rt.toJSON(e))}readVersion(e,t){let i=t.currentVersion;return i||(i=t.hasOwnProperty("fields")||t.hasOwnProperty("timeInfo")?10:9.3),i}applyFilter(e){let t=e;return this.pixelFilter&&(t=this._clonePixelData(e),this.pixelFilter(t)),t}async applyRenderer(e,t){let i=e;const{renderer:a,symbolizer:r,pixelFilter:n,bandIds:s}=this;if(!this._isPicture()&&a&&r&&!n){const n=JSON.stringify(this._cachedRendererJson)!==JSON.stringify(a.toJSON()),o=this._rasterJobHandler.instance;if(o){n&&(r.bind(),await o.updateSymbolizer(r,t),this._cachedRendererJson=a.toJSON());const l=await o.symbolize({bandIds:s,...e},t);i={extent:e.extent,pixelBlock:l}}else i={extent:e.extent,pixelBlock:r.symbolize({bandIds:s,...e})}}return i}destroy(){this._shutdownJobHandler()}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}async computeAngles(e,t){if(!(await this._fetchCapabilities(null==t?void 0:t.signal)).operations.supportsComputeAngles)throw new f.a("imagery-layer:compute-angles","this operation is not supported on the input image service");return e=Object(u.d)(ke,e).clone(),async function(e,t,i){var a;const r=t.toJSON();Object(n.l)(r.angleName)&&(r.angleName=r.angleName.join(",")),Object(n.l)(t.point)&&null!=(a=t.point.spatialReference)&&a.imageCoordinateSystem&&(r.point.spatialReference=De(t.point.spatialReference)),Object(n.l)(t.spatialReference)&&t.spatialReference.imageCoordinateSystem&&(r.spatialReference=Ne(t.spatialReference));const s=Object(de.c)(e),o=Object(de.b)({...s.query,f:"json",...r}),l=Object(de.a)(o,i),{data:u}=await Object(y.default)(`${s.path}/computeAngles`,l);return u.spatialReference=u.spatialReference?null!=u.spatialReference.geodataXform?new be.a({wkid:0,imageCoordinateSystem:u.spatialReference}):be.a.fromJSON(u.spatialReference):null,"NaN"===u.north&&(u.north=null),"NaN"===u.up&&(u.up=null),new ye(u)}(this.url,e,this._getRequestOptions(t))}async computePixelSpaceLocations(e,t){if(!(await this._fetchCapabilities(null==t?void 0:t.signal)).operations.supportsComputePixelLocation)throw new f.a("imagery-layer:compute-pixel-space-locations","this operation is not supported on the input image service");return e=Object(u.d)(Ye,e).clone(),async function(e,t,i){const a=t.toJSON(),{geometries:r}=t;if(r)for(let c=0;c<r.length;c++){var n;(null==(n=r[c].spatialReference)?void 0:n.imageCoordinateSystem)&&(a.geometries.geometries[c].spatialReference=De(r[c].spatialReference))}const s=Object(de.c)(e),o=Object(de.b)({...s.query,f:"json",...a}),l=Object(de.a)(o,i),{data:u}=await Object(y.default)(`${s.path}/computePixelLocation`,l);return ve.fromJSON(u)}(this.url,e,this._getRequestOptions(t))}async computeHistograms(e,t){if(!(await this._fetchCapabilities(null==t?void 0:t.signal)).operations.supportsComputeHistograms)throw new f.a("imagery-layer:compute-histograms","this operation is not supported on the input image service");e=Object(u.d)(Be,e).clone();const{raster:i,mosaicRule:a,renderingRule:r}=this;return r&&null==e.renderingRule&&(e.renderingRule=r),a&&null==e.mosaicRule&&(e.mosaicRule=a),i&&null==e.raster&&(e.raster=i),async function(e,t,i){const a=await Fe(e,t,i),r=Object(de.c)(e),{data:n}=await Object(y.default)(`${r.path}/computeHistograms`,a);return{histograms:n.histograms}}(this.url,e,this._getRequestOptions(t))}async computeStatisticsHistograms(e,t){if(!(await this._fetchCapabilities(null==t?void 0:t.signal)).operations.supportsComputeStatisticsHistograms)throw new f.a("imagery-layer:compute-statistics-histograms","this operation is not supported on the input image service");e=Object(u.d)(Be,e).clone();const{raster:i,mosaicRule:a,renderingRule:r}=this;return r&&null==e.renderingRule&&(e.renderingRule=r),a&&null==e.mosaicRule&&(e.mosaicRule=a),i&&null==e.raster&&(e.raster=i),async function(e,t,i){const a=await Fe(e,t,i),r=Object(de.c)(e),{data:n}=await Object(y.default)(`${r.path}/computeStatisticsHistograms`,a),{statistics:s}=n;return null!=s&&s.length&&s.forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation})),{statistics:s,histograms:n.histograms}}(this.url,e,this._getRequestOptions(t))}getField(e){const{fieldsIndex:t}=this;return Object(n.l)(t)?t.get(e):void 0}getFieldDomain(e,t){const i=this.getField(e);return i?i.domain:null}async fetchImage(e,t,i,a={}){if(null==e||null==t||null==i)throw new f.a("imagery-layer:fetch-image","Insufficient parameters for requesting an image. A valid extent, width and height values are required.");if(this.renderer||this.symbolizer){const e=await this.generateRasterInfo(this.renderingRule,{signal:a.signal});e&&(this.rasterInfo=e)}const r=this.getExportImageServiceParameters(e,t,i,a.timeExtent);if(null==r){var n,s,o,l,u;if(a.requestAsImageElement&&this._canRequestImageElement(this.format)){const e=document.createElement("canvas");return e.width=t,e.height=i,{imageOrCanvasElement:e}}const r=null!=(n=(null==(s=this.bandIds)?void 0:s.length)||(null==(o=this.rasterInfo)?void 0:o.bandCount))?n:0,c=t*i,p=null!=(l=null==(u=this.rasterInfo)?void 0:u.pixelType)?l:"unknown",m=[];for(let e=0;e<r;e++)m.push(re.a.createEmptyBand(p,c));return{pixelData:{pixelBlock:new re.a({width:t,height:i,pixels:m,mask:new Uint8Array(c),pixelType:p}),extent:e}}}const c={imageServiceParameters:r,imageProps:{extent:e,width:t,height:i,format:this.format},requestAsImageElement:a.requestAsImageElement&&!this.pixelFilter||!1,signal:a.signal};return this._requestArrayBuffer(c)}fetchKeyProperties(e){return Object(y.default)(i(this.parsedUrl)+"/keyProperties",{query:this._getQueryParams({renderingRule:this.version>=10.3?null==e?void 0:e.renderingRule:null})}).then((e=>e.data))}fetchRasterAttributeTable(e){return this.version<10.1?Promise.reject(new f.a("#fetchRasterAttributeTable()","Failed to get rasterAttributeTable")):Object(y.default)(i(this.parsedUrl)+"/rasterAttributeTable",{query:this._getQueryParams({renderingRule:this.version>=10.3?null==e?void 0:e.renderingRule:null})}).then((e=>fe.default.fromJSON(e.data)))}getCatalogItemRasterInfo(e,t){const a={...t,query:this._getQueryParams()};return async function(e,t,i){var a,r;const n=Object(de.c)(e),s=Object(de.b)({...null==n?void 0:n.query,f:"json"}),o=Object(de.a)(s,i),l=`${null==n?void 0:n.path}/${t}/info`,u=Object(y.default)(`${l}`,o),c=Object(y.default)(`${l}/keyProperties`,o),p=await Promise.allSettled([u,c]),m="fulfilled"===p[0].status?p[0].value.data:null,d="fulfilled"===p[1].status?p[1].value.data:null;let b=null;(null==(a=m.statistics)?void 0:a.length)&&(b=m.statistics.map((e=>({min:e[0],max:e[1],avg:e[2],stddev:e[3]}))));const h=_e.a.fromJSON(m.extent),f=Math.ceil(h.width/m.pixelSizeX-.1),g=Math.ceil(h.height/m.pixelSizeY-.1),O=h.spatialReference,j=new W.a({x:m.pixelSizeX,y:m.pixelSizeY,spatialReference:O}),v=null!=(r=m.histograms)&&r.length?m.histograms:null,R=new qe.a({origin:m.origin,blockWidth:m.blockWidth,blockHeight:m.blockHeight,firstPyramidLevel:m.firstPyramidLevel,maximumPyramidLevel:m.maxPyramidLevel});return new ne.a({width:f,height:g,bandCount:m.bandCount,extent:h,spatialReference:O,pixelSize:j,pixelType:m.pixelType.toLowerCase(),statistics:b,histograms:v,keyProperties:d,storageInfo:R})}(i(this.parsedUrl),e,a)}async getCatalogItemICSInfo(e,t){const{data:a}=await Object(y.default)(i(this.parsedUrl)+"/"+e+"/info/ics",{query:this._getQueryParams(),...t}),r=a&&a.ics;if(!r)return;let n=null;try{n=(await Object(y.default)(i(this.parsedUrl)+"/"+e+"/info",{query:this._getQueryParams(),...t})).data.extent}catch{}if(!n||!n.spatialReference)return{ics:r,icsToPixelTransform:null,icsExtent:null,northDirection:null};const s=this.version>=10.7?Object(y.default)(i(this.parsedUrl)+"/"+e+"/info/icstopixel",{query:this._getQueryParams(),...t}).then((e=>e.data)).catch((()=>({}))):{},o=n.spatialReference,l={geometries:JSON.stringify({geometryType:"esriGeometryEnvelope",geometries:[n]}),inSR:o.wkid||JSON.stringify(o),outSR:"0:"+e},u=Object(y.default)(i(this.parsedUrl)+"/project",{query:this._getQueryParams(l),...t}).then((e=>e.data)).catch((()=>({}))),c=(n.xmin+n.xmax)/2,p=(n.ymax-n.ymin)/6,m=n.ymin+p,d=[];for(let i=0;i<5;i++)d.push({x:c,y:m+p*i});const b={geometries:JSON.stringify({geometryType:"esriGeometryPoint",geometries:d}),inSR:o.wkid||JSON.stringify(o),outSR:"0:"+e},h=Object(y.default)(i(this.parsedUrl)+"/project",{query:this._getQueryParams(b),...t}).then((e=>e.data)).catch((()=>({}))),f=await Promise.all([s,u,h]);let g=f[0].ipxf;if(null==g){var O,j,v;const e=null==(O=r.geodataXform)?void 0:O.xf_0;"topup"===(null==e||null==(j=e.name)?void 0:j.toLowerCase())&&6===(null==e||null==(v=e.coefficients)?void 0:v.length)&&(g={affine:{name:"ics [sensor: Frame] to pixel (column, row) transformation",coefficients:e.coefficients,cellsizeRatio:0,type:"GeometricXform"}})}const R=_e.a.fromJSON(f[1]&&f[1].geometries&&f[1].geometries[0]);R&&(R.spatialReference=new be.a({wkid:0,imageCoordinateSystem:r}));const w=f[2].geometries?f[2].geometries.filter((e=>null!=e&&null!=e.x&&null!=e.y&&"NaN"!==e.x&&"NaN"!==e.y)):[],S=w.length;if(S<3)return{ics:r,icsToPixelTransform:g,icsExtent:R,northDirection:null};let x=0,I=0,F=0,T=0;for(let i=0;i<S;i++)x+=w[i].x,I+=w[i].y,F+=w[i].x*w[i].x,T+=w[i].x*w[i].y;const D=(S*T-x*I)/(S*F-x*x);let N=0;const P=w[4].x>w[0].x,C=w[4].y>w[0].y;return D===1/0?N=C?90:270:0===D?N=P?0:180:D>0?N=P?180*Math.atan(D)/Math.PI:180*Math.atan(D)/Math.PI+180:D<0&&(N=C?180+180*Math.atan(D)/Math.PI:360+180*Math.atan(D)/Math.PI),{ics:r,icsToPixelTransform:g,icsExtent:R,northDirection:N}}async generateRasterInfo(e,t){var i;if(this.serviceRasterInfo&&(!e||"none"===(null==(i=e.functionName)?void 0:i.toLowerCase())||this._isVectorFieldResampleFunction(e)))return this.serviceRasterInfo;const a=function(e){var t;if(!e)return null;const i=null==(t=JSON.stringify(e).match(/"rasterFunction":"(.*?")/gi))?void 0:t.map((e=>e.replace('"rasterFunction":"',"").replace('"',"")));return i?i.join("/"):null}(e);if(!a)return null;if(this._functionRasterInfos[a])return this._functionRasterInfos[a];const r=this._generateRasterInfo(e,t);this._functionRasterInfos[a]=r;try{return await r}catch{return this._functionRasterInfos[a]=null,null}}getExportImageServiceParameters(e,t,a,r){var s,o;const l=Ne((e=e.clone().shiftCentralMeridian()).spatialReference,i(this.parsedUrl));this.pixelType!==(null==(s=this.serviceRasterInfo)?void 0:s.pixelType)&&(this.exportImageServiceParameters.pixelType=this.pixelType);const u=this.exportImageServiceParameters.toJSON(),{bandIds:c,noData:p}=u;let{renderingRule:m}=u;const d=null==(o=this.renderingRule)?void 0:o.rasterFunctionDefinition,b=!this.renderer||"raster-stretch"===this.renderer.type;if(null!=c&&c.length&&this._hasRenderingRule(this.renderingRule)&&!d&&b){const e={rasterFunction:"ExtractBand",rasterFunctionArguments:{BandIds:c}};if("Stretch"===m.rasterFunction)e.rasterFunctionArguments.Raster=m.rasterFunctionArguments.Raster,m.rasterFunctionArguments.Raster=e;else if("Colormap"===m.rasterFunction){const t=m.rasterFunctionArguments.Raster;"Stretch"===(null==t?void 0:t.rasterFunction)?(e.rasterFunctionArguments.Raster=t.rasterFunctionArguments.Raster,t.rasterFunctionArguments.Raster=e):(e.rasterFunctionArguments.Raster=t,m.rasterFunctionArguments.Raster=e)}else e.rasterFunctionArguments.Raster=m,m=e;u.bandIds=void 0}else u.bandIds=null==c?void 0:c.join(",");p instanceof Array&&p.length>0&&(u.noData=p.join(","));const h=this._serviceSupportsMosaicRule?this._combineMosaicRuleWithTimeExtent(this.exportImageServiceParameters.mosaicRule,r):null;u.mosaicRule=Object(n.l)(h)?JSON.stringify(h):null;const{multidimensionalSubset:y}=this;if(y&&Object(n.l)(h)&&h.multidimensionalDefinition&&Object(oe.f)(h.multidimensionalDefinition,y,!0))return null;u.renderingRule=this._getRenderingRuleString(F.a.fromJSON(m));const f={};if(r){const{start:e,end:t}=r.toJSON();let i;if(e&&t&&e===t?(f.time=""+e,i=[e]):null==e&&null==t||(f.time=`${null!=e?e:"null"},${null!=t?t:"null"}`,i=null!=e&&null!=t?[e,t]:[null!=e?e:t]),i&&y){const e=y.dimensions.find((({name:e})=>"StdTime"===e));if(2===i.length&&e.extent.length){var g;if(i[0]=Math.max(i[0],e.extent[0]),i[1]=Math.min(i[1],null!=(g=e.extent[1])?g:e.extent[0]),i[1]<i[0])return null;f.time=i.join()}const t=new x.a({variableName:"",dimensionName:"StdTime",isSlice:1===i.length,values:i});if(Object(oe.f)([t],y,!0))return null}}return{bbox:e.xmin+","+e.ymin+","+e.xmax+","+e.ymax,bboxSR:l,imageSR:l,size:t+","+a,...u,...f}}async getSamples(e,t){var i;if(null==(i=await this._fetchCapabilities(null==t?void 0:t.signal))||!i.operations.supportsGetSamples)throw new f.a("imagery-layer:get-samples","getSamples operation is not supported on the input image service");e=Object(u.d)(it,e).clone();const{raster:a}=this;return a&&null==e.raster&&(e.raster=a),async function(e,t,i){var a,r,s;const o=t.toJSON();Ie(o),(null==(a=o.outFields)?void 0:a.length)&&(o.outFields=o.outFields.join(","));const l=null==(r=await Object(me.a)(t.geometry))?void 0:r[0];Object(n.l)(l)&&(o.geometry=l.toJSON());const u=Object(de.c)(e),c=Object(de.b)({...u.query,f:"json",...o}),p=Object(de.a)(c,i),{data:m}=await Object(y.default)(`${u.path}/getSamples`,p),d=null==m||null==(s=m.samples)?void 0:s.map((e=>{const t="NaN"===e.value||""===e.value?null:e.value.split(" ").map((e=>Number(e)));return{...e,pixelValue:t}}));return xe.fromJSON({samples:d})}(this.url,e,this._getRequestOptions(t))}async identify(e,t){if(!(await this._fetchCapabilities(null==t?void 0:t.signal)).operations.supportsIdentify)throw new f.a("imagery-layer:query-rasters","query operation is not supported on the input image service");e=Object(u.d)(Ke,e).clone();const{raster:i,mosaicRule:a,renderingRule:r}=this;if(r&&null==e.renderingRule&&(e.renderingRule=r),a&&null==e.mosaicRule){const t=this._combineMosaicRuleWithTimeExtent(a,e.timeExtent);e.mosaicRule=Object(n.t)(t)}return i&&null==e.raster&&(e.raster=i),Te(this.url,e,this._getRequestOptions(t))}createQuery(){const e=new Ae.a;return e.outFields=["*"],e.returnGeometry=!0,e.where=this.definitionExpression||"1=1",e}async queryRasters(e,t){return({query:e,requestOptions:t}=await this._prepareForQuery(e,t)),Object(Ce.a)(this.url,e,t)}async queryObjectIds(e,t){return({query:e,requestOptions:t}=await this._prepareForQuery(e,t)),Object(Ee.a)(this.url,e,t)}async queryRasterCount(e,t){return({query:e,requestOptions:t}=await this._prepareForQuery(e,t)),Object(Je.a)(this.url,e,t)}async queryVisibleRasters(e,t){if(!e)throw new f.a("imagery-layer: query-visible-rasters","missing query parameter");await this.load();const{pixelSize:i,returnDomainValues:a,returnTopmostRaster:r,showNoDataRecords:s}=t||{pixelSize:null,returnDomainValues:!1,returnTopmostRaster:!1,showNoDataRecords:!1};let o=!1,l=null,u=null;const c="raster.servicepixelvalue",p=this._rasterFunctionNamesIndex;if(Object(n.l)(e.outFields)&&(o=e.outFields.some((e=>!e.toLowerCase().includes(c))),this.version>=10.4)){const t=e.outFields.filter((e=>e.toLowerCase().includes(c)&&e.length>c.length)).map((e=>{const t=e.slice(c.length+1);return[this._updateRenderingRulesFunctionName(t,p),t]}));l=t.map((e=>new F.a({functionName:e[0]}))),u=t.map((e=>e[1]));const{renderingRule:i}=this;0===l.length?null!=i&&i.functionName?(l.push(i),u.push(i.functionName)):l=null:(null==i?void 0:i.functionName)&&!l.some((e=>e.functionName===i.functionName))&&(l.push(i),u.push(i.functionName))}const m=Object(n.k)(e.outSpatialReference)||e.outSpatialReference.equals(this.spatialReference),d=e.timeExtent||this.timeExtent,b=this._combineMosaicRuleWithTimeExtent(this.exportImageServiceParameters.mosaicRule,d),h=this._getQueryParams({geometry:e.geometry,timeExtent:d,mosaicRule:b,renderingRule:this.version<10.4?this.renderingRule:null,renderingRules:l,pixelSize:i,returnCatalogItems:o,returnGeometry:m,raster:this.raster,maxItemCount:r?1:null});delete h.f;const y=new Ke(h);try{var g,O,j,v;await this.generateRasterInfo(this.renderingRule);const i=await Te(this.url,y,{signal:null==t?void 0:t.signal,query:{...this.customParameters}}),r=e.outFields,l=null!=i.value&&i.value.toLowerCase().includes("nodata");if(!o||m||null==i||null==(g=i.catalogItems)||!g.features.length||!s&&l)return this._processVisibleRastersResponse(i,{returnDomainValues:a,templateRRFunctionNames:u,showNoDataRecords:s,templateFields:r});const c=this.objectIdField||"ObjectId",p=null!=(O=null==(j=i.catalogItems)?void 0:j.features)?O:[],d=p.map((e=>{var t;return null==(t=e.attributes)?void 0:t[c]})),b=new Ae.a({objectIds:d,returnGeometry:!0,outSpatialReference:e.outSpatialReference,outFields:[c]}),h=await this.queryRasters(b);return null!=h&&null!=(v=h.features)&&v.length&&h.features.forEach((t=>{p.forEach((i=>{i.attributes[c]===t.attributes[c]&&(i.geometry=new Me.a(t.geometry),Object(n.l)(e.outSpatialReference)&&(i.geometry.spatialReference=e.outSpatialReference))}))})),this._processVisibleRastersResponse(i,{returnDomainValues:a,templateRRFunctionNames:u,showNoDataRecords:s,templateFields:r})}catch{throw new f.a("imagery-layer:query-visible-rasters","encountered error when querying visible rasters")}}async fetchVariableStatisticsHistograms(e,t){const a=Object(y.default)(i(this.parsedUrl)+"/statistics",{query:this._getQueryParams({variable:e}),signal:t}).then((e=>{var t;return null==(t=e.data)?void 0:t.statistics})),r=Object(y.default)(i(this.parsedUrl)+"/histograms",{query:this._getQueryParams({variable:e}),signal:t}).then((e=>{var t;return null==(t=e.data)?void 0:t.histograms})),n=await Promise.all([a,r]);return n[0]&&n[0].forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation})),{statistics:n[0]||null,histograms:n[1]||null}}async createFlowMesh(e,t){const i=this._rasterJobHandler.instance;return i?i.createFlowMesh(e,t):Object(at.a)(e.meshType,e.simulationSettings,e.flowData,Object(n.l)(t.signal)?t.signal:(new AbortController).signal)}getMultidimensionalSubsetVariables(e){const t=null!=e?e:this.multidimensionalInfo;return Object(oe.e)(this.multidimensionalSubset,t)}async _fetchService(e){await this._fetchServiceInfo(e),this.rasterInfo||(this.rasterInfo=this.serviceRasterInfo);const t=this.sourceJSON,a=Object(n.l)(this.serviceRasterInfo)?Promise.resolve(this.serviceRasterInfo):Object(Le.a)(i(this.parsedUrl),t,{signal:e,query:this._getQueryParams()}).then((e=>(this._set("serviceRasterInfo",e),e))),r=this._hasRenderingRule(this.renderingRule)?this.generateRasterInfo(this.renderingRule,{signal:e}):null,s=this._getRasterFunctionInfos();return Promise.all([a,r,s]).then((e=>{e[1]?this._set("rasterInfo",e[1]):this._set("rasterInfo",e[0]),e[2]&&this._set("rasterFunctionInfos",e[2]),this.renderer&&!this._isSupportedRenderer(this.renderer)&&(this._set("renderer",null),j.a.getLogger(this.declaredClass).warn("ArcGISImageService","Switching to the default renderer. Renderer applied is not valid for this Imagery Layer")),this._set("renderer",this._configRenderer(this.renderer)),this.addHandles([Object(v.f)((()=>this.renderingRule),(e=>{(this.renderer||this.symbolizer||this.popupEnabled&&this.popupTemplate)&&this.generateRasterInfo(e).then((e=>{e&&(this.rasterInfo=e)}))}))]);const{serviceRasterInfo:t}=this;t&&Object(n.l)(t.multidimensionalInfo)&&this._updateMultidimensionalDefinition(t)}))}_combineMosaicRuleWithTimeExtent(e,t){var i;const a=this.timeInfo;if(Object(n.k)(e)||Object(n.k)(this.multidimensionalInfo)||Object(n.k)(t)||Object(n.k)(null==a?void 0:a.startField))return e;const{startField:r}=a,s=this.multidimensionalInfo.variables.some((e=>e.dimensions.some((e=>e.name===r))))?r:"StdTime";if(e=e.clone(),"mosaic-dataset"===this.sourceType)return e.multidimensionalDefinition=null==(i=e.multidimensionalDefinition)?void 0:i.filter((e=>e.dimensionName!==s)),this._cleanupMultidimensionalDefinition(e);e.multidimensionalDefinition=e.multidimensionalDefinition||[];const o=e.multidimensionalDefinition.filter((e=>e.dimensionName===s)),l=Object(n.l)(t.start)?t.start.getTime():null,u=Object(n.l)(t.end)?t.end.getTime():null,c=null==l||null==u||l===u,p=c?[l||u]:[[l,u]],m=this.version>=10.8;if(o.length)o.forEach((e=>{e.dimensionName===s&&(m?(e.dimensionName=null,e.isSlice=!1,e.values=[]):(e.isSlice=c,e.values=p))}));else if(!m){const t=e.multidimensionalDefinition.filter((e=>null!=e.variableName&&null==e.dimensionName));t.length?t.forEach((e=>{e.dimensionName=s,e.isSlice=c,e.values=p})):e.multidimensionalDefinition.push(new x.a({variableName:"",dimensionName:s,isSlice:c,values:p}))}return this._cleanupMultidimensionalDefinition(e)}_cleanupMultidimensionalDefinition(e){return Object(n.k)(e)?null:(e.multidimensionalDefinition&&(e.multidimensionalDefinition=e.multidimensionalDefinition.filter((e=>!(!e.variableName&&!e.dimensionName))),0===e.multidimensionalDefinition.length&&(e.multidimensionalDefinition=null)),"mosaic-dataset"!==this.sourceType&&null==e.multidimensionalDefinition?null:e)}async _prepareForQuery(e,t){var i;if(!(await this._fetchCapabilities(null==(i=t)?void 0:i.signal)).operations.supportsQuery)throw new f.a("imagery-layer:query-rasters","query operation is not supported on the input image service");return e=Object(n.l)(e)?Object(u.d)(Ae.a,e):this.createQuery(),t=this._getRequestOptions(t),this.raster&&(t.query={...t.query,raster:this.raster}),{query:e,requestOptions:t}}async _initJobHandler(){if(null!=this._rasterJobHandler.connectionPromise)return this._rasterJobHandler.connectionPromise;const e=new se.a;this._rasterJobHandler.connectionPromise=e.initialize().then((()=>{this._rasterJobHandler.instance=e}),(()=>{})),await this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this._cachedRendererJson=null}_isSupportedRenderer(e){const{rasterInfo:t,renderingRule:i}=this;return"unique-value"===e.type&&this._hasRenderingRule(i)&&1===(null==t?void 0:t.bandCount)&&["u8","s8"].includes(t.pixelType)||null!=t&&null!=e&&Object(ce.d)(t).includes(e.type)}async _fetchCapabilities(e){return this.capabilities||await this._fetchServiceInfo(e),this.capabilities}async _fetchServiceInfo(e){var t;let a=this.sourceJSON;if(!a){const{data:t,ssl:r}=await Object(y.default)(i(this.parsedUrl),{query:this._getQueryParams(),signal:e});a=t,this.sourceJSON=a,r&&(this.url=this.url.replace(/^http:/i,"https:"))}if((null==(t=a.capabilities)?void 0:t.toLowerCase().split(",").map((e=>e.trim())).indexOf("tilesonly"))>-1)throw new f.a("imagery-layer:fetch-service-info","use ImageryTileLayer to open tiles-only image services");this.read(a,{origin:"service",url:this.parsedUrl})}_isMosaicDataset(e){var t;return e.serviceSourceType?"esriImageServiceSourceTypeMosaicDataset"===e.serviceSourceType:(null==(t=e.fields)?void 0:t.length)>0}_isMosaicRuleSupported(e){var t;if(!e)return!1;const i=this._isMosaicDataset(e),a=e.currentVersion>=10.71&&e.hasMultidimensions&&!((null==(t=e.fields)?void 0:t.length)>1);return i||a}_isVectorFieldResampleFunction(e){if(Object(n.k)(e))return!1;const{functionName:t,functionArguments:i}=e,a="resample"===(null==t?void 0:t.toLowerCase()),r=(null==i?void 0:i.ResampleType)||(null==i?void 0:i.resampleType);return a&&(7===r||10===r)}_isPicture(){return!this.format||this.format.includes("jpg")||this.format.includes("png")}_configRenderer(e){if(!this._isPicture()&&!this.pixelFilter||this._isVectorDataSet()){var t,i;if(!this.bandIds&&this.rasterInfo&&this.rasterInfo.bandCount>=3){const e=Object(ce.b)(this.rasterInfo);!e||3===this.rasterInfo.bandCount&&0===e[0]&&1===e[1]&&2===e[2]||(this.bandIds=e)}e||(e=Object(ce.a)(this.rasterInfo,{bandIds:this.bandIds,variableName:this.renderingRule?null:null==(t=this.mosaicRule)||null==(i=t.multidimensionalDefinition)?void 0:i[0].variableName}));const a=Object(ce.e)(e.toJSON());this.symbolizer?(this.symbolizer.rendererJSON=a,this.symbolizer.rasterInfo=this.rasterInfo):this.symbolizer=new pe.a({rendererJSON:a,rasterInfo:this.rasterInfo}),this.symbolizer.bind().success||(this.symbolizer=null)}return e}_clonePixelData(e){return null==e?e:{extent:e.extent&&e.extent.clone(),pixelBlock:Object(n.l)(e.pixelBlock)?e.pixelBlock.clone():null}}_getQueryParams(e){e&&Object(n.l)(e.renderingRule)&&"string"!=typeof e.renderingRule&&(e.renderingRule=this._getRenderingRuleString(e.renderingRule));const{raster:t,viewId:i}=this;return{raster:t,viewId:i,f:"json",...e,...this.customParameters}}_getRequestOptions(e){return{...e,query:{...null==e?void 0:e.query,...this.customParameters}}}_decodePixelBlock(e,t,i){return this._rasterJobHandler.instance?this._rasterJobHandler.instance.decode({data:e,options:t}):Object(le.a)(e,t,i)}async _getRasterFunctionInfos(e){const t=this.sourceJSON.rasterFunctionInfos;return this.loaded?t:t&&this.version>=10.3?1===t.length&&"none"===t[0].name.toLowerCase()?t:null==(a=(await Object(y.default)(i(this.parsedUrl)+"/rasterFunctionInfos",{query:this._getQueryParams(),signal:e})).data)?void 0:a.rasterFunctionInfos:null;var a}_canRequestImageElement(e){return!this.pixelFilter&&(!e||e.includes("png"))}async _requestArrayBuffer(e){const{imageProps:t,requestAsImageElement:a,signal:r}=e;if(a&&this._canRequestImageElement(t.format))return{imageOrCanvasElement:(await Object(y.default)(i(this.parsedUrl)+"/exportImage",{responseType:"image",query:this._getQueryParams({f:"image",...this.refreshParameters,...e.imageServiceParameters}),signal:r})).data,params:t};const n=this._initJobHandler(),s=Object(y.default)(i(this.parsedUrl)+"/exportImage",{responseType:"array-buffer",query:this._getQueryParams({f:"image",...e.imageServiceParameters}),signal:r}),o=(await Promise.all([s,n]))[0].data,l=t.format||"jpgpng";let u=l;if("bsq"!==u&&"bip"!==u&&(u=Object(le.b)(o)),!u)throw new f.a("imagery-layer:fetch-image","unsupported format signature "+String.fromCharCode.apply(null,new Uint8Array(o)));const c={signal:r},p="gif"===l||"bmp"===l||l.includes("png")&&("png"===u||"jpg"===u)?Object(le.a)(o,{useCanvas:!0,...t},c):this._decodePixelBlock(o,{width:t.width,height:t.height,planes:null,pixelType:null,noDataValue:null,format:l},c);return{pixelData:{pixelBlock:await p,extent:t.extent},params:t}}_generateRasterInfo(e,t){const a={...t,query:this._getQueryParams()};return Object(Le.b)(i(this.parsedUrl),e,a)}_isValidCustomizedMosaicRule(e){var t;return e&&JSON.stringify(e.toJSON())!==JSON.stringify(null==(t=this.defaultMosaicRule)?void 0:t.toJSON())}_updateMultidimensionalDefinition(e){if(this._isValidCustomizedMosaicRule(this.mosaicRule))return;const t=Object(oe.b)(e,{multidimensionalSubset:this.multidimensionalSubset});if(Object(n.l)(t)&&t.length>0){var i;this.mosaicRule=this.mosaicRule||new X;const e=this.mosaicRule.multidimensionalDefinition;!this.sourceJSON.defaultVariableName&&this.renderingRule&&"none"!==(null==(i=this.renderingRule.functionName)?void 0:i.toLowerCase())&&t.forEach((e=>e.variableName="")),(!e||e&&e.length<=0)&&(this.mosaicRule.multidimensionalDefinition=t)}}_processVisibleRastersResponse(e,t){t=t||{};const i=e.value,{templateRRFunctionNames:a,showNoDataRecords:r,returnDomainValues:s,templateFields:o}=t,l=e.processedValues;let u=e.catalogItems&&e.catalogItems.features,c=e.properties&&e.properties.Values&&e.properties.Values.map((e=>e.replace(/ /gi,", ")))||[];const p=this.objectIdField||"ObjectId",m="string"==typeof i&&i.toLowerCase().includes("nodata"),d=[];if(i&&!u&&!m){const e={};e[p]=0,c=[i],u=[new b.a(this.fullExtent,null,e)]}if(!u)return[];let h,y,f;this._updateResponseFieldNames(u,o),m&&!r&&(u=[]);for(let b=0;b<u.length;b++){if(h=u[b],null!=i){var g;if(y=c[b],f=this.renderingRule&&l&&l.length>0&&a&&a.length>0&&a.includes(this.renderingRule.functionName)?l[a.indexOf(this.renderingRule.functionName)]:i,"nodata"===y.toLowerCase()&&!r)continue;const e="Raster.ItemPixelValue",t="Raster.ServicePixelValue";h.attributes[e]=y,h.attributes[t]=f,this._updateFeatureWithMagDirValues(h,y);const s=this.fields&&this.fields.length>0;let o=this.renderingRule&&Object(n.l)(null==(g=this.serviceRasterInfo)?void 0:g.attributeTable)?s?y:i:f;this.renderingRule||(o=s?y:i),this._updateFeatureWithRasterAttributeTableValues(h,o)}if(h.sourceLayer=h.layer=this,s&&this._updateFeatureWithDomainValues(h),a&&l&&a.length===l.length)for(let e=0;e<a.length;e++){const t="Raster.ServicePixelValue."+a[e];h.attributes[t]=l[e]}d.push(u[b])}return d}_updateFeatureWithRasterAttributeTableValues(e,t){var i;const a=this.rasterInfo&&this.rasterInfo.attributeTable||(null==(i=this.serviceRasterInfo)?void 0:i.attributeTable);if(Object(n.k)(a))return;const{features:r,fields:s}=a,o=s.map((e=>e.name)).filter((e=>"value"===e.toLowerCase())),l=o&&o[0];if(!l)return;const u=r.filter((e=>e.attributes[l]===(null!=t?parseInt(t,10):null)));u&&u[0]&&s.forEach((t=>{const i=this._rasterAttributeTableFieldPrefix+t.name;e.attributes[i]=u[0].attributes[t.name]}))}_updateFeatureWithMagDirValues(e,t){if(!this._isVectorDataSet())return;const i=t.split(/,\s*/).map((e=>parseFloat(e))),a=i.map((e=>[e])),r=i.map((e=>({minValue:e,maxValue:e,noDataValue:null}))),n=new re.a({height:1,width:1,pixelType:"f32",pixels:a,statistics:r});null!=this.pixelFilter&&this.pixelFilter({pixelBlock:n,extent:new _e.a(0,0,0,0,this.spatialReference)});const s="esriImageServiceDataTypeVector-MagDir"===this.serviceDataType?[n.pixels[0][0],n.pixels[1][0]]:Object(ue.f)([n.pixels[0][0],n.pixels[1][0]]);e.attributes["Raster.Magnitude"]=s[0],e.attributes["Raster.Direction"]=s[1]}_updateFeatureWithDomainValues(e){const t=this.fields&&this.fields.filter((e=>e.domain&&"coded-value"===e.domain.type));null!=t&&t.forEach((t=>{const i=e.attributes[t.name];if(null!=i){const a=t.domain.codedValues.find((e=>e.code===i));a&&(e.attributes[t.name]=a.name)}}))}_updateResponseFieldNames(e,t){if(!t||t.length<1)return;const i=this.fieldsIndex;Object(n.k)(i)||e.forEach((e=>{if(e&&e.attributes)for(const r of t){var a;const t=null==(a=i.get(r))?void 0:a.name;t&&t!==r&&(e.attributes[r]=e.attributes[t],delete e.attributes[t])}}))}_getRenderingRuleString(e){if(this._hasRenderingRule(e)){var t;let i=e.toJSON();return i=null!=(t=i.rasterFunctionDefinition)?t:i,(i.thumbnail||i.thumbnailEx)&&(i.thumbnail=i.thumbnailEx=null),JSON.stringify(i)}return null}_hasRenderingRule(e){return null!=e&&null!=e.functionName&&"none"!==e.functionName.toLowerCase()}_updateRenderingRulesFunctionName(e,t){if(!e||e.length<1)return;if("Raw"===e)return e.replace("Raw","None");const i=e.toLowerCase().replace(/ /gi,"_");return t.has(i)?t.get(i):e}_isRFTJson(e){return e&&e.name&&e.arguments&&e.function&&e.hasOwnProperty("functionType")}_isVectorDataSet(){return"esriImageServiceDataTypeVector-UV"===this.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===this.serviceDataType}_readCapabilities(e){const t=e.capabilities?e.capabilities.toLowerCase().split(",").map((e=>e.trim())):["image","catalog"],{currentVersion:i,advancedQueryCapabilities:a,maxRecordCount:r}=e,n=t.includes("image"),s="esriImageServiceDataTypeElevation"===e.serviceDataType,o=!!(e.spatialReference||e.extent&&e.extent.spatialReference),l=t.includes("edit");return{data:{supportsAttachment:!1},operations:{supportsComputeHistograms:n,supportsExportImage:n,supportsIdentify:n,supportsMeasure:t.includes("mensuration")&&o,supportsDownload:t.includes("download"),supportsQuery:t.includes("catalog")&&e.fields&&e.fields.length>0,supportsGetSamples:i>=10.2&&n,supportsProject:i>=10.3&&n,supportsComputeStatisticsHistograms:i>=10.4&&n,supportsQueryBoundary:i>=10.6&&n,supportsCalculateVolume:i>=10.7&&s,supportsComputePixelLocation:i>=10.7&&t.includes("catalog"),supportsComputeAngles:i>=10.91,supportsAdd:l,supportsDelete:l,supportsEditing:l,supportsUpdate:l,supportsCalculate:!1,supportsTruncate:!1,supportsValidateSql:!1,supportsChangeTracking:!1,supportsQueryAttachments:!1,supportsResizeAttachments:!1,supportsSync:!1,supportsExceedsLimitStatistics:!1,supportsQueryAnalytics:!1,supportsQueryTopFeatures:!1},query:{maxRecordCount:r,maxRecordCountFactor:void 0,supportsStatistics:!(null==a||!a.supportsStatistics),supportsOrderBy:!(null==a||!a.supportsOrderBy),supportsDistinct:!(null==a||!a.supportsDistinct),supportsPagination:!(null==a||!a.supportsPagination),supportsStandardizedQueriesOnly:!(null==a||!a.useStandardizedQueries),supportsPercentileStatistics:!(null==a||!a.supportsPercentileStatistics),supportsCentroid:!(null==a||!a.supportsReturningGeometryCentroid),supportsDistance:!(null==a||!a.supportsQueryWithDistance),supportsExtent:!(null==a||!a.supportsReturningQueryExtent),supportsGeometryProperties:!(null==a||!a.supportsReturningGeometryProperties),supportsHavingClause:!(null==a||!a.supportsHavingClause),supportsQuantization:!1,supportsQuantizationEditMode:!1,supportsQueryGeometry:!1,supportsResultType:!1,supportsMaxRecordCountFactor:!1,supportsSqlExpression:!1,supportsTopFeaturesQuery:!1,supportsQueryByOthers:!1,supportsHistoricMoment:!1,supportsFormatPBF:!1,supportsDisjointSpatialRelationship:!1,supportsCacheHint:!1,supportsSpatialAggregationStatistics:!1,supportedSpatialAggregationStatistics:{envelope:!1,centroid:!1,convexHull:!1},supportsDefaultSpatialReference:!(null==a||!a.supportsDefaultSR),supportsFullTextSearch:!1,supportsCompactGeometry:!1,standardMaxRecordCount:void 0,tileMaxRecordCount:void 0}}}};function i(e){var t;return null!=(t=null==e?void 0:e.path)?t:""}return Object(a.a)([Object(l.b)()],t.prototype,"_functionRasterInfos",void 0),Object(a.a)([Object(l.b)()],t.prototype,"_rasterJobHandler",void 0),Object(a.a)([Object(l.b)()],t.prototype,"_cachedRendererJson",void 0),Object(a.a)([Object(l.b)({readOnly:!0})],t.prototype,"_serviceSupportsMosaicRule",void 0),Object(a.a)([Object(w.a)("_serviceSupportsMosaicRule",["currentVersion","fields"])],t.prototype,"readServiceSupportsMosaicRule",null),Object(a.a)([Object(l.b)()],t.prototype,"_rasterAttributeTableFieldPrefix",void 0),Object(a.a)([Object(l.b)({readOnly:!0})],t.prototype,"_rasterFunctionNamesIndex",null),Object(a.a)([Object(l.b)()],t.prototype,"adjustAspectRatio",void 0),Object(a.a)([Object(l.b)({type:[u.a],json:{write:!0}})],t.prototype,"bandIds",void 0),Object(a.a)([Object(w.a)("bandIds")],t.prototype,"readBandIds",null),Object(a.a)([Object(l.b)({readOnly:!0,json:{read:!1}})],t.prototype,"capabilities",void 0),Object(a.a)([Object(w.a)("service","capabilities",["capabilities","currentVersion","serviceDataType"])],t.prototype,"readCapabilities",null),Object(a.a)([Object(l.b)({type:Number})],t.prototype,"compressionQuality",void 0),Object(a.a)([Object(p.a)("compressionQuality")],t.prototype,"writeCompressionQuality",null),Object(a.a)([Object(l.b)({type:Number})],t.prototype,"compressionTolerance",void 0),Object(a.a)([Object(p.a)("compressionTolerance")],t.prototype,"writeCompressionTolerance",null),Object(a.a)([Object(l.b)({json:{read:{source:"copyrightText"}}})],t.prototype,"copyright",void 0),Object(a.a)([Object(l.b)({readOnly:!0,dependsOn:["_serviceSupportsMosaicRule"]})],t.prototype,"defaultMosaicRule",void 0),Object(a.a)([Object(w.a)("defaultMosaicRule",["defaultMosaicMethod"])],t.prototype,"readDefaultMosaicRule",null),Object(a.a)([Object(l.b)({type:String,json:{name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],t.prototype,"definitionExpression",void 0),Object(a.a)([Object(l.b)({readOnly:!0,constructOnly:!0})],t.prototype,"exportImageServiceParameters",void 0),Object(a.a)([Object(l.b)()],t.prototype,"rasterInfo",void 0),Object(a.a)([Object(l.b)({readOnly:!0,type:[te.a]})],t.prototype,"fields",void 0),Object(a.a)([Object(l.b)({readOnly:!0})],t.prototype,"fieldsIndex",null),Object(a.a)([Object(l.b)({type:["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff"],json:{write:!0}})],t.prototype,"format",null),Object(a.a)([Object(w.a)("service","format",["serviceDataType"])],t.prototype,"readFormat",null),Object(a.a)([Object(l.b)({type:_e.a})],t.prototype,"fullExtent",void 0),Object(a.a)([Object(l.b)({readOnly:!0})],t.prototype,"hasMultidimensions",void 0),Object(a.a)([Object(l.b)({json:{read:{source:"maxImageHeight"}}})],t.prototype,"imageMaxHeight",void 0),Object(a.a)([Object(l.b)({json:{read:{source:"maxImageWidth"}}})],t.prototype,"imageMaxWidth",void 0),Object(a.a)([Object(l.b)({type:String,json:{type:Y.a.jsonValues,read:Y.a.read,write:Y.a.write}})],t.prototype,"interpolation",void 0),Object(a.a)([Object(l.b)()],t.prototype,"minScale",void 0),Object(a.a)([Object(w.a)("service","minScale")],t.prototype,"readMinScale",null),Object(a.a)([Object(l.b)()],t.prototype,"maxScale",void 0),Object(a.a)([Object(w.a)("service","maxScale")],t.prototype,"readMaxScale",null),Object(a.a)([Object(l.b)({type:X})],t.prototype,"mosaicRule",null),Object(a.a)([Object(w.a)("mosaicRule",["mosaicRule","defaultMosaicMethod"])],t.prototype,"readMosaicRule",null),Object(a.a)([Object(p.a)("mosaicRule")],t.prototype,"writeMosaicRule",null),Object(a.a)([Object(l.b)()],t.prototype,"multidimensionalInfo",null),Object(a.a)([Object(l.b)({type:ae.a,json:{write:!0}})],t.prototype,"multidimensionalSubset",void 0),Object(a.a)([Object(l.b)({json:{type:u.a}})],t.prototype,"noData",void 0),Object(a.a)([Object(p.a)("noData")],t.prototype,"writeNoData",null),Object(a.a)([Object(l.b)({type:String,json:{type:Y.b.jsonValues,read:Y.b.read,write:Y.b.write}})],t.prototype,"noDataInterpretation",void 0),Object(a.a)([Object(l.b)({type:String,readOnly:!0,json:{read:{source:["fields"]}}})],t.prototype,"objectIdField",void 0),Object(a.a)([Object(w.a)("objectIdField")],t.prototype,"readObjectIdField",null),Object(a.a)([Object(l.b)({})],t.prototype,"geometryType",void 0),Object(a.a)([Object(l.b)({})],t.prototype,"typeIdField",void 0),Object(a.a)([Object(l.b)({})],t.prototype,"types",void 0),Object(a.a)([Object(l.b)({readOnly:!0})],t.prototype,"parsedUrl",null),Object(a.a)([Object(l.b)({type:Function})],t.prototype,"pixelFilter",void 0),Object(a.a)([Object(l.b)()],t.prototype,"raster",void 0),Object(a.a)([Object(l.b)({readOnly:!0})],t.prototype,"sourceType",void 0),Object(a.a)([Object(w.a)("sourceType",["serviceSourceType","fields"])],t.prototype,"readSourceType",null),Object(a.a)([Object(l.b)()],t.prototype,"viewId",void 0),Object(a.a)([Object(l.b)({types:h.a,json:{name:"layerDefinition.drawingInfo.renderer",origins:{"web-scene":{types:h.c,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:e=>({enabled:e&&"vector-field"!==e.type&&"flow"!==e.type})}}}}})],t.prototype,"renderer",null),Object(a.a)([Object(w.a)("renderer")],t.prototype,"readRenderer",null),Object(a.a)([Object(p.a)("renderer")],t.prototype,"writeRenderer",null),Object(a.a)([Object(l.b)()],t.prototype,"symbolizer",void 0),Object(a.a)([Object(l.b)(S.i)],t.prototype,"opacity",void 0),Object(a.a)([Object(l.b)({readOnly:!0})],t.prototype,"rasterFields",null),Object(a.a)([Object(l.b)({constructOnly:!0})],t.prototype,"rasterFunctionInfos",void 0),Object(a.a)([Object(l.b)({type:F.a})],t.prototype,"renderingRule",null),Object(a.a)([Object(w.a)("renderingRule",["renderingRule","rasterFunctionInfos"])],t.prototype,"readRenderingRule",null),Object(a.a)([Object(p.a)("renderingRule")],t.prototype,"writeRenderingRule",null),Object(a.a)([Object(l.b)()],t.prototype,"serviceDataType",void 0),Object(a.a)([Object(l.b)({readOnly:!0,type:be.a})],t.prototype,"spatialReference",void 0),Object(a.a)([Object(w.a)("spatialReference",["spatialReference","extent"])],t.prototype,"readSpatialReference",null),Object(a.a)([Object(l.b)({json:{type:rt.jsonValues}})],t.prototype,"pixelType",void 0),Object(a.a)([Object(w.a)("pixelType")],t.prototype,"readPixelType",null),Object(a.a)([Object(p.a)("pixelType")],t.prototype,"writePixelType",null),Object(a.a)([Object(l.b)({constructOnly:!0,type:ne.a})],t.prototype,"serviceRasterInfo",void 0),Object(a.a)([Object(l.b)()],t.prototype,"sourceJSON",void 0),Object(a.a)([Object(l.b)(S.o)],t.prototype,"url",void 0),Object(a.a)([Object(l.b)({readOnly:!0})],t.prototype,"version",void 0),Object(a.a)([Object(w.a)("version",["currentVersion","fields","timeInfo"])],t.prototype,"readVersion",null),t=Object(a.a)([Object(c.a)("esri.layers.mixins.ArcGISImageService")],t),t};var lt=i(906),ut=i(593),ct=i(730),pt=i(722),mt=i(723),dt=i(594),bt=i(592),ht=i(732),yt=i(931),ft=i(728);let gt=class extends(Object(ut.a)(Object(ht.a)(Object(bt.a)(Object(pt.a)(Object(mt.a)(ot(Object(dt.a)(Object(ct.a)(Object(lt.a)(Object(s.a)(m.a))))))))))){constructor(...e){super(...e),this.legendEnabled=!0,this.isReference=null,this.operationalLayerType="ArcGISImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.type="imagery"}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}load(e){const t=Object(n.l)(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},e).catch(o.p).then((()=>this._fetchService(t)))),Promise.resolve(this)}writeOperationalLayerType(e,t,i){var a;const r="vector-field"===(null==(a=this.renderer)?void 0:a.type);t[i]=r?"ArcGISImageServiceVectorLayer":"ArcGISImageServiceLayer"}get defaultPopupTemplate(){return this.createPopupTemplate()}createPopupTemplate(e){const t=this.rasterFields,i=this.title,a=new Set;let r=!1,n=!1;this.capabilities&&(r=this.capabilities.operations.supportsQuery&&this.fields&&this.fields.length>0,n="esriImageServiceDataTypeVector-UV"===this.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===this.serviceDataType);const s=new Set;r&&s.add("raster.itempixelvalue");for(const o of t){const e=o.name.toLowerCase();s.has(e)||e.includes("raster.servicepixelvalue.")||a.add(o.name)}return n&&a.add("raster.magnitude").add("raster.direction"),Object(ft.a)({fields:t,title:i},{...e,visibleFieldNames:a})}queryFeatures(e,t){return this.queryRasters(e,t).then((e=>{if(null!=e&&e.features)for(const t of e.features)t.layer=t.sourceLayer=this;return e}))}queryFeatureCount(e,t){return this.queryRasterCount(e,t)}redraw(){this.emit("redraw")}serviceSupportsSpatialReference(e){return Object(yt.a)(this,e)}};Object(a.a)([Object(l.b)(S.e)],gt.prototype,"legendEnabled",void 0),Object(a.a)([Object(l.b)({type:["show","hide"]})],gt.prototype,"listMode",void 0),Object(a.a)([Object(l.b)({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],gt.prototype,"isReference",void 0),Object(a.a)([Object(l.b)({type:["ArcGISImageServiceLayer"],json:{origins:{"web-map":{type:["ArcGISImageServiceLayer","ArcGISImageServiceVectorLayer"],read:!1,write:{target:"layerType",ignoreOrigin:!0}}}}})],gt.prototype,"operationalLayerType",void 0),Object(a.a)([Object(p.a)("web-map","operationalLayerType")],gt.prototype,"writeOperationalLayerType",null),Object(a.a)([Object(l.b)(S.k)],gt.prototype,"popupEnabled",void 0),Object(a.a)([Object(l.b)({type:r.a,json:{read:{source:"popupInfo"},write:{target:"popupInfo"}}})],gt.prototype,"popupTemplate",void 0),Object(a.a)([Object(l.b)({readOnly:!0})],gt.prototype,"defaultPopupTemplate",null),Object(a.a)([Object(l.b)({readOnly:!0,json:{read:!1}})],gt.prototype,"type",void 0),gt=Object(a.a)([Object(c.a)("esri.layers.ImageryLayer")],gt);const Ot=gt}}]);
//# sourceMappingURL=101.88ddf938.chunk.js.map