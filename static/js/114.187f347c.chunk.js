(this["webpackJsonppopulation-arcgis"]=this["webpackJsonppopulation-arcgis"]||[]).push([[114],{1054:function(n,e,t){"use strict";t.r(e),t.d(e,"executeGEOperation",(function(){return u}));var r=t(1101);function u(n){return(0,r.u[n.operation])(...n.parameters)}},1101:function(n,e,t){"use strict";t.d(e,"a",(function(){return z})),t.d(e,"b",(function(){return I})),t.d(e,"c",(function(){return V})),t.d(e,"d",(function(){return j})),t.d(e,"e",(function(){return H})),t.d(e,"f",(function(){return _})),t.d(e,"g",(function(){return k})),t.d(e,"h",(function(){return q})),t.d(e,"i",(function(){return B})),t.d(e,"j",(function(){return C})),t.d(e,"k",(function(){return J})),t.d(e,"l",(function(){return O})),t.d(e,"m",(function(){return P})),t.d(e,"n",(function(){return M})),t.d(e,"o",(function(){return c})),t.d(e,"p",(function(){return f})),t.d(e,"q",(function(){return o})),t.d(e,"r",(function(){return a})),t.d(e,"s",(function(){return i})),t.d(e,"t",(function(){return l})),t.d(e,"u",(function(){return F})),t.d(e,"v",(function(){return s})),t.d(e,"w",(function(){return d})),t.d(e,"x",(function(){return g})),t.d(e,"y",(function(){return w})),t.d(e,"z",(function(){return y})),t.d(e,"A",(function(){return S})),t.d(e,"B",(function(){return D})),t.d(e,"C",(function(){return h})),t.d(e,"D",(function(){return R})),t.d(e,"E",(function(){return v})),t.d(e,"F",(function(){return m})),t.d(e,"G",(function(){return x})),t.d(e,"H",(function(){return p})),t.d(e,"I",(function(){return b})),t.d(e,"J",(function(){return A})),t.d(e,"K",(function(){return G})),t.d(e,"L",(function(){return E})),t.d(e,"M",(function(){return L})),t.d(e,"N",(function(){return T}));var r=t(149),u=t(878);function i(n){return r.G.extendedSpatialReferenceInfo(n)}function o(n,e,t){return r.G.clip(u.a,n,e,t)}function c(n,e,t){return r.G.cut(u.a,n,e,t)}function f(n,e,t){return r.G.contains(u.a,n,e,t)}function a(n,e,t){return r.G.crosses(u.a,n,e,t)}function l(n,e,t,i){return r.G.distance(u.a,n,e,t,i)}function s(n,e,t){return r.G.equals(u.a,n,e,t)}function d(n,e,t){return r.G.intersects(u.a,n,e,t)}function p(n,e,t){return r.G.touches(u.a,n,e,t)}function G(n,e,t){return r.G.within(u.a,n,e,t)}function g(n,e,t){return r.G.disjoint(u.a,n,e,t)}function h(n,e,t){return r.G.overlaps(u.a,n,e,t)}function m(n,e,t,i){return r.G.relate(u.a,n,e,t,i)}function w(n,e){return r.G.isSimple(u.a,n,e)}function x(n,e){return r.G.simplify(u.a,n,e)}function y(n,e,t=!1){return r.G.convexHull(u.a,n,e,t)}function S(n,e,t){return r.G.difference(u.a,n,e,t)}function D(n,e,t){return r.G.symmetricDifference(u.a,n,e,t)}function R(n,e,t){return r.G.intersect(u.a,n,e,t)}function b(n,e,t=null){return r.G.union(u.a,n,e,t)}function v(n,e,t,i,o,c,f){return r.G.offset(u.a,n,e,t,i,o,c,f)}function A(n,e,t,i,o=!1){return r.G.buffer(u.a,n,e,t,i,o)}function E(n,e,t,i,o,c,f){return r.G.geodesicBuffer(u.a,n,e,t,i,o,c,f)}function L(n,e,t,i=!0){return r.G.nearestCoordinate(u.a,n,e,t,i)}function T(n,e,t){return r.G.nearestVertex(u.a,n,e,t)}function z(n,e,t,i,o){return r.G.nearestVertices(u.a,n,e,t,i,o)}function I(n,e,t,u){if(null==e||null==u)throw new Error("Illegal Argument Exception");const i=r.G.rotate(e,t,u);return i.spatialReference=n,i}function V(n,e,t){if(null==e||null==t)throw new Error("Illegal Argument Exception");const u=r.G.flipHorizontal(e,t);return u.spatialReference=n,u}function j(n,e,t){if(null==e||null==t)throw new Error("Illegal Argument Exception");const u=r.G.flipVertical(e,t);return u.spatialReference=n,u}function H(n,e,t,i,o){return r.G.generalize(u.a,n,e,t,i,o)}function _(n,e,t,i){return r.G.densify(u.a,n,e,t,i)}function k(n,e,t,i,o=0){return r.G.geodesicDensify(u.a,n,e,t,i,o)}function q(n,e,t){return r.G.planarArea(u.a,n,e,t)}function B(n,e,t){return r.G.planarLength(u.a,n,e,t)}function C(n,e,t,i){return r.G.geodesicArea(u.a,n,e,t,i)}function J(n,e,t,i){return r.G.geodesicLength(u.a,n,e,t,i)}function O(n,e,t){return null==e||null==t?[]:r.G.intersectLinesToPoints(u.a,n,e,t)}function P(n,e){r.G.changeDefaultSpatialReferenceTolerance(n,e)}function M(n){r.G.clearDefaultSpatialReferenceTolerance(n)}const F=Object.freeze(Object.defineProperty({__proto__:null,extendedSpatialReferenceInfo:i,clip:o,cut:c,contains:f,crosses:a,distance:l,equals:s,intersects:d,touches:p,within:G,disjoint:g,overlaps:h,relate:m,isSimple:w,simplify:x,convexHull:y,difference:S,symmetricDifference:D,intersect:R,union:b,offset:v,buffer:A,geodesicBuffer:E,nearestCoordinate:L,nearestVertex:T,nearestVertices:z,rotate:I,flipHorizontal:V,flipVertical:j,generalize:H,densify:_,geodesicDensify:k,planarArea:q,planarLength:B,geodesicArea:C,geodesicLength:J,intersectLinesToPoints:O,changeDefaultSpatialReferenceTolerance:P,clearDefaultSpatialReferenceTolerance:M},Symbol.toStringTag,{value:"Module"}))}}]);
//# sourceMappingURL=114.187f347c.chunk.js.map