(this["webpackJsonppopulation-arcgis"]=this["webpackJsonppopulation-arcgis"]||[]).push([[102],{1173:function(e,t,i){"use strict";i.d(t,"a",(function(){return a})),i.d(t,"b",(function(){return n}));var r=i(672);const n={type:r.a,json:{origins:{service:{read:{source:["tileInfo","minScale","maxScale","minLOD","maxLOD"],reader:a}}}}};function a(e,t,i,n){if(!e)return null;const{minScale:a,maxScale:s,minLOD:l,maxLOD:o}=t;if(null!=l&&null!=o)return n&&n.ignoreMinMaxLOD?r.a.fromJSON(e):r.a.fromJSON({...e,lods:e.lods.filter((({level:e})=>null!=e&&e>=l&&e<=o))});if(0!==a&&0!==s){const t=e=>Math.round(1e4*e)/1e4,i=a?t(a):1/0,n=s?t(s):-1/0;return r.a.fromJSON({...e,lods:e.lods.filter((e=>{const r=t(e.scale);return r<=i&&r>=n}))})}return r.a.fromJSON(e)}},1187:function(e,t,i){"use strict";i.d(t,"a",(function(){return S}));var r,n=i(0),a=i(134),s=i(28),l=i(375),o=i(16),c=i(243),u=i(22),h=i(908),f=i(84),d=i(23),p=i(13),m=i(231),b=i(44),y=i(1),g=i(17),x=i(72),v=i(10),O=i(911),w=i(25);class I{constructor(){this.location={left:0,top:0,width:0,height:0},this._allAvailability="unknown",this.byteSize=40}getAvailability(e,t){if("unknown"!==this._allAvailability)return this._allAvailability;const i=(e-this.location.top)*this.location.width+(t-this.location.left),r=i%8,n=i>>3,a=this._tileAvailabilityBitSet;return n<0||n>a.length?"unknown":a[n]&1<<r?"available":"unavailable"}_updateFromData(e){const t=this.location.width,i=this.location.height;let r=!0,n=!0;const a=Math.ceil(t*i/8),s=new Uint8Array(a);let l=0;for(let o=0;o<e.length;o++){const t=o%8;e[o]?(n=!1,s[l]|=1<<t):r=!1,7===t&&++l}n?this._allAvailability="unavailable":r?this._allAvailability="available":(this._allAvailability="unknown",this._tileAvailabilityBitSet=s,this.byteSize+=s.length)}static fromDefinition(e,t){const i=e.service.request||a.default,{row:r,col:n,width:s,height:l}=e,c={query:{f:"json"}};return t=t?{...c,...t}:c,i(function(e){let t;if("vector-tile"===e.service.type)t=`${e.service.url}/tilemap/${e.level}/${e.row}/${e.col}/${e.width}/${e.height}`;else{const i=e.service.tileServers;t=`${i&&i.length?i[e.row%i.length]:e.service.url}/tilemap/${e.level}/${e.row}/${e.col}/${e.width}/${e.height}`}const i=e.service.query;return i&&(t=`${t}?${i}`),t}(e),t).then((e=>e.data)).catch((e=>{if(e&&e.details&&422===e.details.httpStatus)return{location:{top:r,left:n,width:s,height:l},valid:!0,data:Object(g.c)(s*l,0)};throw e})).then((e=>{if(e.location&&(e.location.top!==r||e.location.left!==n||e.location.width!==s||e.location.height!==l))throw new o.a("tilemap:location-mismatch","Tilemap response for different location than requested",{response:e,definition:{top:r,left:n,width:s,height:l}});return I.fromJSON(e)}))}static fromJSON(e){I._validateJSON(e);const t=new I;return t.location=Object.freeze(Object(w.a)(e.location)),t._updateFromData(e.data),Object.freeze(t)}static _validateJSON(e){if(!e||!e.location)throw new o.a("tilemap:missing-location","Location missing from tilemap response");if(!1===e.valid)throw new o.a("tilemap:invalid","Tilemap response was marked as invalid");if(!e.data)throw new o.a("tilemap:missing-data","Data missing from tilemap response");if(!Array.isArray(e.data))throw new o.a("tilemap:data-mismatch","Data must be an array of numbers");if(e.data.length!==e.location.width*e.location.height)throw new o.a("tilemap:data-mismatch","Number of data items does not match width/height of tilemap")}}function j(e){return`${e.level}/${e.row}/${e.col}/${e.width}/${e.height}`}let S=r=class extends(Object(c.b)(s.a)){constructor(e){super(e),this._pendingTilemapRequests={},this._availableLevels={},this.levels=5,this.cacheByteSize=2*l.a.MEGABYTES,this.request=a.default,this._prefetchingEnabled=!0}initialize(){this._tilemapCache=new h.a(this.cacheByteSize),this.addHandles([Object(p.f)((()=>{const{layer:e}=this;return[null==e?void 0:e.parsedUrl,null==e?void 0:e.tileServers,null==e?void 0:e.apiKey,null==e?void 0:e.customParameters]}),(()=>this._initializeTilemapDefinition())),Object(p.f)((()=>{var e,t;return null==(e=this.layer)||null==(t=e.tileInfo)?void 0:t.lods}),(e=>this._initializeAvailableLevels(e)),p.e)]),this._initializeTilemapDefinition()}castLevels(e){return e<=2?(u.a.getLogger(this.declaredClass).error("Minimum levels for Tilemap is 3, but got ",e),3):e}get size(){return 1<<this.levels}fetchTilemap(e,t,i,r){if(!this._availableLevels[e])return Promise.reject(new o.a("tilemap-cache:level-unavailable",`Level ${e} is unavailable in the service`));const n=this._tmpTilemapDefinition,a=this._tilemapFromCache(e,t,i,n);if(a)return Promise.resolve(a);const s=r&&r.signal;return r={...r,signal:null},new Promise(((e,t)=>{Object(d.n)(s,(()=>t(Object(d.c)())));const i=j(n);let a=this._pendingTilemapRequests[i];if(!a){a=I.fromDefinition(n,r).then((e=>(this._tilemapCache.put(i,e,e.byteSize),e)));const e=()=>delete this._pendingTilemapRequests[i];this._pendingTilemapRequests[i]=a,a.then(e,e)}a.then(e,t)}))}getAvailability(e,t,i){if(!this._availableLevels[e])return"unavailable";const r=this._tilemapFromCache(e,t,i,this._tmpTilemapDefinition);return r?r.getAvailability(t,i):"unknown"}fetchAvailability(e,t,i,r){return this._availableLevels[e]?this.fetchTilemap(e,t,i,r).catch((e=>e)).then((r=>{if(r instanceof I){const n=r.getAvailability(t,i);if("unavailable"===n)throw new o.a("tile-map:tile-unavailable","Tile is not available",{level:e,row:t,col:i});return n}if(Object(d.j)(r))throw r;return"unknown"})):Promise.reject(new o.a("tilemap-cache:level-unavailable",`Level ${e} is unavailable in the service`))}fetchAvailabilityUpsample(e,t,i,r,n){r.level=e,r.row=t,r.col=i;const a=this.layer.tileInfo;a.updateTileInfo(r);const s=this.fetchAvailability(e,t,i,n).catch((e=>{if(Object(d.j)(e))throw e;if(a.upsampleTile(r))return this.fetchAvailabilityUpsample(r.level,r.row,r.col,r);throw e}));return this._fetchAvailabilityUpsamplePrefetch(r.id,e,t,i,n,s),s}async _fetchAvailabilityUpsamplePrefetch(e,t,i,n,a,s){if(!this._prefetchingEnabled)return;const l=`prefetch-${e}`;if(this.handles.has(l))return;const o=new AbortController;s.then((()=>o.abort()),(()=>o.abort()));let c=!1;const u={remove(){c||(c=!0,o.abort())}};if(this.handles.add(u,l),await Object(m.d)(10,o.signal).catch((()=>{})),c||(c=!0,this.handles.remove(l)),Object(d.k)(o))return;const h=new O.a(e,t,i,n),f={...a,signal:o.signal},p=this.layer.tileInfo;for(let d=0;r._prefetches.length<r._maxPrefetch&&p.upsampleTile(h);++d){const e=this.fetchAvailability(h.level,h.row,h.col,f);r._prefetches.push(e);const t=()=>{r._prefetches.removeUnordered(e)};e.then(t,t)}}_initializeTilemapDefinition(){var e;if(!this.layer.parsedUrl)return;const{parsedUrl:t,apiKey:i,customParameters:r}=this.layer;this._tilemapCache.clear(),this._tmpTilemapDefinition={service:{url:t.path,query:Object(b.G)({...t.query,...r,token:null!=i?i:null==(e=t.query)?void 0:e.token}),tileServers:this.layer.tileServers,request:this.request,type:this.layer.type},width:this.size,height:this.size,level:0,row:0,col:0}}_tilemapFromCache(e,t,i,r){r.level=e,r.row=t-t%this.size,r.col=i-i%this.size;const n=j(r);return this._tilemapCache.get(n)}_initializeAvailableLevels(e){this._availableLevels={},e&&e.forEach((e=>this._availableLevels[e.level]=!0))}get test(){const e=this;return{get prefetchingEnabled(){return e._prefetchingEnabled},set prefetchingEnabled(t){e._prefetchingEnabled=t},hasTilemap:(t,i,r)=>!!e._tilemapFromCache(t,i,r,e._tmpTilemapDefinition)}}};S._maxPrefetch=4,S._prefetches=new f.a({initialSize:r._maxPrefetch}),Object(n.a)([Object(y.b)({constructOnly:!0,type:Number})],S.prototype,"levels",void 0),Object(n.a)([Object(x.a)("levels")],S.prototype,"castLevels",null),Object(n.a)([Object(y.b)({readOnly:!0,type:Number})],S.prototype,"size",null),Object(n.a)([Object(y.b)({constructOnly:!0,type:Number})],S.prototype,"cacheByteSize",void 0),Object(n.a)([Object(y.b)({constructOnly:!0})],S.prototype,"layer",void 0),Object(n.a)([Object(y.b)({constructOnly:!0})],S.prototype,"request",void 0),S=r=Object(n.a)([Object(v.a)("esri.layers.support.TilemapCache")],S)},1405:function(e,t,i){"use strict";i.r(t),i.d(t,"default",(function(){return rt}));var r=i(0),n=i(374),a=i(1304),s=i(16),l=i(2),o=i(721),c=i(23),u=i(13),h=i(1),f=(i(17),i(12)),d=i(54),p=i(51),m=i(10),b=i(423),y=i(593),g=i(730),x=(i(167),i(134)),v=i(22),O=i(47),w=i(306),I=i(183),j=i(1234),S=i(1472),_=i(1216),T=i(1473),R=i(672),k=i(27),C=i(446),P=i(1196),F=i(1384);var M=i(1253),B=i(62);const D=new Map,z=new class{constructor(e=15e3,t=5e3){this._timer=null,this._cachedBlocks=new Map,this._size=-1,this._duration=e,this._interval=Math.min(e,t)}decreaseRefCount(e,t){const i=e+"/"+t,r=this._cachedBlocks;if(r.has(i)){const e=r.get(i);return e.refCount--,e.refCount<=0&&(r.delete(i),e.controller&&e.controller.abort()),e.refCount}return 0}getBlock(e,t){const i=e+"/"+t,r=this._cachedBlocks;if(r.has(i)){const e=r.get(i);return e.ts=Date.now(),e.refCount++,r.delete(i),r.set(i,e),e.block}return null}putBlock(e,t,i,r){const n=this._cachedBlocks,a=e+"/"+t;if(n.has(a)){const e=n.get(a);e.ts=Date.now(),e.refCount++}else n.set(a,{block:i,ts:Date.now(),refCount:1,controller:r});this._trim(),this._updateTimer()}deleteBlock(e,t){const i=this._cachedBlocks,r=e+"/"+t;i.has(r)&&i.delete(r)}updateMaxSize(e){this._size=e,this._trim()}empty(){this._cachedBlocks.clear(),this._clearTimer()}getCurrentSize(){return this._cachedBlocks.size}_updateTimer(){if(null!=this._timer)return;const e=this._cachedBlocks;this._timer=setInterval((()=>{const t=Array.from(e),i=Date.now();for(let r=0;r<t.length&&t[r][1].ts<=i-this._duration;r++)e.delete(t[r][0]);0===e.size&&this._clearTimer()}),this._interval)}_trim(){const e=this._cachedBlocks;if(-1===this._size||this._size>=e.size)return;const t=Array.from(e);for(let i=0;i<t.length-this._size;i++)e.delete(t[i][0])}_clearTimer(){null!=this._timer&&(clearInterval(this._timer),this._timer=null)}};function A(e,t){return null==t?e:`${e}?sliceId=${t}`}function E(e,t,i){var r;const n=D.get(e);if(!n)return null==t?z.getBlock(e,i):null;if(null==t||null==n[t]){for(let e=0;e<n.length;e++){var a;const t=null==(a=n[e])?void 0:a.cache.get(i);if(t)return t.refCount++,t.block}return z.getBlock(e,i)}const s=null==(r=n[t])?void 0:r.cache.get(i);if(s)return s.refCount++,s.block;for(let o=0;o<n.length;o++){var l;if(o===t||!n[o])continue;const e=null==(l=n[o])?void 0:l.cache,r=null==e?void 0:e.get(i);if(e&&r)return r.refCount++,e.set(i,r),r.block}return null}function N(e,t,i,r,n=null){var a;const s=D.get(e);if(!s)return void(null==t&&z.putBlock(e,i,r,n));if(null==t||null==s[t])return void z.putBlock(e,i,r,n);const l={refCount:1,block:r,isResolved:!1,isRejected:!1,controller:n};r.then((()=>l.isResolved=!0)).catch((()=>l.isRejected=!0)),null==(a=s[t])||a.cache.set(i,l)}var J=i(1312),L=i(1122),H=i(1254),W=i(86);let q=class extends(Object(C.b)(k.a)){constructor(){super(...arguments),this.rasterJobHandler=null,this.datasetName=null,this.datasetFormat=null,this.rasterInfo=null,this.ioConfig={sampling:"closest"}}async init(){const e=Object(M.f)();this.addResolvingPromise(e),await this.when()}normalizeCtorArgs(e){return e&&e.ioConfig&&(e={...e,ioConfig:{resolution:null,bandIds:null,sampling:"closest",tileInfo:R.a.create(),...e.ioConfig}}),e}get _isGlobalWrappableSource(){const{rasterInfo:e}=this,t=Object(M.d)(e.spatialReference);return Object(l.l)(t)&&e.extent.width>=t/2}set url(e){this._set("url",Object(w.g)(e,v.a.getLogger(this.declaredClass)))}async open(e){throw new s.a("BaseRaster:open-not-implemented","open() is not implemented")}async fetchTile(e,t,i,r={}){const n=r.tileInfo||this.rasterInfo.storageInfo.tileInfo,a=this.getTileExtentFromTileInfo(e,t,i,n);return this.fetchPixels(a,n.size[0],n.size[1],r)}async identify(e,t={}){var i,r;e=Object(f.d)(B.a,e).clone().normalize();const{multidimensionalDefinition:n,timeExtent:a}=t,{hasMultidimensionalTranspose:s,multidimensionalInfo:o}=this.rasterInfo;let{transposedVariableName:c}=t;const u=Object(l.l)(o)&&s&&(null!=a||Object(F.g)(n));var h;u&&!c&&(c=Object(l.l)(n)&&n.length>0?null!=(h=n[0].variableName)?h:void 0:o.variables[0].name,t={...t,transposedVariableName:c});t=this._getRequestOptionsWithSliceId(t);const{spatialReference:d,extent:p}=this.rasterInfo,{datumTransformation:m}=t;let b=Object(M.h)(e,d,m);if(!p.intersects(b))return{location:b,value:null};if(Object(l.l)(this.rasterInfo.transform)){const e=this.rasterInfo.transform.inverseTransform(b);if(!this.rasterInfo.nativeExtent.intersects(e))return{location:e,value:null};b=e}let y=0;const g=Object(l.l)(c)&&Object(l.l)(o)&&this.rasterInfo.hasMultidimensionalTranspose;if(!g)if(t.srcResolution)y=Object(M.l)(t.srcResolution,this.rasterInfo,this.ioConfig.sampling).pyramidLevel;else if(y=await this.computeBestPyramidLevelForLocation(e,t),null==y)return{location:b,value:null};const x=this.identifyPixelLocation(b,y,null,g);if(null===x)return{location:b,value:null};const{row:v,col:O,rowOffset:w,colOffset:I,blockWidth:j}=x,S=null!=(i=c)?i:Object(l.t)(t.sliceId),_=A(this.url,S),T=`${y}/${v}/${O}`;let R=E(_,null,T);Object(l.k)(R)&&(R=this.fetchRawTile(y,v,O,t),N(_,null,T,R));const k=await R;if(Object(l.k)(k)||null==(r=k.pixels)||!r.length)return{location:b,value:null};const C=w*j+I;return this._processIdentifyResult(k,{srcLocation:b,position:C,pyramidLevel:y,useTransposedTile:!!g,requestSomeSlices:u,identifyOptions:t})}async fetchPixels(e,t,i,r={}){if(e=Object(M.k)(e),(r=this._getRequestOptionsWithSliceId(r)).requestRawData)return this._fetchPixels(e,t,i,r);const n=Object(M.d)(e.spatialReference),a=Object(M.e)(e);if(Object(l.k)(n)||0===a||1===a&&this._isGlobalWrappableSource)return this._fetchPixels(e,t,i,r);if(a>=3)return{extent:e,pixelBlock:null};const s=[],{xmin:o,xmax:c}=e,u=Math.round(n/(c-o)*t),h=u-Math.round((n/2-o)/(c-o)*t);let f=0;const d=[];for(let l=0;l<=a;l++){const p=new W.a({xmin:0===l?o:-n/2,xmax:l===a?c-n*l:n/2,ymin:e.ymin,ymax:e.ymax,spatialReference:e.spatialReference}),m=0===l?u-h:l===a?t-f:u;f+=m,d.push(m);const b=r.disableWrapAround&&l>0?null:this._fetchPixels(p,m,i,r);s.push(b)}const p=(await Promise.all(s)).map((e=>null==e?void 0:e.pixelBlock));let m=null;const b={width:t,height:i};return m=this.rasterJobHandler?(await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:p,srcMosaicSize:b,destDimension:null,coefs:null,sampleSpacing:null,interpolation:"nearest",alignmentInfo:null,blockWidths:d},r)).pixelBlock:Object(L.n)(p,b,{blockWidths:d}),{extent:e,srcExtent:Object(M.g)(e,this.rasterInfo.spatialReference,r.datumTransformation),pixelBlock:m}}async fetchRawPixels(e,t,i,r={}){t={x:Math.floor(t.x),y:Math.floor(t.y)};const n=await this._fetchRawTiles(e,t,i,r),{nativeExtent:a,nativePixelSize:s,storageInfo:o}=this.rasterInfo,c=2**e,u=s.x*c,h=s.y*c,f=new W.a({xmin:a.xmin+u*t.x,xmax:a.xmin+u*(t.x+i.width-1),ymin:a.ymax-h*(t.y+i.height-1),ymax:a.ymax-h*t.y,spatialReference:a.spatialReference});if(!n)return{extent:f,srcExtent:f,pixelBlock:null};const{pixelBlocks:d,mosaicSize:p}=n;if(1===d.length&&Object(l.l)(d[0])&&d[0].width===i.width&&d[0].height===i.height)return{extent:f,srcExtent:f,pixelBlock:n.pixelBlocks[0]};const m=e>0?o.pyramidBlockWidth:o.blockWidth,b=e>0?o.pyramidBlockHeight:o.blockHeight,y={x:t.x%m,y:t.y%b};let g;return g=this.rasterJobHandler?(await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:d,srcMosaicSize:p,destDimension:i,clipOffset:y,clipSize:i,coefs:null,sampleSpacing:null,interpolation:r.interpolation,alignmentInfo:null,blockWidths:null},r)).pixelBlock:Object(L.n)(d,p,{clipOffset:y,clipSize:i}),{extent:f,srcExtent:f,pixelBlock:g}}fetchRawTile(e,t,i,r){throw new s.a("BaseRaster:read-not-implemented","fetchRawTile() is not implemented")}computeExtent(e){return Object(M.g)(this.rasterInfo.extent,e)}decodePixelBlock(e,t){return!this.rasterJobHandler||t.useCanvas?Object(J.a)(e,t):this.rasterJobHandler.decode({data:e,options:t})}async request(e,t,i=0){var r,n;const{customFetchParameters:a}=this.ioConfig,{range:s,query:l,headers:o}=t;i=null!=(r=null!=(n=i)?n:t.retryCount)?r:this.ioConfig.retryCount;const c=s?{Range:`bytes=${s.from}-${s.to}`}:null;try{return await Object(x.default)(e,{...t,query:{...l,...a},headers:{...o,...c}})}catch(u){if(i>0)return i--,this.request(e,t,i);throw u}}getSliceIndex(e){const{multidimensionalInfo:t}=this.rasterInfo;return Object(l.k)(t)||Object(l.k)(e)||0===e.length?null:Object(F.d)(e,t)}getTileExtentFromTileInfo(e,t,i,r){const n=Object(l.v)(r.lodAt(e));return this.getTileExtent({x:n.resolution,y:n.resolution},t,i,r.origin,r.spatialReference,r.size)}updateTileInfo(){const{storageInfo:e,spatialReference:t,extent:i,pixelSize:r}=this.rasterInfo;if(!e.tileInfo){const n=[],a=e.maximumPyramidLevel||0;let s=Math.max(r.x,r.y),l=1/.0254*96*s;for(let e=0;e<=a;e++)n.push({level:a-e,resolution:s,scale:l}),s*=2,l*=2;const o=new B.a({x:i.xmin,y:i.ymax,spatialReference:t});e.tileInfo=new R.a({origin:o,size:[e.blockWidth,e.blockHeight],spatialReference:t,lods:n}),e.isVirtualTileInfo=!0}}createRemoteDatasetStorageInfo(e,t=512,i=512,r){const{width:n,height:a,nativeExtent:s,pixelSize:l,spatialReference:o}=e,c=new B.a({x:s.xmin,y:s.ymax,spatialReference:o});null==r&&(r=Math.max(0,Math.round(Math.log(Math.max(n,a))/Math.LN2-8)));const u=this.computeBlockBoundary(s,512,512,{x:s.xmin,y:s.ymax},[l],r);e.storageInfo=new P.a({blockWidth:t,blockHeight:i,pyramidBlockWidth:t,pyramidBlockHeight:i,origin:c,firstPyramidLevel:1,maximumPyramidLevel:r,blockBoundary:u})}async computeBestPyramidLevelForLocation(e,t={}){return 0}computeBlockBoundary(e,t,i,r,n,a=0,s=2){if(1===n.length&&a>0){n=[...n];let{x:e,y:t}=n[0];for(let i=0;i<a;i++)e*=s,t*=s,n.push({x:e,y:t})}const l=[],{x:o,y:c}=r;for(let u=0;u<n.length;u++){const{x:r,y:a}=n[u];l.push({minCol:Math.floor((e.xmin-o+.1*r)/t/r),maxCol:Math.floor((e.xmax-o-.1*r)/t/r),minRow:Math.floor((c-e.ymax+.1*a)/i/a),maxRow:Math.floor((c-e.ymin-.1*a)/i/a)})}return l}getPyramidPixelSize(e){const{nativePixelSize:t}=this.rasterInfo,{pyramidResolutions:i,pyramidScalingFactor:r}=this.rasterInfo.storageInfo;if(0===e)return t;if(Object(l.l)(i)&&i.length)return i[e-1];const n=r**e;return{x:t.x*n,y:t.y*n}}identifyPixelLocation(e,t,i,r){const{spatialReference:n,nativeExtent:a,storageInfo:s}=this.rasterInfo,{maximumPyramidLevel:o,origin:c,transposeInfo:u}=s,h=r&&Object(l.l)(u)?u.tileSize[0]:s.blockWidth,f=r&&Object(l.l)(u)?u.tileSize[1]:s.blockHeight,d=Object(M.h)(e,n,i);if(!a.intersects(d))return null;if(t<0||t>o)return null;const p=this.getPyramidPixelSize(t),{x:m,y:b}=p,y=(c.y-d.y)/b/f,g=(d.x-c.x)/m/h,x=Math.min(f-1,Math.floor((y-Math.floor(y))*f)),v=Math.min(h-1,Math.floor((g-Math.floor(g))*h));return{pyramidLevel:t,row:Math.floor(y),col:Math.floor(g),rowOffset:x,colOffset:v,blockWidth:h,srcLocation:d}}getTileExtent(e,t,i,r,n,a){const[s,l]=a,o=r.x+i*s*e.x,c=o+s*e.x,u=r.y-t*l*e.y,h=u-l*e.y;return new W.a({xmin:o,xmax:c,ymin:h,ymax:u,spatialReference:n})}getBlockWidthHeight(e){return{blockWidth:e>0?this.rasterInfo.storageInfo.pyramidBlockWidth:this.rasterInfo.storageInfo.blockWidth,blockHeight:e>0?this.rasterInfo.storageInfo.pyramidBlockHeight:this.rasterInfo.storageInfo.blockHeight}}isBlockOutside(e,t,i){const r=this.rasterInfo.storageInfo.blockBoundary[e];return!r||r.maxRow<t||r.maxCol<i||r.minRow>t||r.minCol>i}async _fetchPixels(e,t,i,r={}){let n=Object(M.e)(e);if(n>=2)return{extent:e,pixelBlock:null};const a=this._getSourceDataInfo(e,t,i,r),{pyramidLevel:s,pyramidResolution:o,srcResolution:c,srcExtent:u,srcWidth:h,srcHeight:f}=a;if(0===h||0===f)return{extent:e,srcExtent:u,pixelBlock:null};const d=Object(l.t)(this.rasterInfo.transform),p="gcs-shift"===(null==d?void 0:d.type),m=Object(l.l)(Object(M.d)(e.spatialReference));!p&&m||(n=Object(M.e)(a.srcExtent,p));const b=this.rasterInfo.storageInfo,y={x:Math.floor((u.xmin-b.origin.x)/o.x+.1),y:Math.floor((b.origin.y-u.ymax)/o.y+.1)},g=await this._fetchRawTiles(s,y,{width:h,height:f,wrapCount:n},r);if(!g)return{extent:e,srcExtent:u,pixelBlock:null};const x=s>0?b.pyramidBlockWidth:b.blockWidth,v=s>0?b.pyramidBlockHeight:b.blockHeight,O=x===h&&v===f&&y.x%x==0&&y.y%v==0,w=new B.a({x:(e.xmax-e.xmin)/t,y:(e.ymax-e.ymin)/i,spatialReference:e.spatialReference}),I=!e.spatialReference.equals(this.rasterInfo.spatialReference),{datumTransformation:j}=r;if(!I&&O&&1===g.pixelBlocks.length&&x===t&&v===i&&c.x===w.x&&c.y===w.y)return{extent:e,srcExtent:u,pixelBlock:g.pixelBlocks[0]};const S=m&&Object(l.l)(Object(M.d)(u.spatialReference)),_=r.requestProjectedLocalDirections&&this.rasterInfo.dataType.startsWith("vector");_&&!this.rasterJobHandler&&await Object(M.f)();const T=this.rasterJobHandler?await this.rasterJobHandler.getProjectionOffsetGrid({projectedExtent:e,srcBufferExtent:g.extent,pixelSize:w.toJSON(),datumTransformation:j,rasterTransform:d,hasWrapAround:n>0||S,isAdaptive:!1!==this.ioConfig.optimizeProjectionAccuracy,includeGCSGrid:_},r):Object(M.b)({projectedExtent:e,srcBufferExtent:g.extent,pixelSize:w,datumTransformation:j,rasterTransform:d,hasWrapAround:n>0||S,isAdaptive:!1,includeGCSGrid:_});let R;const k=!r.requestRawData,C={rows:T.spacing[0],cols:T.spacing[1]},P=Object(l.t)(this._getRasterTileAlignmentInfo(s,g.extent.xmin)),{pixelBlocks:F,mosaicSize:D,isPartiallyFilled:z}=g;let A=null;if(this.rasterJobHandler){const e=await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:F,srcMosaicSize:D,destDimension:k?{width:t,height:i}:null,coefs:k?T.coefficients:null,sampleSpacing:k?C:null,projectDirections:_,gcsGrid:_?T.gcsGrid:null,isUV:"vector-uv"===this.rasterInfo.dataType,interpolation:r.interpolation,alignmentInfo:P,blockWidths:null},r);({pixelBlock:R,localNorthDirections:A}=e)}else{const e=Object(L.n)(F,D,{alignmentInfo:P});R=k?Object(L.c)(e,{width:t,height:i},T.coefficients,C,r.interpolation):e,_&&T.gcsGrid&&(A=Object(L.j)({width:t,height:i},T.gcsGrid),R=Object(H.a)(R,this.rasterInfo.dataType,A))}return r.requestRawData||_?{srcExtent:u,pixelBlock:R,transformGrid:T,localNorthDirections:A,extent:e,isPartiallyFilled:z}:{srcExtent:u,extent:e,pixelBlock:R}}async _fetchRawTiles(e,t,i,r){const{origin:n,blockBoundary:a}=this.rasterInfo.storageInfo,{blockWidth:s,blockHeight:o}=this.getBlockWidthHeight(e);let{x:c,y:u}=t,{width:h,height:f,wrapCount:d}=i;const p=this._getRasterTileAlignmentInfo(e,0);r.buffer&&(c-=r.buffer.cols,u-=r.buffer.rows,h+=2*r.buffer.cols,f+=2*r.buffer.rows);let m=0,b=0,y=0;d&&Object(l.l)(p)&&(({worldColumnCountFromOrigin:b,originColumnOffset:y,rightPadding:m}=p),b*p.blockWidth-m>=c+h&&(m=0));const g=Math.floor(c/s),x=Math.floor(u/o),v=Math.floor((c+h+m-1)/s),O=Math.floor((u+f+m-1)/o),w=a[e];if(!w)return null;const{minRow:I,minCol:j,maxCol:S,maxRow:_}=w;if(0===d&&(O<I||v<j||x>_||g>S))return null;const T=new Array;let R=!1;const k=null==this.ioConfig.allowPartialFill?r.allowPartialFill:this.ioConfig.allowPartialFill;for(let z=x;z<=O;z++)for(let t=g;t<=v;t++){let i=t;if(!r.disableWrapAround&&d&&Object(l.l)(p)&&b<=t&&(i=t-b-y),z>=I&&i>=j&&_>=z&&S>=i){const t=this._fetchRawTile(e,z,i,r);k?T.push(new Promise((e=>{t.then((t=>e(t))).catch((()=>{R=!0,e(null)}))}))):T.push(t)}else T.push(Promise.resolve(null))}if(0===T.length)return null;const C=await Promise.all(T),P={height:(O-x+1)*o,width:(v-g+1)*s},{spatialReference:F}=this.rasterInfo,M=this.getPyramidPixelSize(e),{x:B,y:D}=M;return{extent:new W.a({xmin:n.x+g*s*B,xmax:n.x+(v+1)*s*B,ymin:n.y-(O+1)*o*D,ymax:n.y-x*o*D,spatialReference:F}),pixelBlocks:C,mosaicSize:P,isPartiallyFilled:R}}_fetchRawTile(e,t,i,r){const n=this.rasterInfo.storageInfo.blockBoundary[e];if(!n)return Promise.resolve(null);const{minRow:a,minCol:s,maxCol:o,maxRow:u}=n;if(t<a||i<s||t>u||i>o)return Promise.resolve(null);const h=A(this.url,r.sliceId),f=`${e}/${t}/${i}`;let d=E(h,r.registryId,f);if(Object(l.k)(d)){const n=new AbortController;d=this.fetchRawTile(e,t,i,{...r,signal:n.signal}),N(h,r.registryId,f,d,n),d.catch((()=>function(e,t,i){var r;const n=D.get(e);n?null!=t&&null!=n[t]?null==(r=n[t])||r.cache.delete(i):z.deleteBlock(e,i):null==t&&z.deleteBlock(e,i)}(h,r.registryId,f)))}return r.signal&&Object(c.n)(r,(()=>{!function(e,t,i){var r;const n=D.get(e);if(!n)return null==t?z.decreaseRefCount(e,i):0;if(null==t||null==n[t])return z.decreaseRefCount(e,i);const a=null==(r=n[t])?void 0:r.cache,s=null==a?void 0:a.get(i);if(a&&s){if(s.refCount--,0===s.refCount){a.delete(i);for(let e=0;e<n.length;e++){var l;null==(l=n[e])||l.cache.delete(i)}s.controller&&s.controller.abort()}return s.refCount}}(h,r.registryId,f)})),d}_computeMagDirValues(e){var t;const{bandCount:i,dataType:r}=this.rasterInfo;if((2!==i||"vector-magdir"!==r)&&"vector-uv"!==r||2!==(null==e?void 0:e.length)||null==(t=e[0])||!t.length)return null;const n=e[0].length;if("vector-magdir"===r){const t=e[1].map((e=>(e+360)%360));return[e[0],t]}const[a,s]=e,l=[],o=[];for(let c=0;c<n;c++){const[e,t]=Object(H.f)([a[c],s[c]]);l.push(e),o.push(t)}return[l,o]}_getRasterTileAlignmentInfo(e,t){return null==this._rasterTileAlighmentInfo&&(this._rasterTileAlighmentInfo=Object(M.c)(this.rasterInfo)),Object(l.k)(this._rasterTileAlighmentInfo.pyramidsInfo)?null:{startX:t,halfWorldWidth:this._rasterTileAlighmentInfo.halfWorldWidth,hasGCSSShiftTransform:this._rasterTileAlighmentInfo.hasGCSSShiftTransform,...this._rasterTileAlighmentInfo.pyramidsInfo[e]}}_getSourceDataInfo(e,t,i,r={}){const n={datumTransformation:r.datumTransformation,pyramidLevel:0,pyramidResolution:null,srcExtent:null,srcHeight:0,srcResolution:null,srcWidth:0};r.srcResolution&&(n.srcResolution=r.srcResolution,this._updateSourceDataInfo(e,n));const a=this.rasterInfo.storageInfo.maximumPyramidLevel||0,{srcWidth:s,srcHeight:l,pyramidLevel:o}=n,c=s/t,u=l/i,h=o<a&&c*u>=16;if(h||o===a&&(c>8||u>8)||0===s||0===l){const s=new B.a({x:(e.xmax-e.xmin)/t,y:(e.ymax-e.ymin)/i,spatialReference:e.spatialReference});let l=Object(M.i)(s,this.rasterInfo.spatialReference,e,n.datumTransformation);const f=!l||r.srcResolution&&l.x+l.y<r.srcResolution.x+r.srcResolution.y;if(h&&r.srcResolution&&f){const e=Math.round(Math.log(Math.max(c,u))/Math.LN2)-1;if(a-o+3>=e){const t=2**e;l={x:r.srcResolution.x*t,y:r.srcResolution.y*t}}}l&&(n.srcResolution=l,this._updateSourceDataInfo(e,n))}return(n.srcWidth/t>8||n.srcHeight/i>8)&&(n.srcWidth=0,n.srcHeight=0),n}_updateSourceDataInfo(e,t){t.srcWidth=0,t.srcHeight=0;const i=this.rasterInfo.spatialReference,{srcResolution:r,datumTransformation:n}=t,{pyramidLevel:a,pyramidResolution:s,excessiveReading:o}=Object(M.l)(r,this.rasterInfo,this.ioConfig.sampling);if(o)return;let c=t.srcExtent||Object(M.g)(e,i,n);if(null==c)return;const u=Object(l.t)(this.rasterInfo.transform);u&&(c=u.inverseTransform(c)),t.srcExtent=c;const h=Math.ceil((c.xmax-c.xmin)/s.x-.1),f=Math.ceil((c.ymax-c.ymin)/s.y-.1);t.pyramidLevel=a,t.pyramidResolution=s,t.srcWidth=h,t.srcHeight=f}_getRequestOptionsWithSliceId(e){return Object(l.l)(this.rasterInfo.multidimensionalInfo)&&null==e.sliceId&&(e={...e,sliceId:this.getSliceIndex(e.multidimensionalDefinition)}),e}_processIdentifyResult(e,t){const{srcLocation:i,position:r,pyramidLevel:n,useTransposedTile:a}=t,s=e.pixels[0].length/e.width/e.height;if(e.mask&&!e.mask[r])return{location:i,value:null};const{multidimensionalInfo:o}=this.rasterInfo;if(Object(l.k)(o)||!a){const t=e.pixels.map((e=>e[r])),a={location:i,value:t,pyramidLevel:n},s=this._computeMagDirValues(t.map((e=>[e])));return null!=s&&s.length&&(a.magdirValue=s.map((e=>e[0]))),a}let c=e.pixels.map((e=>Array.prototype.slice.call(e,r*s,r*s+s))),u=this._computeMagDirValues(c);const{requestSomeSlices:h,identifyOptions:f}=t;let d=Object(F.a)(o,f.transposedVariableName);if(h){var p;const e=Object(F.c)(d,Object(l.t)(f.multidimensionalDefinition),Object(l.t)(f.timeExtent));c=c.map((t=>e.map((e=>t[e])))),u=null==(p=u)?void 0:p.map((t=>e.map((e=>t[e])))),d=e.map((e=>d[e]))}return{location:i,value:null,dataSeries:d.map(((e,t)=>{var i;const r={value:c.map((e=>e[t])),multidimensionalDefinition:e.multidimensionalDefinition.map((e=>new j.a({...e,isSlice:!0})))};return null!=(i=u)&&i.length&&(r.magdirValue=[u[0][t],u[1][t]]),r})),pyramidLevel:n}}};Object(r.a)([Object(h.b)()],q.prototype,"_rasterTileAlighmentInfo",void 0),Object(r.a)([Object(h.b)({readOnly:!0})],q.prototype,"_isGlobalWrappableSource",null),Object(r.a)([Object(h.b)(I.o)],q.prototype,"url",null),Object(r.a)([Object(h.b)({type:String,json:{write:!0}})],q.prototype,"datasetName",void 0),Object(r.a)([Object(h.b)({type:String,json:{write:!0}})],q.prototype,"datasetFormat",void 0),Object(r.a)([Object(h.b)()],q.prototype,"rasterInfo",void 0),Object(r.a)([Object(h.b)()],q.prototype,"ioConfig",void 0),Object(r.a)([Object(h.b)()],q.prototype,"sourceJSON",void 0),q=Object(r.a)([Object(m.a)("esri.layers.support.rasterDatasets.BaseRaster")],q);const $=q;let G=class extends ${constructor(){super(...arguments),this.datasetFormat="Function",this.tileType="Raster",this.rasterFunction=null,this._primaryRasters=null}async open(e){var t;await this.init();const{rasterFunction:i}=this,{rasters:r,rasterIds:n}=i.getPrimaryRasters(),a=r.map((t=>t.rasterInfo?void 0:t.open(e)));await Promise.all(a);const l=r.map((({rasterInfo:e})=>e)),o=i.bind({rasterInfos:l,rasterIds:n});if(!o.success)throw new s.a("raster-function:open",`cannot bind the function: ${null!=(t=o.error)?t:""}`);await this.syncJobHandler(),this.set("sourceJSON",r[0].sourceJSON),this.set("rasterInfo",i.rasterInfo)}async syncJobHandler(){const{rasterFunction:e}=this;if(this._primaryRasters=e.getPrimaryRasters(),this.rasterJobHandler)return this.rasterJobHandler.updateRasterFunction(e)}async fetchPixels(e,t,i,r={}){var n,a;const{rasters:s,rasterIds:o}=this._primaryRasters,c=s.map((n=>n.fetchPixels(e,t,i,r))),u=await Promise.all(c),h=u.map((e=>e.pixelBlock));if(h.every((e=>Object(l.k)(e))))return u[0];const f=null!=(n=null==(a=u.find((e=>Object(l.l)(e.pixelBlock))))?void 0:a.extent)?n:e,d=this.rasterJobHandler?await this.rasterJobHandler.process({extent:f,primaryPixelBlocks:h,primaryRasterIds:o}):this.rasterFunction.process({extent:f,primaryPixelBlocks:h,primaryRasterIds:o});return{...u[0],pixelBlock:d}}};Object(r.a)([Object(h.b)({type:String,json:{write:!0}})],G.prototype,"datasetFormat",void 0),Object(r.a)([Object(h.b)()],G.prototype,"tileType",void 0),Object(r.a)([Object(h.b)()],G.prototype,"rasterFunction",void 0),G=Object(r.a)([Object(m.a)("esri.layers.support.rasterDatasets.FunctionRaster")],G);const U=G;var V=i(1400),Y=i(1474),X=i(1342),K=i(1343),Z=i(57);const Q=v.a.getLogger("esri.layers.mixins.ImageryTileMixin"),ee=e=>{let t=class extends e{constructor(){super(...arguments),this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this.bandIds=null,this.copyright=null,this.interpolation="nearest",this.multidimensionalDefinition=null,this.multidimensionalSubset=null,this.raster=null,this.rasterFunction=null,this.sourceJSON=null,this.symbolizer=null}get fullExtent(){var e;return null==(e=this.rasterInfo)?void 0:e.extent}get rasterInfo(){var e;return null==(e=this.raster)?void 0:e.rasterInfo}get spatialReference(){var e,t;return null!=(e=null==(t=this.rasterInfo)?void 0:t.spatialReference)?e:Z.a.WGS84}get tileInfo(){var e;return null==(e=this.rasterInfo)?void 0:e.storageInfo.tileInfo}set url(e){this._set("url",Object(w.g)(e,Q))}set renderer(e){this._set("renderer",e),this.updateRenderer()}async convertVectorFieldData(e,t){if(Object(l.k)(e)||!this.rasterInfo)return null;const i=this._rasterJobHandler.instance,r=this.rasterInfo.dataType;return i?i.convertVectorFieldData({pixelBlock:e,dataType:r},t):Object(H.b)(e,r)}async createFlowMesh(e,t){const i=this._rasterJobHandler.instance;return i?i.createFlowMesh(e,t):Object(K.a)(e.meshType,e.simulationSettings,e.flowData,Object(l.l)(t.signal)?t.signal:(new AbortController).signal)}normalizeRasterFetchOptions(e){var t;const{multidimensionalInfo:i}=null!=(t=this.rasterInfo)?t:{};if(Object(l.k)(i))return e;let r=e.multidimensionalDefinition||this.multidimensionalDefinition;!Object(l.k)(r)&&r.length||(r=Object(F.b)(this.raster.rasterInfo,{multidimensionalSubset:this.multidimensionalSubset}));const n=e.timeExtent||this.timeExtent;if(Object(l.l)(r)&&Object(l.l)(n)&&(Object(l.l)(n.start)||Object(l.l)(n.end))){var a,s;r=r.map((e=>e.clone()));const t=null==(a=i.variables.find((({name:e})=>e===r[0].variableName)))||null==(s=a.dimensions)?void 0:s.find((({name:e})=>"StdTime"===e)),o=r.find((({dimensionName:e})=>"StdTime"===e));if(!t||!o)return{...e,multidimensionalDefinition:null};const{start:c,end:u}=n,h=Object(l.k)(c)?null:c.getTime(),f=Object(l.k)(u)?null:u.getTime(),d=null!=h?h:f,p=null!=f?f:h;if(Object(l.l)(t.values)){const e=t.values.filter((e=>{if(Array.isArray(e)){if(d===p)return e[0]<=d&&e[1]>=d;const t=e[0]<=d&&e[1]>d||e[0]<p&&e[1]>=p,i=e[0]>=d&&e[1]<=p||e[0]<d&&e[1]>p;return t||i}return d===p?e===d:e>=d&&e<=p}));if(e.length){const t=e.sort(((e,t)=>{var i,r,n,a;return d===p?(null!=(i=e[0])?i:e)-(null!=(r=t[0])?r:t):Math.abs((null!=(n=e[1])?n:e)-p)-Math.abs((null!=(a=t[1])?a:t)-p)}))[0];o.values=[t]}else r=null}else if(t.hasRegularIntervals&&t.extent){const[e,i]=t.extent;d>i||p<e?r=null:o.values=d===p?[d]:[Math.max(e,d),Math.min(i,p)]}}return Object(l.l)(r)&&Object(F.f)(r,this.multidimensionalSubset)?{...e,multidimensionalDefinition:null}:{...e,multidimensionalDefinition:r}}async updateRenderer(){const{loaded:e,symbolizer:t}=this;if(!e||!t)return;if(JSON.stringify(this._cachedRendererJson)===JSON.stringify(this.renderer))return;const i=this._rasterJobHandler.instance;i&&(t.rendererJSON=Object(Y.e)(this.renderer.toJSON()),t.bind(),await i.updateSymbolizer(t),this._cachedRendererJson=this.renderer.toJSON())}async applyRenderer(e,t){var i;const r=e&&e.pixelBlock;if(!(Object(l.l)(r)&&r.pixels&&r.pixels.length>0))return null;let n;await this.updateRenderer();const a=this._rasterJobHandler.instance,s=null!=(i=this.bandIds)?i:[];return n=a?await a.symbolize({...e,simpleStretchParams:t,bandIds:s}):this.symbolizer.symbolize({...e,simpleStretchParams:t,bandIds:s}),n}getTileUrl(e,t,i){var r;return"RasterTileServer"===(null==(r=this.raster)?void 0:r.datasetFormat)?`${this.url}/tile/${e}/${t}/${i}`:""}getCompatibleTileInfo(e,t,i=!1){if(!this.loaded||Object(l.k)(t))return null;if(i&&e.equals(this.spatialReference))return this.tileInfo;const r=Object(O.e)(e);return R.a.create({size:256,spatialReference:e,origin:r?{x:r.origin[0],y:r.origin[1]}:{x:t.xmin,y:t.ymax}})}getCompatibleFullExtent(e){return this.loaded?(this._compatibleFullExtent&&this._compatibleFullExtent.spatialReference.equals(e)||(this._compatibleFullExtent=this.raster.computeExtent(e)),this._compatibleFullExtent):null}async fetchTile(e,t,r,n={}){if(i(this),n.requestAsImageElement){const i=this.getTileUrl(e,t,r);return Object(x.default)(i,{responseType:"image",query:{...this.refreshParameters,...this.raster.ioConfig.customFetchParameters},signal:n.signal}).then((e=>e.data))}if(Object(l.l)(this.rasterInfo.multidimensionalInfo)&&(n=this.normalizeRasterFetchOptions(n),Object(l.k)(n.multidimensionalDefinition))){const i=n.tileInfo||this.rasterInfo.storageInfo.tileInfo;return{extent:this.raster.getTileExtentFromTileInfo(e,t,r,i),pixelBlock:null}}return await this._initJobHandler(),await this._updateRasterFunction(),"raster-shaded-relief"===this.renderer.type&&(n={...n,buffer:{cols:1,rows:1}}),this.raster.fetchTile(e,t,r,n)}async fetchPixels(e,t,i,r={}){return Object(l.l)(this.rasterInfo.multidimensionalInfo)&&(r=this.normalizeRasterFetchOptions(r),Object(l.k)(r.multidimensionalDefinition))?{extent:e,pixelBlock:null}:(await this._initJobHandler(),await this._updateRasterFunction(),this.raster.fetchPixels(e,t,i,r))}async identify(e,t={}){return i(this),!Object(l.l)(this.rasterInfo.multidimensionalInfo)||this.rasterInfo.hasMultidimensionalTranspose&&(Object(F.g)(t.multidimensionalDefinition)||t.transposedVariableName||t.timeExtent)||(t=this.normalizeRasterFetchOptions(t),!Object(l.k)(t.multidimensionalDefinition))?this.raster.identify(e,t):{location:e,value:null}}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}hasStandardTime(){var e,t,i;const r=null==(e=this.rasterInfo)?void 0:e.multidimensionalInfo;if(Object(l.k)(r)||"standard-time"!==(null==(t=this.rasterInfo)?void 0:t.dataType))return!1;const n=this.multidimensionalDefinition,a=null==n||null==(i=n[0])?void 0:i.variableName;return r.variables.some((e=>e.name===a&&(!(null!=n&&n[0].dimensionName)||e.dimensions.some((e=>"StdTime"===e.name)))))}getStandardTimeValue(e){return new Date(24*(e-25569)*3600*1e3).toString()}getMultidimensionalSubsetVariables(e){const t=null!=e?e:this.rasterInfo.multidimensionalInfo;return Object(F.e)(this.multidimensionalSubset,t)}_configDefaultSettings(){this._configDefaultInterpolation(),this.multidimensionalDefinition||(this.multidimensionalDefinition=Object(F.b)(this.raster.rasterInfo,{multidimensionalSubset:this.multidimensionalSubset})),this._configDefaultRenderer()}_initJobHandler(){if(null!=this._rasterJobHandler.connectionPromise)return this._rasterJobHandler.connectionPromise;const e=new T.a;return this._rasterJobHandler.connectionPromise=e.initialize().then((()=>{i(this),this._rasterJobHandler.instance=e,this.raster.rasterJobHandler=e,this.renderer&&this.updateRenderer(),"Function"===this.raster.datasetFormat&&this.raster.syncJobHandler()})).catch((()=>{})),this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this._cachedRendererJson=null,this.raster&&(this.raster.rasterJobHandler=null)}_configDefaultInterpolation(){if(null==this.interpolation){var e;i(this);const t=Object(Y.c)(this.rasterInfo,this.raster.tileType,null==(e=this.sourceJSON)?void 0:e.defaultResamplingMethod);this._set("interpolation",t)}}_configDefaultRenderer(){i(this);const e=this.raster.rasterInfo;if(this.bandIds||(this.bandIds=Object(Y.b)(e)),!this.renderer){var t,r,n,a,s;const i=Object(Y.a)(e,{bandIds:this.bandIds,variableName:Object(l.l)(this.multidimensionalDefinition)?null==(t=this.multidimensionalDefinition[0])?void 0:t.variableName:null});"WCSServer"===this.raster.datasetFormat&&"raster-stretch"===i.type&&((null!=(r=null==(n=e.statistics)?void 0:n[0].max)?r:0)>1e24||(null!=(a=null==(s=e.statistics)?void 0:s[0].min)?a:0)<-1e24)&&(i.dynamicRangeAdjustment=!0,i.statistics=null,"none"===i.stretchType&&(i.stretchType="min-max")),this.renderer=i}this.symbolizer?(this.symbolizer.rendererJSON=Object(Y.e)(this.renderer.toJSON()),this.symbolizer.rasterInfo=e):this.symbolizer=new X.a({rendererJSON:this.renderer.toJSON(),rasterInfo:e});const o=this.symbolizer.bind();o.success||Q.warn("imagery-tile-mixin",o.error||"The given renderer is not supported by the layer.")}async _updateRasterFunction(){var e;if("imagery-tile"!==this.type||JSON.stringify(this.rasterFunction)===JSON.stringify(this._cachedRasterFunctionJson))return;let t=this.raster;if("Function"===(null==(e=t)?void 0:e.datasetFormat)){const e=t.rasterFunction.getPrimaryRasters();t=e.rasters[0]}const{rasterFunction:i}=this;if(i){var r;const e=Object(V.a)(i.toJSON(),{raster:t}),n=new U({rasterFunction:e});n.rasterJobHandler=this._rasterJobHandler.instance,await n.open(),this._cachedRasterFunctionJson=null==(r=this.rasterFunction)?void 0:r.toJSON(),this.raster=n}else this.raster=t}};function i(e){if(!e.raster||!e.rasterInfo)throw new s.a("imagery-tile","no raster")}return Object(r.a)([Object(h.b)()],t.prototype,"_cachedRendererJson",void 0),Object(r.a)([Object(h.b)()],t.prototype,"_cachedRasterFunctionJson",void 0),Object(r.a)([Object(h.b)()],t.prototype,"_compatibleFullExtent",void 0),Object(r.a)([Object(h.b)()],t.prototype,"_rasterJobHandler",void 0),Object(r.a)([Object(h.b)()],t.prototype,"bandIds",void 0),Object(r.a)([Object(h.b)({json:{origins:{service:{read:{source:"copyrightText"}}}}})],t.prototype,"copyright",void 0),Object(r.a)([Object(h.b)({json:{read:!1}})],t.prototype,"fullExtent",null),Object(r.a)([Object(h.b)()],t.prototype,"interpolation",void 0),Object(r.a)([Object(h.b)()],t.prototype,"ioConfig",void 0),Object(r.a)([Object(h.b)({type:[j.a]})],t.prototype,"multidimensionalDefinition",void 0),Object(r.a)([Object(h.b)({type:S.a,json:{write:!0}})],t.prototype,"multidimensionalSubset",void 0),Object(r.a)([Object(h.b)()],t.prototype,"raster",void 0),Object(r.a)([Object(h.b)({type:_.a})],t.prototype,"rasterFunction",void 0),Object(r.a)([Object(h.b)()],t.prototype,"rasterInfo",null),Object(r.a)([Object(h.b)()],t.prototype,"sourceJSON",void 0),Object(r.a)([Object(h.b)({json:{read:!1}})],t.prototype,"spatialReference",null),Object(r.a)([Object(h.b)({json:{read:!1}})],t.prototype,"tileInfo",null),Object(r.a)([Object(h.b)(I.o)],t.prototype,"url",null),Object(r.a)([Object(h.b)({types:a.a})],t.prototype,"renderer",null),Object(r.a)([Object(h.b)()],t.prototype,"symbolizer",void 0),t=Object(r.a)([Object(m.a)("esri.layers.ImageryTileMixin")],t),t};var te=i(722),ie=i(723),re=i(594),ne=i(592),ae=i(732),se=i(448),le=i(1309),oe=i(1153),ce=i(1444);function ue(e){const t=e.fields,i=e.records,r=t.some((e=>"oid"===e.name.toLowerCase()))?"OBJECTID":"OID",n=[{name:r,type:"esriFieldTypeOID",alias:"OID"}].concat(t.map((e=>({name:e.name,type:"esriFieldType"+e.typeName,alias:e.name})))),a=n.map((e=>e.name)),s=[];let l=0,o=0;return i.forEach((e=>{const t={};for(t[r]=l++,o=1;o<a.length;o++)t[a[o]]=e[o-1];s.push({attributes:t})})),{displayFieldName:"",fields:n,features:s}}class he{static get supportedVersions(){return[5]}static parse(e){const t=new DataView(e),i=3&t.getUint8(0);if(3!==i)return{header:{version:i},recordSet:null};const r=t.getUint32(4,!0),n=t.getUint16(8,!0),a=t.getUint16(10,!0),s={version:i,recordCount:r,headerByteCount:n,recordByteCount:a};let l=32;const o=[],c=[];let u;if(3===i){for(;13!==t.getUint8(l);)u=String.fromCharCode(t.getUint8(l+11)).trim(),o.push({name:Object(ce.a)(new Uint8Array(e,l,11)),type:u,typeName:["String","Date","Double","Boolean","String","Integer"][["C","D","F","L","M","N"].indexOf(u)],length:t.getUint8(l+16)}),l+=32;if(l+=1,o.length>0)for(;c.length<r&&e.byteLength-l>a;){const i=[];32===t.getUint8(l)?(l+=1,o.forEach((t=>{if("C"===t.type)i.push(Object(ce.a)(new Uint8Array(e,l,t.length)).trim());else if("N"===t.type)i.push(parseInt(String.fromCharCode.apply(null,new Uint8Array(e,l,t.length)).trim(),10));else if("F"===t.type)i.push(parseFloat(String.fromCharCode.apply(null,new Uint8Array(e,l,t.length)).trim()));else if("D"===t.type){const r=String.fromCharCode.apply(null,new Uint8Array(e,l,t.length)).trim();i.push(new Date(parseInt(r.substring(0,4),10),parseInt(r.substring(4,6),10)-1,parseInt(r.substring(6,8),10)))}l+=t.length})),c.push(i)):l+=a}}return{header:s,fields:o,records:c,recordSet:ue({fields:o,records:c})}}}var fe=i(1494),de=i(474);const pe=new Map;pe.set("int16","esriFieldTypeSmallInteger"),pe.set("int32","esriFieldTypeInteger"),pe.set("int64","esriFieldTypeInteger"),pe.set("float32","esriFieldTypeSingle"),pe.set("float64","esriFieldTypeDouble"),pe.set("text","esriFieldTypeString");let me=class extends ${constructor(){super(...arguments),this.storageInfo=null,this.datasetFormat="CRF"}async open(e){await this.init();const{data:t}=await this.request(this.url+"/conf.json",{signal:null==e?void 0:e.signal});if(!this._validateHeader(t))throw new s.a("cloudraster:open","Invalid or unsupported conf.json.");this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const{storageInfo:i,rasterInfo:r}=this._parseHeader(t);if("thematic"===r.dataType){const e=await this._fetchAuxiliaryInformation();r.attributeTable=e}this._set("storageInfo",i),this._set("rasterInfo",r),this.ioConfig.retryCount=this.ioConfig.retryCount||0}async fetchRawTile(e,t,i,r={}){const{transposeInfo:n}=this.rasterInfo.storageInfo,{transposedVariableName:a}=r,s=!(!n||!a),l=s?0:this.rasterInfo.storageInfo.maximumPyramidLevel-e;if(l<0)return null;const o=this._buildCacheFilePath(l,t,i,r.multidimensionalDefinition,a),c=this._getIndexRecordFromBundle(t,i,s),u=await this.request(o,{range:{from:0,to:this.storageInfo.headerSize-1},responseType:"array-buffer",signal:r.signal});if(!u)return null;const h=new Uint8Array(u.data),f=this._getTileEndAndContentType(h,c);if(0===f.recordSize)return null;const d=await this.request(o,{range:{from:f.position,to:f.position+f.recordSize},responseType:"array-buffer",signal:r.signal});if(!d)return null;const[p,m]=this._getTileSize(s);return this.decodePixelBlock(d.data,{width:p,height:m,planes:null,pixelType:null,returnInterleaved:s})}_validateHeader(e){return e&&"RasterInfo"===e.type&&!["origin","extent","geodataXform","LODInfos","blockWidth","blockHeight","bandCount","pixelType","pixelSizeX","pixelSizeY","format","packetSize"].some((t=>!e[t]))}_parseHeader(e){var t,i;const r=["u1","u2","u4","u8","s8","u16","s16","u32","s32","f32","f64"][e.pixelType],{bandCount:n,histograms:a,colormap:s,blockWidth:l,blockHeight:o,firstPyramidLevel:c,maximumPyramidLevel:u}=e,h=e.statistics&&e.statistics.map((e=>({min:e.min,max:e.max,avg:e.mean,stddev:e.standardDeviation,median:e.median,mode:e.mode}))),f=e.extent.spatialReference,d=null==(t=e.geodataXform)?void 0:t.spatialReference,p=new Z.a(null!=f&&f.wkid||null!=f&&f.wkt?f:d);let m=new W.a({xmin:e.extent.xmin,ymin:e.extent.ymin,xmax:e.extent.xmax,ymax:e.extent.ymax,spatialReference:p});const b=new B.a({x:e.pixelSizeX,y:e.pixelSizeY,spatialReference:p}),y=Math.round((m.xmax-m.xmin)/b.x),g=Math.round((m.ymax-m.ymin)/b.y),x=this._parseTransform(e.geodataXform),v=x?m:null;x&&(m=x.forwardTransform(m),b.x=(m.xmax-m.xmin)/y,b.y=(m.ymax-m.ymin)/g);const O=null!=(i=e.properties)?i:{},w=e.format.toLowerCase().replace("cache/",""),I=new B.a(e.origin.x,e.origin.y,p);let j,S,_,T;if(s&&s.colors)for(j=[],S=0;S<s.colors.length;S++)_=s.colors[S],T=s.values?s.values[S]:S,j.push([T,255&_,_<<16>>>24,_<<8>>>24,_>>>24]);const k=e.LODInfos,C=[];for(S=0;S<k.levels.length;S++)C.push({level:k.levels[S],resolution:k.resolutions[S],scale:96/.0254*k.resolutions[S]});const F=new R.a({dpi:96,lods:C,format:w,origin:I,size:[l,o],spatialReference:p}),M={recordSize:8,packetSize:e.packetSize,headerSize:e.packetSize*e.packetSize*8+64},D=[{maxCol:Math.ceil(y/l)-1,maxRow:Math.ceil(g/o)-1,minCol:0,minRow:0}];let z=2;if(u>0)for(S=0;S<u;S++)D.push({maxCol:Math.ceil(y/z/l)-1,maxRow:Math.ceil(g/z/o)-1,minCol:0,minRow:0}),z*=2;const A=e.mdInfo;let E=null;if(A&&O._yxs){const e=O._yxs;E={packetSize:e.PacketSize,tileSize:[e.TileXSize,e.TileYSize]}}return{storageInfo:M,rasterInfo:new oe.a({width:y,height:g,pixelType:r,bandCount:n,extent:m,nativeExtent:v,transform:x,spatialReference:p,pixelSize:b,keyProperties:O,statistics:h,histograms:a,multidimensionalInfo:A,colormap:j,storageInfo:new P.a({blockWidth:l,blockHeight:o,pyramidBlockWidth:l,pyramidBlockHeight:o,origin:I,tileInfo:F,transposeInfo:E,firstPyramidLevel:c,maximumPyramidLevel:u,blockBoundary:D})})}}_parseTransform(e){var t,i;if(!Object(fe.a)(e))throw new s.a("cloudraster:open","the data contains unsupported geodata transform types");const r=Object(fe.b)(e);if("identity"===r.type)return null;if("polynomial"!==r.type||null==(t=r.forwardCoefficients)||!t.length||null==(i=r.inverseCoefficients)||!i.length)throw new s.a("cloudraster:open","the data contains unsupported geodata transforms - both forward and inverse coefficients are required currently");return r}async _fetchAuxiliaryInformation(e){const t=this.request(this.url+"/conf.vat.json",{signal:e}).then((e=>e.data)).catch((()=>null)),i=this.request(this.url+"/conf.vat.dbf",{responseType:"array-buffer",signal:e}).then((e=>e.data)).catch((()=>null)),r=await Promise.all([t,i]);let n;if(r[0]){let e=r[0].fields;const t=r[0].values;if(e&&t){e=e.map((e=>({type:"OID"===e.name?"esriFieldTypeOID":pe.get(e.type),name:e.name,alias:e.alias||e.name})));const i=t.map((e=>({attributes:e})));e&&t&&(n={fields:e,features:i})}}return!n&&r[1]&&(n=he.parse(r[1]).recordSet),de.default.fromJSON(n)}_buildCacheFilePath(e,t,i,r,n){const a=this._getPackageSize(!!n),s=Math.floor(t/a)*a,o=Math.floor(i/a)*a,c="R"+this._toHexString4(s)+"C"+this._toHexString4(o);let u="L";u+=e>=10?e.toString():"0"+e.toString();const{multidimensionalInfo:h}=this.rasterInfo,f=null==r?void 0:r[0];if(Object(l.k)(h)||!f)return`${this.url}/_alllayers/${u}/${c}.bundle`;let d="_yxs";if(!n){d=h.variables.find((e=>e.name===f.variableName)).dimensions[0].values.indexOf(f.values[0]).toString(16);const e=4-d.length;for(let t=0;t<e;t++)d="0"+d;d="S"+d}const p=this._getVariableFolderName(n||f.variableName);return`${this.url}/_alllayers/${p}/${d}/${u}/${c}.bundle`}_getPackageSize(e=!1){var t;const{transposeInfo:i}=this.rasterInfo.storageInfo;return e&&Object(l.l)(i)?null!=(t=i.packetSize)?t:0:this.storageInfo.packetSize}_getTileSize(e=!1){const{storageInfo:t}=this.rasterInfo,{transposeInfo:i}=t;return e&&Object(l.l)(i)?i.tileSize:t.tileInfo.size}_getVariableFolderName(e){return""===(e=e.trim())?"_v":e.replace(/[\{|\}\-]/g,"_").replace("\\*","_v")}_getIndexRecordFromBundle(e,t,i=!1){const r=this._getPackageSize(i),n=r*(e%r)+t%r;if(n<0)throw"Invalid level / row / col";return 20+n*this.storageInfo.recordSize+44}_getTileEndAndContentType(e,t){const i=e.subarray(t,t+8);let r,n=0;for(r=0;r<5;r++)n|=(255&i[r])<<8*r;const a=0xffffffffff&n;for(n=0,r=5;r<8;r++)n|=(255&i[r])<<8*(r-5);return{position:a,recordSize:0xffffffffff&n}}_toHexString4(e){let t=e.toString(16);if(4!==t.length){let e=4-t.length;for(;e-- >0;)t="0"+t}return t}};Object(r.a)([Object(h.b)({readOnly:!0})],me.prototype,"storageInfo",void 0),Object(r.a)([Object(h.b)({type:String,json:{write:!0}})],me.prototype,"datasetFormat",void 0),me=Object(r.a)([Object(m.a)("esri.layers.support.rasterDatasets.CloudRaster")],me);const be=me;var ye=i(32),ge=i(1195);let xe=class extends ${constructor(){super(...arguments),this.datasetFormat="MEMORY",this.data=null}async open(e){var t,i;await this.init();const r=this.data,{pixelBlock:n,statistics:a,histograms:s,name:l,keyProperties:o,nativeExtent:c,transform:u}=this.data,{width:h,height:f,pixelType:d}=n,p=null!=(t=r.extent)?t:new W.a({xmin:-.5,ymin:.5,xmax:h-.5,ymax:f-.5,spatialReference:new Z.a({wkid:3857})}),m=null!=(i=r.isPseudoSpatialReference)?i:!r.extent,b={x:p.width/h,y:p.height/f},y=new oe.a({width:h,height:f,pixelType:d,extent:p,nativeExtent:c,transform:u,pixelSize:b,spatialReference:p.spatialReference,bandCount:3,keyProperties:o||{},statistics:a,isPseudoSpatialReference:m,histograms:s});this.createRemoteDatasetStorageInfo(y,512,512),this._set("rasterInfo",y),this.updateTileInfo(),await this._buildInMemoryRaster(n,{width:512,height:512},e),this.datasetName=l,this.url="/InMemory/"+l}fetchRawTile(e,t,i,r={}){const n=this._pixelBlockTiles.get(`${e}/${t}/${i}`);return Promise.resolve(n)}async _buildInMemoryRaster(e,t,i){var r,n;const a=this.rasterInfo.storageInfo.maximumPyramidLevel,o=this.rasterJobHandler?this.rasterJobHandler.split({pixelBlock:e,tileSize:t,maximumPyramidLevel:a},i):Promise.resolve(Object(L.r)(e,t,a)),u=Object(l.l)(this.rasterInfo.statistics),h=Object(l.l)(this.rasterInfo.histograms),f=u?Promise.resolve({statistics:null,histograms:null}):this.rasterJobHandler?this.rasterJobHandler.estimateStatisticsHistograms({pixelBlock:e},i):Promise.resolve(Object(ge.e)(e)),d=await Object(c.g)([o,f]);if(!d[0].value&&d[1].value)throw new s.a("inmemory-raster:open","failed to build in memory raster");this._pixelBlockTiles=d[0].value,u||(this.rasterInfo.statistics=null==(r=d[1].value)?void 0:r.statistics),h||(this.rasterInfo.histograms=null==(n=d[1].value)?void 0:n.histograms)}};Object(r.a)([Object(h.b)({type:String,json:{write:!0}})],xe.prototype,"datasetFormat",void 0),Object(r.a)([Object(h.b)()],xe.prototype,"data",void 0),xe=Object(r.a)([Object(m.a)("esri.layers.support.rasterDatasets.InMemoryRaster")],xe);const ve=xe;function Oe(e,t){if(!e||!t)return[];let i=t;t.includes("/")?(i=t.slice(0,t.indexOf("/")),t=t.slice(t.indexOf("/")+1)):t="";const r=[];if(t){const n=Oe(e,i);for(let e=0;e<n.length;e++)Oe(n[e],t).forEach((e=>r.push(e)));return r}const n=e.getElementsByTagNameNS("*",i);if(!n||0===n.length)return[];for(let a=0;a<n.length;a++)r.push(n[a]||n.item[a]);return r}function we(e,t){if(!e||!t)return null;let i=t;t.includes("/")?(i=t.slice(0,t.indexOf("/")),t=t.slice(t.indexOf("/")+1)):t="";const r=Oe(e,i);return r.length>0?t?we(r[0],t):r[0]:null}function Ie(e,t=null){const i=t?we(e,t):e;let r;return i?(r=i.textContent||i.nodeValue,r?r.trim():null):null}function je(e,t){return function(e,t){const i=Oe(e,t),r=[];let n;for(let a=0;a<i.length;a++)n=i[a].textContent||i[a].nodeValue,n&&(n=n.trim(),""!==n&&r.push(n));return r}(e,t).map((e=>Number(e)))}function Se(e,t){const i=Ie(e,t);return Number(i)}function _e(e,t){var i;const r=null==e||null==(i=e.nodeName)?void 0:i.toLowerCase(),n=t.toLowerCase();return r.slice(r.lastIndexOf(":")+1)===n}var Te=i(1291);function Re(e,t){if(!e||!t)return null;const i=[];for(let r=0;r<e.length;r++)i.push(e[r]),i.push(t[r]);return i}function ke(e){if(!e)return null;let t=Number(e);if(!isNaN(t)&&0!==t)return new Z.a({wkid:t});if((e=String(e)).startsWith("COMPD_CS")){if(!e.includes("VERTCS")||!e.includes("GEOGCS")&&!e.startsWith("PROJCS"))return null;const i=e.indexOf("VERTCS"),r=e.indexOf("PROJCS"),n=r>-1?r:e.indexOf("GEOGCS");if(-1===n)return null;const a=e.slice(n,e.lastIndexOf("]",i)+1).trim(),s=e.slice(i,e.lastIndexOf("]")).trim();t=Ce(a);const l=new Z.a(t?{wkid:t}:{wkt:a}),o=Ce(s);return o&&(l.vcsWkid=o),l}return e.startsWith("GEOGCS")||e.startsWith("PROJCS")?(t=Ce(e),new Z.a(0!==t?{wkid:t}:{wkt:e})):null}function Ce(e){var t;const i=e.replace(/\]/g,"[").replace(/\"/g,"").split("[").map((e=>e.trim())).filter((e=>""!==e)),r=i[i.length-1].split(","),n=null==(t=r[0])?void 0:t.toLowerCase();if(("epsg"===n||"esri"===n)&&e.endsWith('"]]')){const e=Number(r[1]);if(!isNaN(e)&&0!==e)return e}return 0}function Pe(e){var t;if("pamdataset"!==(null==e||null==(t=e.documentElement.tagName)?void 0:t.toLowerCase()))return{};const i={spatialReference:null,transform:null,metadata:{},rasterBands:[],statistics:null,histograms:null};e.documentElement.childNodes.forEach((e=>{if(1===e.nodeType)if(_e(e,"SRS")){if(!i.spatialReference){const t=Ie(e);i.spatialReference=ke(t)}}else if(_e(e,"Metadata"))if("xml:ESRI"===e.getAttribute("domain")){const{spatialReference:t,transform:r}=function(e){var t;const i=we(e,"GeodataXform"),r=ke(Se(i,"SpatialReference/WKID")||Ie(i,"SpatialReference/WKT"));if("typens:PolynomialXform"!==i.getAttribute("xsi:type"))return{spatialReference:r,transform:null};const n=null!=(t=Se(i,"PolynomialOrder"))?t:1,a=je(i,"CoeffX/Double"),s=je(i,"CoeffY/Double"),l=je(i,"InverseCoeffX/Double"),o=je(i,"InverseCoeffY/Double"),c=Re(a,s),u=Re(l,o);return{spatialReference:r,transform:c&&u&&c.length&&u.length?new Te.a({spatialReference:r,polynomialOrder:n,forwardCoefficients:c,inverseCoefficients:u}):null}}(e);i.transform=r,i.spatialReference||(i.spatialReference=t)}else Oe(e,"MDI").forEach((e=>i.metadata[e.getAttribute("key")]=Ie(e)));else if(_e(e,"PAMRasterBand")){const t=function(e){var t;const i=Se(e,"NoDataValue"),r=we(e,"Histograms/HistItem"),n=Se(r,"HistMin"),a=Se(r,"HistMax"),s=Se(r,"BucketCount"),l=null==(t=Ie(r,"HistCounts"))?void 0:t.split("|").map((e=>Number(e)));let o,c,u,h;Oe(e,"Metadata/MDI").forEach((e=>{var t;const i=Number(null!=(t=e.textContent)?t:e.nodeValue);switch(e.getAttribute("key").toUpperCase()){case"STATISTICS_MINIMUM":o=i;break;case"STATISTICS_MAXIMUM":c=i;break;case"STATISTICS_MEAN":u=i;break;case"STATISTICS_STDDEV":h=i}}));const f=Se(e,"Metadata/SourceBandIndex");return{noDataValue:i,histogram:null!=l&&l.length&&null!=n&&null!=a?{min:n,max:a,size:s||l.length,counts:l}:null,sourceBandIndex:f,statistics:null!=o&&null!=c?{min:o,max:c,avg:u,stddev:h}:null}}(e);null!=t.sourceBandIndex&&null==i.rasterBands[t.sourceBandIndex]?i.rasterBands[t.sourceBandIndex]=t:i.rasterBands.push(t)}}));const r=i.rasterBands;if(r.length){const e=!!r[0].statistics;i.statistics=e?r.map((e=>e.statistics)).filter(l.l):null;const t=!!r[0].histogram;i.histograms=t?r.map((e=>e.histogram)).filter(l.l):null}return i}let Fe=class extends ${async open(e){await this.init();const t=await this._fetchData(e);let{spatialReference:i,statistics:r,histograms:n,transform:a}=await this._fetchAuxiliaryData(e);const s=!i;s&&(i=new Z.a({wkid:3857})),(null==n?void 0:n.length)&&null==r&&(r=Object(ge.d)(n));const{width:l,height:o}=t;let c=new W.a({xmin:-.5,ymin:.5-o,xmax:l-.5,ymax:.5,spatialReference:i});const u=a?a.forwardTransform(c):c;let h=!0;if(a){const e=a.forwardCoefficients;h=e&&0===e[1]&&0===e[2],h&&(a=null,c=u)}const f=new ve({data:{extent:u,nativeExtent:c,transform:a,pixelBlock:t,statistics:r,histograms:n,keyProperties:{DateType:"Processed"},isPseudoSpatialReference:s}});await f.open(),f.data=null,this._set("rasterInfo",f.rasterInfo),this._inMemoryRaster=f}fetchRawTile(e,t,i,r={}){return this._inMemoryRaster.fetchRawTile(e,t,i,r)}async _fetchData(e){const{data:t}=await this.request(this.url,{responseType:"array-buffer",signal:null==e?void 0:e.signal}),i=Object(J.b)(t).toUpperCase();if("JPG"!==i&&"PNG"!==i&&"GIF"!==i&&"BMP"!==i)throw new s.a("image-aux-raster:open","the data is not a supported format");this._set("datasetFormat",i);const r=i.toLowerCase(),n="gif"===r||"bmp"===r||!Object(ye.a)("ios");return await this.decodePixelBlock(t,{format:r,useCanvas:n,hasNoZlibMask:!0})}async _fetchAuxiliaryData(e){var t,i;const r=Object(l.t)(null==e?void 0:e.signal),n=null!=(t=this.ioConfig.skipExtensions)?t:[],a=n.includes("aux.xml")?null:this.request(this.url+".aux.xml",{responseType:"xml",signal:r}),s=this.datasetFormat,o="JPG"===s?"jgw":"PNG"===s?"pgw":"BMP"===s?"bpw":null,u=o&&n.includes(o)?null:this.request(this.url.slice(0,this.url.lastIndexOf("."))+"."+o,{responseType:"text",signal:r}),h=await Object(c.g)([a,u]);if(null!=r&&r.aborted)throw Object(c.c)();const f=Pe(null==(i=h[0].value)?void 0:i.data);if(!f.transform){const e=h[1].value?h[1].value.data.split("\n").slice(0,6).map((e=>Number(e))):null;f.transform=6===(null==e?void 0:e.length)?new Te.a({forwardCoefficients:[e[4],e[5],e[0],-e[1],e[2],-e[3]]}):null}return f}};Object(r.a)([Object(h.b)({type:String,json:{write:!0}})],Fe.prototype,"datasetFormat",void 0),Fe=Object(r.a)([Object(m.a)("esri.layers.support.rasterDatasets.ImageAuxRaster")],Fe);const Me=Fe;var Be=i(44),De=i(1173),ze=i(1187),Ae=i(1446),Ee=i(1475);let Ne=class extends ${constructor(){super(...arguments),this._levelOffset=0,this._tilemapCache=null,this._slices=null,this.datasetFormat="RasterTileServer",this.tileType=null}async open(e){var t,i,r,n;await this.init();const a=e&&e.signal,o=this.sourceJSON?{data:this.sourceJSON}:await this.request(this.url,{query:{f:"json"},signal:a});o.ssl&&(this.url=this.url.replace(/^http:/i,"https:"));const c=o.data;if(this.sourceJSON=c,!c)throw new s.a("imageserverraster:open","cannot initialize tiled image service, missing service info");if(!c.tileInfo)throw new s.a("imageserverraster:open","use ImageryLayer to open non-tiled image services");this._fixScaleInServiceInfo();this.tileType=c.cacheType,null==this.tileType&&(["jpg","jpeg","png","png8","png24","png32","mixed"].includes(c.tileInfo.format.toLowerCase())?this.tileType="Map":"lerc"===c.tileInfo.format.toLowerCase()?this.tileType="Elevation":this.tileType="Raster"),this.datasetName=null!=(t=null==(i=c.name)?void 0:i.slice(c.name.indexOf("/")+1))?t:"";const u=await this._fetchRasterInfo({signal:a});if(Object(l.k)(u))throw new s.a("image-server-raster:open","cannot initialize image service");const h="Map"===this.tileType?Object(De.a)(c.tileInfo,c):R.a.fromJSON(c.tileInfo);Object(l.c)(h);const[f,d]=this._computeMinMaxLOD(u,h),{extent:p,pixelSize:m}=u,b=.5/u.width*m.x,y=Math.max(m.x,m.y),{lods:g}=h;("Map"!==this.tileType&&0!==c.maxScale||Math.abs(m.x-m.y)>b||!g.some((e=>Math.abs(e.resolution-y)<b)))&&(m.x=m.y=f.resolution,u.width=Math.ceil((p.xmax-p.xmin)/m.x-.1),u.height=Math.ceil((p.ymax-p.ymin)/m.y-.1));const x=f.level-d.level,[v,O]=h.size,w=[];g.forEach((e=>{e.level>=d.level&&e.level<=f.level&&w.push({x:e.resolution,y:e.resolution})})),w.sort(((e,t)=>e.x-t.x));const I=this.computeBlockBoundary(p,v,O,h.origin,w,x),j=w.length>1?w.slice(1):null;let S;if(c.transposeInfo&&(S={tileSize:[c.transposeInfo.rows,c.transposeInfo.cols],packetSize:null!=(r=null==(n=u.keyProperties)?void 0:n._yxs.PacketSize)?r:0}),u.storageInfo=new P.a({blockWidth:h.size[0],blockHeight:h.size[1],pyramidBlockWidth:h.size[0],pyramidBlockHeight:h.size[1],pyramidResolutions:j,compression:h.format,origin:h.origin,firstPyramidLevel:1,maximumPyramidLevel:x,tileInfo:h,transposeInfo:S,blockBoundary:I}),this._fixGCSShift(u),this._set("rasterInfo",u),c.capabilities.toLowerCase().includes("tilemap")){const e={tileInfo:u.storageInfo.tileInfo,parsedUrl:Object(Be.N)(this.url),url:this.url,tileServers:[],type:"tile"};this._tilemapCache=new ze.a({layer:e})}}async fetchRawTile(e,t,i,r={}){const{storageInfo:n,extent:a}=this.rasterInfo,{transposeInfo:s}=n,o=Object(l.l)(s)&&!!r.transposedVariableName;if(this._slices&&!o&&null==r.sliceId)return null;const c=o?0:n.maximumPyramidLevel-e+this._levelOffset,u=`${this.url}/tile/${c}/${t}/${i}`,h=this._slices?o?{variable:r.transposedVariableName}:{sliceId:r.sliceId||0}:null,{data:f}=await this.request(u,{query:h,responseType:"array-buffer",signal:r.signal});if(!f)return null;const d=o?s.tileSize:n.tileInfo.size,p=await this.decodePixelBlock(f,{width:d[0],height:d[1],planes:null,pixelType:null,isPoint:"Elevation"===this.tileType,returnInterleaved:o}),m=n.blockBoundary[e];if("jpg"!==n.compression||i>m.minCol&&i<m.maxCol&&t>m.minRow&&t<m.maxRow)return p;const{origin:b,blockWidth:y,blockHeight:g}=n,{x:x,y:v}=this.getPyramidPixelSize(e),O=Math.round((a.xmin-b.x)/x)%y,w=Math.round((a.xmax-b.x)/x)%y||y,I=Math.round((b.y-a.ymax)/v)%g,j=Math.round((b.y-a.ymin)/v)%g||g,S=i===m.minCol?O:0,_=t===m.minRow?I:0,T=i===m.maxCol?w:y,R=t===m.maxRow?j:g;return Object(L.q)(p,{x:S,y:_},{width:T-S,height:R-_}),p}getSliceIndex(e){if(!this._slices||Object(l.k)(e)||0===e.length)return null;const t=e;for(let i=0;i<this._slices.length;i++){const e=this._slices[i].multidimensionalDefinition;if(e.length===t.length&&!e.some((e=>{const i=t.find((t=>e.variableName===t.variableName&&t.dimensionName===e.dimensionName));return!i||(Array.isArray(e.values[0])?`${e.values[0][0]}-${e.values[0][1]}`:e.values[0])!==(Array.isArray(i.values[0])?`${i.values[0][0]}-${i.values[0][1]}`:i.values[0])})))return i}return null}async fetchVariableStatisticsHistograms(e,t){const i=this.request(this.url+"/statistics",{query:{variable:e,f:"json"},signal:t}).then((e=>{var t;return null==(t=e.data)?void 0:t.statistics})),r=this.request(this.url+"/histograms",{query:{variable:e,f:"json"},signal:t}).then((e=>{var t;return null==(t=e.data)?void 0:t.histograms})),n=await Promise.all([i,r]);return n[0]&&n[0].forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation})),{statistics:n[0]||null,histograms:n[1]||null}}async computeBestPyramidLevelForLocation(e,t={}){if(!this._tilemapCache)return 0;let i=this.identifyPixelLocation(e,0,Object(l.t)(t.datumTransformation));if(null===i)return null;let r=0;const{maximumPyramidLevel:n}=this.rasterInfo.storageInfo;let a=n-r+this._levelOffset;const s=i.srcLocation;for(;a>=0;){try{if("available"===await this._tilemapCache.fetchAvailability(a,i.row,i.col,t))break}catch{}if(a--,r++,i=this.identifyPixelLocation(s,r,Object(l.t)(t.datumTransformation)),null===i)return null}return-1===a||null==i?null:r}async _fetchRasterInfo(e){const t=this.sourceJSON;if("Map"===this.tileType){const e=t.fullExtent||t.extent,i=Math.ceil((e.xmax-e.xmin)/t.pixelSizeX-.1),r=Math.ceil((e.ymax-e.ymin)/t.pixelSizeY-.1),n=Z.a.fromJSON(t.spatialReference||e.spatialReference),a=new B.a({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:n});return new oe.a({width:i,height:r,bandCount:3,extent:W.a.fromJSON(e),spatialReference:n,pixelSize:a,pixelType:"u8",statistics:null,keyProperties:{DataType:"processed"}})}const{signal:i}=e,r=Object(Ee.a)(this.url,this.sourceJSON,{signal:i,query:this.ioConfig.customFetchParameters}),n=t.hasMultidimensions?this.request(`${this.url}/slices`,{query:{f:"json"},signal:i}).then((e=>e.data&&e.data.slices)).catch((()=>null)):null,a=await Promise.all([r,n]);return this._slices=a[1],a[0]}_fixScaleInServiceInfo(){const{sourceJSON:e}=this;e.minScale&&e.minScale<0&&(e.minScale=0),e.maxScale&&e.maxScale<0&&(e.maxScale=0)}_fixGCSShift(e){const{extent:t,spatialReference:i}=e;t.xmin>-1&&t.xmax>181&&(null==i?void 0:i.wkid)&&i.isGeographic&&(e.nativeExtent=e.extent,e.transform=new Ae.a,e.extent=e.transform.forwardTransform(t))}_computeMinMaxLOD(e,t){var i,r;const{pixelSize:n}=e,a=.5/e.width*n.x,{lods:s}=t,l=t.lodAt(Math.max.apply(null,s.map((e=>e.level)))),o=t.lodAt(Math.min.apply(null,s.map((e=>e.level)))),{tileType:c}=this;if("Map"===c)return this._levelOffset=s[0].level,[l,o];var u;if("Raster"===c)return[null!=(u=s.find((e=>e.resolution===n.x)))?u:l,o];const{minScale:h,maxScale:f}=this.sourceJSON;let d=l;f>0&&(d=s.find((e=>Math.abs(e.scale-f)<a)),d||(d=null!=(i=s.filter((e=>e.scale>f)).sort(((e,t)=>e.scale>t.scale?1:-1))[0])?i:l));let p=o;return h>0&&(p=null!=(r=s.find((e=>Math.abs(e.scale-h)<a)))?r:o,this._levelOffset=p.level-o.level),[d,p]}};Object(r.a)([Object(h.b)({type:String,json:{write:!0}})],Ne.prototype,"datasetFormat",void 0),Object(r.a)([Object(h.b)()],Ne.prototype,"tileType",void 0),Ne=Object(r.a)([Object(m.a)("esri.layers.support.rasterDatasets.ImageServerRaster")],Ne);const Je=Ne;var Le=i(1141),He=i(1338);const We=new Map;We.set("Int8","s8"),We.set("UInt8","u8"),We.set("Int16","s16"),We.set("UInt16","u16"),We.set("Int32","s32"),We.set("UInt32","u32"),We.set("Float32","f32"),We.set("Float64","f32"),We.set("Double64","f32");const qe=new Map;qe.set("none",{blobExtension:".til",isOneSegment:!0,decoderFormat:"bip"}),qe.set("lerc",{blobExtension:".lrc",isOneSegment:!1,decoderFormat:"lerc"}),qe.set("deflate",{blobExtension:".pzp",isOneSegment:!0,decoderFormat:"deflate"}),qe.set("jpeg",{blobExtension:".pjg",isOneSegment:!0,decoderFormat:"jpg"});let $e=class extends ${constructor(){super(...arguments),this._files=null,this._storageIndex=null,this.datasetFormat="MRF"}async open(e){var t;await this.init(),this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const i=e?Object(l.t)(e.signal):null,r=await this.request(this.url,{responseType:"xml",signal:i}),{rasterInfo:n,files:a}=this._parseHeader(r.data);if(-1===(null==(t=this.ioConfig.skipExtensions)?void 0:t.indexOf("aux.xml"))){var s;const t=await this._fetchAuxiliaryData(e);null!=t&&(n.statistics=null!=(s=t.statistics)?s:n.statistics,n.histograms=t.histograms,t.histograms&&Object(l.k)(n.statistics)&&(n.statistics=Object(ge.d)(t.histograms)))}this._set("rasterInfo",n),this._files=a;const o=await this.request(a.index,{responseType:"array-buffer",signal:i});this._storageIndex=this._parseIndex(o.data);const{blockWidth:c,blockHeight:u}=this.rasterInfo.storageInfo,h=this.rasterInfo.storageInfo.pyramidScalingFactor,{width:f,height:d}=this.rasterInfo,p=[],m=this._getBandSegmentCount();let b=0,y=-1;for(;b<this._storageIndex.length;){y++;const e=Math.ceil(f/c/h**y)-1,t=Math.ceil(d/u/h**y)-1;b+=(e+1)*(t+1)*m*4,p.push({maxRow:t,maxCol:e,minCol:0,minRow:0})}this.rasterInfo.storageInfo.blockBoundary=p,y>0&&(this.rasterInfo.storageInfo.firstPyramidLevel=1,this.rasterInfo.storageInfo.maximumPyramidLevel=y),this.updateTileInfo()}async fetchRawTile(e,t,i,r={}){const{blockWidth:n,blockHeight:a,blockBoundary:s}=this.rasterInfo.storageInfo,o=s[e];if(!o||o.maxRow<t||o.maxCol<i||o.minRow>t||o.minCol>i)return null;const{bandCount:c,pixelType:u}=this.rasterInfo,{ranges:h,actualTileWidth:f,actualTileHeight:d}=this._getTileLocation(e,t,i);if(!h||0===h.length)return null;if(0===h[0].from&&0===h[0].to){const e=new Uint8Array(n*a);return new Le.a({width:n,height:a,pixels:null,mask:e,validPixelCount:0})}const{bandIds:p}=this.ioConfig,m=this._getBandSegmentCount(),b=[];let y=0;for(y=0;y<m;y++)(!p||p.indexOf[y]>-1)&&b.push(this.request(this._files.data,{range:{from:h[y].from,to:h[y].to},responseType:"array-buffer",signal:r.signal}));const g=await Promise.all(b),x=g.map((e=>e.data.byteLength)).reduce(((e,t)=>e+t)),v=new Uint8Array(x);let O=0;for(y=0;y<m;y++)v.set(new Uint8Array(g[y].data),O),O+=g[y].data.byteLength;const w=qe.get(this.rasterInfo.storageInfo.compression).decoderFormat,I=await this.decodePixelBlock(v.buffer,{width:n,height:a,format:w,planes:(null==p?void 0:p.length)||c,pixelType:u});if(Object(l.l)(this.rasterInfo.noDataValue)&&"lerc"!==w&&!I.mask){const e=this.rasterInfo.noDataValue[0];if(null!=e){const t=I.width*I.height,i=new Uint8Array(t);if(Math.abs(e)>1e24)for(y=0;y<t;y++)Math.abs((I.pixels[0][y]-e)/e)>1e-6&&(i[y]=1);else for(y=0;y<t;y++)I.pixels[0][y]!==e&&(i[y]=1);I.mask=i}}let j=0,S=0;if(f!==n||d!==a){let e=I.mask;if(e)for(y=0;y<a;y++)if(S=y*n,y<d)for(j=f;j<n;j++)e[S+j]=0;else for(j=0;j<n;j++)e[S+j]=0;else for(e=new Uint8Array(n*a),I.mask=e,y=0;y<d;y++)for(S=y*n,j=0;j<f;j++)e[S+j]=1}return I}_parseIndex(e){if(e.byteLength%16>0)throw"invalid array buffer must be multiples of 16";let t,i,r,n,a,s;if(He.a){for(i=new Uint8Array(e),n=new ArrayBuffer(e.byteLength),r=new Uint8Array(n),a=0;a<e.byteLength/4;a++)for(s=0;s<4;s++)r[4*a+s]=i[4*a+3-s];t=new Uint32Array(n)}else t=new Uint32Array(e);return t}_getBandSegmentCount(){return qe.get(this.rasterInfo.storageInfo.compression).isOneSegment?1:this.rasterInfo.bandCount}_getTileLocation(e,t,i){const{blockWidth:r,blockHeight:n,pyramidScalingFactor:a}=this.rasterInfo.storageInfo,{width:s,height:l}=this.rasterInfo,o=this._getBandSegmentCount();let c,u,h,f=0,d=0;for(h=0;h<e;h++)d=a**h,c=Math.ceil(s/r/d),u=Math.ceil(l/n/d),f+=c*u;d=a**e,c=Math.ceil(s/r/d),u=Math.ceil(l/n/d),f+=t*c+i,f*=4*o;const p=this._storageIndex.subarray(f,f+4*o);let m=0,b=0;const y=[];for(let g=0;g<o;g++)m=p[4*g+0]*2**32+p[4*g+1],b=m+p[4*g+2]*2**32+p[4*g+3],y.push({from:m,to:b});return{ranges:y,actualTileWidth:i<c-1?r:Math.ceil(s/d)-r*(c-1),actualTileHeight:t<u-1?n:Math.ceil(l/d)-n*(u-1)}}_parseHeader(e){const t=we(e,"MRF_META/Raster");if(!t)throw new s.a("mrf:open","not a valid MRF format");const i=we(t,"Size"),r=parseInt(i.getAttribute("x"),10),n=parseInt(i.getAttribute("y"),10),a=parseInt(i.getAttribute("c"),10),l=(Ie(t,"Compression")||"none").toLowerCase();if(!qe.has(l))throw new s.a("mrf:open","currently does not support compression "+l);const o=Ie(t,"DataType")||"UInt8",c=We.get(o);if(null==c)throw new s.a("mrf:open","currently does not support pixel type "+o);const u=we(t,"PageSize"),h=parseInt(u.getAttribute("x"),10),f=parseInt(u.getAttribute("y"),10),d=we(t,"DataValues");let p,m;if(d&&(m=d.getAttribute("NoData"),null!=m&&(p=m.trim().split(" ").map((e=>parseFloat(e))))),we(e,"MRF_META/CachedSource"))throw new s.a("mrf:open","currently does not support MRF referencing other data files");const b=we(e,"MRF_META/GeoTags"),y=we(b,"BoundingBox");let g,x=!1;if(null!=y){var v;const e=parseFloat(y.getAttribute("minx")),t=parseFloat(y.getAttribute("miny")),i=parseFloat(y.getAttribute("maxx")),r=parseFloat(y.getAttribute("maxy")),n=Ie(b,"Projection")||"";let a=Z.a.WGS84;if("LOCAL_CS[]"!==n)if(n.toLowerCase().startsWith("epsg:")){const e=Number(n.slice(5));isNaN(e)||0===e||(a=new Z.a({wkid:e}))}else a=null!=(v=ke(n))?v:Z.a.WGS84;else x=!0,a=new Z.a({wkid:3857});g=new W.a(e,t,i,r),g.spatialReference=a}else x=!0,g=new W.a({xmin:-.5,ymin:.5-n,xmax:r-.5,ymax:.5,spatialReference:new Z.a({wkid:3857})});const O=we(e,"MRF_META/Rsets"),w=parseInt(O&&O.getAttribute("scale")||"2",10),I=g.spatialReference,j=new P.a({origin:new B.a({x:g.xmin,y:g.ymax,spatialReference:I}),blockWidth:h,blockHeight:f,pyramidBlockWidth:h,pyramidBlockHeight:f,compression:l,pyramidScalingFactor:w}),S=new B.a({x:g.width/r,y:g.height/n,spatialReference:I}),_=new oe.a({width:r,height:n,extent:g,isPseudoSpatialReference:x,spatialReference:I,bandCount:a,pixelType:c,pixelSize:S,noDataValue:p,storageInfo:j}),T=Ie(e,"datafile"),R=Ie(e,"IndexFile");return{rasterInfo:_,files:{mrf:this.url,index:R||this.url.replace(".mrf",".idx"),data:T||this.url.replace(".mrf",qe.get(l).blobExtension)}}}async _fetchAuxiliaryData(e){try{const{data:t}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:null==e?void 0:e.signal});return Pe(t)}catch{return null}}};Object(r.a)([Object(h.b)()],$e.prototype,"_files",void 0),Object(r.a)([Object(h.b)()],$e.prototype,"_storageIndex",void 0),Object(r.a)([Object(h.b)({type:String,json:{write:!0}})],$e.prototype,"datasetFormat",void 0),$e=Object(r.a)([Object(m.a)("esri.layers.support.rasterIO.MRFRaster")],$e);const Ge=$e;var Ue=i(1443),Ve=i(1445);const Ye=(e,t)=>{var i;return null==(i=e.get(t))?void 0:i.values},Xe=(e,t)=>{var i,r;return null==(i=e.get(t))||null==(r=i.values)?void 0:r[0]};let Ke=class extends ${constructor(){super(...arguments),this._files=null,this._headerInfo=null,this._bufferSize=1048576,this.datasetFormat="TIFF"}async open(e){await this.init();const t=e?Object(l.t)(e.signal):null,{data:i}=await this.request(this.url,{range:{from:0,to:this._bufferSize},responseType:"array-buffer",signal:t});if(!i)throw new s.a("tiffraster:open","failed to open url "+this.url);this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const{littleEndian:r,firstIFDPos:n,isBigTiff:a}=Object(Ue.g)(i),o=[];await this._readIFDs(o,i,r,n,0,a?8:4,t);const{imageInfo:c,rasterInfo:u}=this._parseIFDs(o);if(this._headerInfo={littleEndian:r,isBigTiff:a,ifds:o,...c},this._set("rasterInfo",u),!c.isSupported)throw new s.a("tiffraster:open","this tiff is not supported: "+c.message);if(!c.tileWidth)throw new s.a("tiffraster:open","none-tiled tiff is not optimized for access, convert to COG and retry.");const{skipExtensions:h=[]}=this.ioConfig;if(!h.includes("aux.xml")){const t=await this._fetchAuxiliaryMetaData(e);null!=t&&this._processPAMInfo(t,u)}h.includes("vat.dbf")||1!==u.bandCount||"u8"!==u.pixelType||(u.attributeTable=await this._fetchAuxiliaryTable(e),Object(l.l)(u.attributeTable)&&(u.keyProperties.DataType="thematic")),this.updateTileInfo()}async fetchRawTile(e,t,i,r={}){var n;if(null==(n=this._headerInfo)||!n.isSupported||this.isBlockOutside(e,t,i))return null;const a=this._getTileLocation(e,t,i);if(!a)return null;const{ranges:s,actualTileWidth:l,actualTileHeight:o,ifd:c}=a,u=s.map((e=>this.request(this.url,{range:e,responseType:"array-buffer",signal:r.signal}))),h=await Promise.all(u),f=h.map((e=>e.data.byteLength)).reduce(((e,t)=>e+t)),d=1===h.length?h[0].data:new ArrayBuffer(f),p=[0],m=[0];if(h.length>1){const e=new Uint8Array(d);for(let t=0,i=0;t<h.length;t++){const r=h[t].data;e.set(new Uint8Array(r),i),p[t]=i,i+=r.byteLength,m[t]=r.byteLength}}const{blockWidth:b,blockHeight:y}=this.getBlockWidthHeight(e),g=await this.decodePixelBlock(d,{format:"tiff",customOptions:{headerInfo:this._headerInfo,ifd:c,offsets:p,sizes:m},width:b,height:y,planes:null,pixelType:null});let x,v,O;if(l!==b||o!==y){let e=g.mask;if(e)for(x=0;x<y;x++)if(O=x*b,x<o)for(v=l;v<b;v++)e[O+v]=0;else for(v=0;v<b;v++)e[O+v]=0;else for(e=new Uint8Array(b*y),g.mask=e,x=0;x<o;x++)for(O=x*b,v=0;v<l;v++)e[O+v]=1}return g}_parseIFDs(e){var t,i;const r=Object(Ue.c)(e),{width:n,height:a,tileWidth:s,tileHeight:l,planes:o,pixelType:c,compression:u,firstPyramidLevel:h,maximumPyramidLevel:f,pyramidBlockWidth:d,pyramidBlockHeight:p,tileBoundary:m,affine:b,metadata:y}=r;let g=ke((null==(t=r.extent.spatialReference)?void 0:t.wkt)||(null==(i=r.extent.spatialReference)?void 0:i.wkid)),x=!1;null==g&&(x=!0,g=new Z.a({wkid:3857}));const v=new W.a({...r.extent,spatialReference:g}),O=new B.a(v?{x:v.xmin,y:v.ymax,spatialReference:g}:{x:0,y:0}),w=new P.a({blockWidth:s,blockHeight:l,pyramidBlockWidth:d,pyramidBlockHeight:p,compression:u,origin:O,firstPyramidLevel:h,maximumPyramidLevel:f,blockBoundary:m}),I=new B.a({x:(v.xmax-v.xmin)/n,y:(v.ymax-v.ymin)/a,spatialReference:g}),j=y?{BandProperties:y.bandProperties,DataType:y.dataType}:{};let S=null;const _=Xe(e[0],"PHOTOMETRICINTERPRETATION"),T=Ye(e[0],"COLORMAP");if(3===_&&(null==T?void 0:T.length)>3&&T.length%3==0){S=[];const e=T.length/3;for(let t=0;t<e;t++)S.push([t,T[t]>>>8,T[t+e]>>>8,T[t+2*e]>>>8])}const R=new oe.a({width:n,height:a,bandCount:o,pixelType:c,pixelSize:I,storageInfo:w,spatialReference:g,isPseudoSpatialReference:x,keyProperties:j,extent:v,colormap:S,statistics:y?y.statistics:null});return null!=b&&b.length&&(R.nativeExtent=new W.a({xmin:-.5,ymin:.5-a,xmax:n-.5,ymax:.5,spatialReference:g}),R.transform=new Te.a({polynomialOrder:1,forwardCoefficients:[b[2]+b[0]/2,b[5]-b[3]/2,b[0],b[3],-b[1],-b[4]]}),R.extent=R.transform.forwardTransform(R.nativeExtent),R.pixelSize=new B.a({x:(v.xmax-v.xmin)/n,y:(v.ymax-v.ymin)/a,spatialReference:g}),w.origin.x=-.5,w.origin.y=.5),{imageInfo:r,rasterInfo:R}}_processPAMInfo(e,t){var i;if(t.statistics=null!=(i=e.statistics)?i:t.statistics,t.histograms=e.histograms,e.histograms&&Object(l.k)(t.statistics)&&(t.statistics=Object(ge.d)(e.histograms)),e.transform&&Object(l.k)(t.transform)){t.transform=e.transform,t.nativeExtent=t.extent;const i=t.transform.forwardTransform(t.nativeExtent);t.pixelSize=new B.a({x:(i.xmax-i.xmin)/t.width,y:(i.ymax-i.ymin)/t.height,spatialReference:t.spatialReference}),t.extent=i}t.spatialReference||(t.spatialReference=e.spatialReference)}async _readIFDs(e,t,i,r,n,a=4,s){if(!r)return null;(r>=t.byteLength||r<0)&&(t=(await this.request(this.url,{range:{from:r+n,to:r+n+this._bufferSize},responseType:"array-buffer",signal:s})).data,n=r+n,r=0);const l=await this._readIFD(t,i,r,n,Ve.a.TIFF_TAGS,a,s);if(e.push(l.ifd),!l.nextIFD)return null;await this._readIFDs(e,t,i,l.nextIFD-n,n,a,s)}async _readIFD(e,t,i,r,n=Ve.a.TIFF_TAGS,a=4,s){if(!e)return null;const o=Object(Ue.f)(e,t,i,r,n,a);if(o.success){var c,u;const i=[];if(null!=(c=o.ifd)&&c.forEach((e=>{e.values||i.push(e)})),i.length>0){const n=i.map((e=>e.offlineOffsetSize)).filter(l.l),a=Math.min.apply(null,n.map((e=>e[0])));if(Math.min.apply(null,n.map((e=>e[0]+e[1])))-a<=this._bufferSize){const{data:n}=await this.request(this.url,{range:{from:a,to:a+this._bufferSize},responseType:"array-buffer",signal:s});e=n,r=a,i.forEach((i=>Object(Ue.e)(e,t,i,r)))}}if(null!=(u=o.ifd)&&u.has("GEOKEYDIRECTORY")){const i=o.ifd.get("GEOKEYDIRECTORY"),n=null==i?void 0:i.values;if(n&&n.length>4){const a=n[0]+"."+n[1]+"."+n[2],l=await this._readIFD(e,t,i.valueOffset+6-r,r,Ve.a.GEO_KEYS,2,s);i.data=l.ifd,i.data&&i.data.set("GEOTIFFVersion",{id:0,type:2,valueCount:1,valueOffset:null,values:[a]})}}return o}if(o.requiredBufferSize&&o.requiredBufferSize!==e.byteLength){const i=await this.request(this.url,{range:{from:r,to:r+o.requiredBufferSize+4},responseType:"array-buffer",signal:s});return(e=i.data).byteLength<o.requiredBufferSize?null:this._readIFD(e,t,0,r,Ve.a.TIFF_TAGS,4,s)}}_getTileLocation(e,t,i){var r;const{firstPyramidLevel:n,blockBoundary:a}=this.rasterInfo.storageInfo,s=0===e?0:e-(n-1),l=null==(r=this._headerInfo)?void 0:r.ifds[s];if(!l)return null;const o=Object(Ue.d)(l,this._headerInfo),c=Ye(l,"TILEOFFSETS");if(void 0===c)return null;const u=Ye(l,"TILEBYTECOUNTS"),{minRow:h,minCol:f,maxRow:d,maxCol:p}=a[s];if(t>d||i>p||t<h||i<f)return null;const m=Xe(l,"IMAGEWIDTH"),b=Xe(l,"IMAGELENGTH"),y=Xe(l,"TILEWIDTH"),g=Xe(l,"TILELENGTH"),x=o?this.rasterInfo.bandCount:1,v=x*t*(p+1)+i,O=[{from:c[v],to:c[v+x-1]+u[v+x-1]-1}];if(o){let e=!0;for(let t=0;t<x;t++)if(c[v+t]+u[v+t]!==c[v+t+1]){e=!1;break}if(!e)for(let t=0;t<x;t++)O[t]={from:c[v+t],to:c[v+t]+u[v+t]-1}}const w=c[v],I=u[v];return null==w||null==I?null:{ranges:O,ifd:l,actualTileWidth:i===p&&m%y||y,actualTileHeight:t===d&&b%g||g}}async _fetchAuxiliaryMetaData(e){try{const{data:t}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:null==e?void 0:e.signal});return Pe(t)}catch{return null}}async _fetchAuxiliaryTable(e){try{const{data:t}=await this.request(this.url+".vat.dbf",{responseType:"array-buffer",signal:null==e?void 0:e.signal}),i=he.parse(t);return null!=i&&i.recordSet?de.default.fromJSON(i.recordSet):null}catch{return null}}};Object(r.a)([Object(h.b)()],Ke.prototype,"_files",void 0),Object(r.a)([Object(h.b)()],Ke.prototype,"_headerInfo",void 0),Object(r.a)([Object(h.b)()],Ke.prototype,"_bufferSize",void 0),Object(r.a)([Object(h.b)({type:String,json:{write:!0}})],Ke.prototype,"datasetFormat",void 0),Ke=Object(r.a)([Object(m.a)("esri.layers.support.rasterDatasets.TIFFRaster")],Ke);const Ze=Ke,Qe=new Map;Qe.set("CRF",{desc:"Cloud Raster Format",constructor:be}),Qe.set("MRF",{desc:"Meta Raster Format",constructor:Ge}),Qe.set("TIFF",{desc:"GeoTIFF",constructor:Ze}),Qe.set("RasterTileServer",{desc:"Raster Tile Server",constructor:Je}),Qe.set("JPG",{desc:"JPG Raster Format",constructor:Me}),Qe.set("PNG",{desc:"PNG Raster Format",constructor:Me}),Qe.set("GIF",{desc:"GIF Raster Format",constructor:Me}),Qe.set("BMP",{desc:"BMP Raster Format",constructor:Me});class et{static get supportedFormats(){const e=new Set;return Qe.forEach(((t,i)=>e.add(i))),e}static async open(e){const{url:t,ioConfig:i,sourceJSON:r}=e;let n=e.datasetFormat;null==n&&t.lastIndexOf(".")&&(n=t.slice(t.lastIndexOf(".")+1).toUpperCase()),"OVR"===n||"TIF"===n?n="TIFF":"JPG"!==n&&"JPEG"!==n&&"JFIF"!==n||(n="JPG"),t.toLowerCase().includes("/imageserver")&&!t.toLowerCase().includes("/wcsserver")&&(n="RasterTileServer");const a={url:t,sourceJSON:r,datasetFormat:n,ioConfig:null!=i?i:{bandIds:null,sampling:null}};let l,o;if(n&&this.supportedFormats.has(n)){if("CRF"===n&&(null==i||!i.enableCRF))throw new s.a("rasterfactory:open",`cannot open raster: ${t}`);return l=Qe.get(n).constructor,o=new l(a),await o.open({signal:e.signal}),o}if(n)throw new s.a("rasterfactory:open","not a supported format "+n);const c=Array.from(Qe.keys());let u=0;const h=()=>(n=c[u++],n&&("CRF"!==n||null!=i&&i.enableCRF)?(l=Qe.get(n).constructor,o=new l(a),o.open({signal:e.signal}).then((()=>o)).catch((()=>h()))):null);return h()}static register(e,t,i){Qe.has(e.toUpperCase())||Qe.set(e.toUpperCase(),{desc:t,constructor:i})}}var tt=i(728);let it=class extends(Object(y.a)(Object(ne.a)(Object(te.a)(Object(ie.a)(Object(g.a)(ee(Object(ae.a)(Object(re.a)(Object(o.a)(b.a)))))))))){constructor(...e){super(...e),this.bandIds=null,this.interpolation=null,this.legendEnabled=!0,this.isReference=null,this.listMode="show",this.sourceJSON=null,this.version=null,this.title=null,this.type="imagery-tile",this.operationalLayerType="ArcGISTiledImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.fields=null}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}load(e){const t=Object(l.l)(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},e).catch(c.p).then((()=>this._openRaster(t)))),Promise.resolve(this)}get defaultPopupTemplate(){return this.createPopupTemplate()}get rasterFields(){let e=[new se.a({name:"Raster.ServicePixelValue",alias:"Pixel Value",domain:null,editable:!1,length:50,type:"string"})];const{rasterInfo:t}=this,{attributeTable:i}=t,r=Object(l.l)(i)?i.fields:null;if(r){const t=r.filter((e=>"oid"!==e.type&&"value"!==e.name.toLowerCase())).map((e=>{const t=e.clone();return t.name="Raster."+e.name,t}));e=e.concat(t)}const{dataType:n,multidimensionalInfo:a}=t;if(("vector-magdir"===n||"vector-uv"===n)&&Object(l.l)(a)){var s;const t=null==(s=a.variables[0].unit)?void 0:s.trim(),i="Magnitude"+(t?` (${t})`:"");e.push(new se.a({name:"Raster.Magnitude",alias:i,domain:null,editable:!1,type:"double"})),e.push(new se.a({name:"Raster.Direction",alias:"Direction (\xb0)",domain:null,editable:!1,type:"double"}))}return e}set renderer(e){this._set("renderer",e),this.updateRenderer()}readRenderer(e,t,i){const r=t&&t.layerDefinition&&t.layerDefinition.drawingInfo&&t.layerDefinition.drawingInfo.renderer,n=Object(a.b)(r,i)||void 0;if(null!=n)return n}createPopupTemplate(e){return Object(tt.a)({fields:this.rasterFields,title:this.title},e)}write(e,t){const{raster:i}=this;if(this.loaded?"RasterTileServer"===i.datasetFormat&&("Raster"===i.tileType||"Map"===i.tileType):this.url&&/\/ImageServer(\/|\/?$)/i.test(this.url))return super.write(e,t);if(t&&t.messages){const e=`${t.origin}/${t.layerContainerType||"operational-layers"}`;t.messages.push(new s.a("layer:unsupported",`Layers (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${e}'`,{layer:this}))}return null}async _openRaster(e){if(this.raster)this.raster.rasterInfo||await this.raster.open(),this.url=this.raster.url;else{const t=await et.open({url:this.url,sourceJSON:this.sourceJSON,ioConfig:{sampling:"closest",...this.ioConfig,customFetchParameters:this.customParameters},signal:e});if(this.rasterFunction){const e=Object(V.a)(this.rasterFunction.toJSON(),{raster:t}),i=new U({rasterFunction:e});await i.open(),this.raster=i}else this.raster=t}const{rasterInfo:t}=this.raster;if(!t)throw new s.a("imagery-tile-layer:load","cannot load resources on "+this.url);if(this.sourceJSON=this.sourceJSON||this.raster.sourceJSON,null!=this.sourceJSON){const e="Map"===this.raster.tileType&&null!=this.sourceJSON.minLOD&&null!=this.sourceJSON.maxLOD?this.sourceJSON:{...this.sourceJSON,minScale:0,maxScale:0};this.read(e,{origin:"service"})}null==this.title&&(this.title=this.raster.datasetName),"Map"===this.raster.tileType&&(this.popupEnabled=!1),this._configDefaultSettings(),this.addHandles(Object(u.f)((()=>this.customParameters),(e=>{this.raster.ioConfig.customFetchParameters=e})))}};Object(r.a)([Object(h.b)({type:[f.a],json:{write:{overridePolicy(){var e;return{enabled:!this.loaded||"Raster"===this.raster.tileType||"0,1,2"!==(null==(e=this.bandIds)?void 0:e.join(","))}}}}})],it.prototype,"bandIds",void 0),Object(r.a)([Object(h.b)({json:{write:{overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType||"bilinear"!==this.interpolation}}}}}),Object(d.a)(le.a)],it.prototype,"interpolation",void 0),Object(r.a)([Object(h.b)({json:{write:!0}})],it.prototype,"multidimensionalDefinition",void 0),Object(r.a)([Object(h.b)(I.e)],it.prototype,"legendEnabled",void 0),Object(r.a)([Object(h.b)({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],it.prototype,"isReference",void 0),Object(r.a)([Object(h.b)({type:["show","hide"]})],it.prototype,"listMode",void 0),Object(r.a)([Object(h.b)({json:{read:!0,write:!0}})],it.prototype,"blendMode",void 0),Object(r.a)([Object(h.b)()],it.prototype,"sourceJSON",void 0),Object(r.a)([Object(h.b)({readOnly:!0,json:{origins:{service:{read:{source:"currentVersion"}}}}})],it.prototype,"version",void 0),Object(r.a)([Object(h.b)()],it.prototype,"title",void 0),Object(r.a)([Object(h.b)({readOnly:!0,json:{read:!1}})],it.prototype,"type",void 0),Object(r.a)([Object(h.b)({type:["ArcGISTiledImageServiceLayer"]})],it.prototype,"operationalLayerType",void 0),Object(r.a)([Object(h.b)({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader:(e,t)=>!t.disablePopup},write:{target:"disablePopup",overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType}},writer(e,t,i){t[i]=!e}}}})],it.prototype,"popupEnabled",void 0),Object(r.a)([Object(h.b)({type:n.a,json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType}}}}})],it.prototype,"popupTemplate",void 0),Object(r.a)([Object(h.b)({readOnly:!0})],it.prototype,"defaultPopupTemplate",null),Object(r.a)([Object(h.b)({readOnly:!0,type:[se.a]})],it.prototype,"fields",void 0),Object(r.a)([Object(h.b)({readOnly:!0,type:[se.a]})],it.prototype,"rasterFields",null),Object(r.a)([Object(h.b)({types:a.a,json:{name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy(){var e;const t="raster-stretch"===(null==(e=this.renderer)?void 0:e.type)&&"none"===this.renderer.stretchType&&!this.renderer.useGamma;return{enabled:!this.loaded||"Raster"===this.raster.tileType||!t}}},origins:{"web-scene":{types:a.c,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:e=>({enabled:e&&"vector-field"!==e.type&&"flow"!==e.type})}}}}})],it.prototype,"renderer",null),Object(r.a)([Object(p.a)("renderer")],it.prototype,"readRenderer",null),it=Object(r.a)([Object(m.a)("esri.layers.ImageryTileLayer")],it);const rt=it}}]);
//# sourceMappingURL=102.7512744a.chunk.js.map