(this["webpackJsonppopulation-arcgis"]=this["webpackJsonppopulation-arcgis"]||[]).push([[185],{1385:function(e,t,a){"use strict";a.r(t),a.d(t,"default",(function(){return A}));var r=a(0),i=a(134),s=a(265),o=a(16),n=a(243),c=a(738),l=a(2),p=a(721),b=a(23),u=a(1),h=(a(17),a(12)),y=a(51),d=a(10),m=a(50),O=a(103),j=a(86),g=a(739),f=a(423),v=a(910),S=a(1476),x=a(906),w=a(593),I=a(730),E=a(722),M=a(723),T=a(594),J=a(592),L=a(1477),P=a(732),N=a(183),R=a(970),F=a(1386),U=a(940),k=a(931);let q=class extends(Object(w.a)(Object(P.a)(Object(J.a)(Object(L.a)(Object(S.a)(Object(x.a)(Object(E.a)(Object(M.a)(Object(p.a)(Object(T.a)(Object(v.a)(Object(I.a)(Object(n.b)(f.a)))))))))))))){constructor(...e){super(...e),this.datesInUnknownTimezone=!1,this.dpi=96,this.gdbVersion=null,this.imageFormat="png24",this.imageMaxHeight=2048,this.imageMaxWidth=2048,this.imageTransparency=!0,this.isReference=null,this.labelsVisible=!1,this.operationalLayerType="ArcGISMapServiceLayer",this.sourceJSON=null,this.sublayers=null,this.type="map-image",this.url=null}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}load(e){const t=Object(l.l)(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service"]},e).catch(b.p).then((()=>this._fetchService(t)))),Promise.resolve(this)}readImageFormat(e,t){const a=t.supportedImageFormatTypes;return a&&a.includes("PNG32")?"png32":"png24"}writeSublayers(e,t,a,r){if(!this.loaded||!e)return;const i=e.slice().reverse().flatten((({sublayers:e})=>e&&e.toArray().reverse())).toArray();let s=!1;if(this.capabilities&&this.capabilities.operations.supportsExportMap&&this.capabilities.exportMap.supportsDynamicLayers){const e=Object(O.e)(r.origin);if(e===O.a.PORTAL_ITEM){const e=this.createSublayersForOrigin("service").sublayers;s=Object(U.c)(i,e,O.a.SERVICE)}else if(e>O.a.PORTAL_ITEM){const e=this.createSublayersForOrigin("portal-item");s=Object(U.c)(i,e.sublayers,Object(O.e)(e.origin))}}const o=[],n={writeSublayerStructure:s,...r};let c=s;i.forEach((e=>{const t=e.write({},n);o.push(t),c=c||"user"===e.originOf("visible")})),o.some((e=>Object.keys(e).length>1))&&(t.layers=o),c&&(t.visibleLayers=i.filter((e=>e.visible)).map((e=>e.id)))}createExportImageParameters(e,t,a,r){const i=r&&r.pixelRatio||1;e&&this.version>=10&&(e=e.clone().shiftCentralMeridian());const s=new R.a({layer:this,floors:null==r?void 0:r.floors,scale:Object(g.c)({extent:e,width:t})*i}),o=s.toJSON();s.destroy();const n=!r||!r.rotation||this.version<10.3?{}:{rotation:-r.rotation},c=e&&e.spatialReference,l=c.wkid||JSON.stringify(c.toJSON());o.dpi*=i;const p={};if(null!=r&&r.timeExtent){const{start:e,end:t}=r.timeExtent.toJSON();p.time=e&&t&&e===t?""+e:`${null!=e?e:"null"},${null!=t?t:"null"}`}else this.timeInfo&&!this.timeInfo.hasLiveData&&(p.time="null,null");return{bbox:e&&e.xmin+","+e.ymin+","+e.xmax+","+e.ymax,bboxSR:l,imageSR:l,size:t+","+a,...o,...n,...p}}async fetchImage(e,t,a,r){return this._fetchImage("image",e,t,a,r)}async fetchImageBitmap(e,t,a,r){const i=await this._fetchImage("blob",e,t,a,r);return createImageBitmap(i)}async fetchRecomputedExtents(e={}){const t={...e,query:{returnUpdates:!0,f:"json",...this.customParameters,token:this.apiKey}},{data:a}=await Object(i.default)(this.url,t),{extent:r,fullExtent:o,timeExtent:n}=a,c=r||o;return{fullExtent:c&&j.a.fromJSON(c),timeExtent:n&&s.a.fromJSON({start:n[0],end:n[1]})}}loadAll(){return Object(c.a)(this,(e=>{e(this.allSublayers)}))}serviceSupportsSpatialReference(e){return Object(k.a)(this,e)}async _fetchImage(e,t,a,r,s){var n;const c={responseType:e,signal:null!=(n=null==s?void 0:s.signal)?n:null,query:{...this.parsedUrl.query,...this.createExportImageParameters(t,a,r,s),f:"image",...this.refreshParameters,...this.customParameters,token:this.apiKey}},l=this.parsedUrl.path+"/export";if(null!=c.query.dynamicLayers&&!this.capabilities.exportMap.supportsDynamicLayers)throw new o.a("mapimagelayer:dynamiclayer-not-supported",`service ${this.url} doesn't support dynamic layers, which is required to be able to change the sublayer's order, rendering, labeling or source.`,{query:c.query});try{const{data:e}=await Object(i.default)(l,c);return e}catch(p){if(Object(b.j)(p))throw p;throw new o.a("mapimagelayer:image-fetch-error",`Unable to load image: ${l}`,{error:p})}}async _fetchService(e){if(this.sourceJSON)return void this.read(this.sourceJSON,{origin:"service",url:this.parsedUrl});const{data:t,ssl:a}=await Object(i.default)(this.parsedUrl.path,{query:{f:"json",...this.parsedUrl.query,...this.customParameters,token:this.apiKey},signal:e});a&&(this.url=this.url.replace(/^http:/i,"https:")),this.sourceJSON=t,this.read(t,{origin:"service",url:this.parsedUrl})}};Object(r.a)([Object(u.b)({type:Boolean})],q.prototype,"datesInUnknownTimezone",void 0),Object(r.a)([Object(u.b)()],q.prototype,"dpi",void 0),Object(r.a)([Object(u.b)()],q.prototype,"gdbVersion",void 0),Object(r.a)([Object(u.b)()],q.prototype,"imageFormat",void 0),Object(r.a)([Object(y.a)("imageFormat",["supportedImageFormatTypes"])],q.prototype,"readImageFormat",null),Object(r.a)([Object(u.b)({json:{origins:{service:{read:{source:"maxImageHeight"}}}}})],q.prototype,"imageMaxHeight",void 0),Object(r.a)([Object(u.b)({json:{origins:{service:{read:{source:"maxImageWidth"}}}}})],q.prototype,"imageMaxWidth",void 0),Object(r.a)([Object(u.b)()],q.prototype,"imageTransparency",void 0),Object(r.a)([Object(u.b)({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],q.prototype,"isReference",void 0),Object(r.a)([Object(u.b)({json:{read:!1,write:!1}})],q.prototype,"labelsVisible",void 0),Object(r.a)([Object(u.b)({type:["ArcGISMapServiceLayer"]})],q.prototype,"operationalLayerType",void 0),Object(r.a)([Object(u.b)({json:{read:!1,write:!1}})],q.prototype,"popupEnabled",void 0),Object(r.a)([Object(u.b)()],q.prototype,"sourceJSON",void 0),Object(r.a)([Object(u.b)({json:{write:{ignoreOrigin:!0}}})],q.prototype,"sublayers",void 0),Object(r.a)([Object(m.a)("sublayers",{layers:{type:[F.a]},visibleLayers:{type:[h.a]}})],q.prototype,"writeSublayers",null),Object(r.a)([Object(u.b)({type:["show","hide","hide-children"]})],q.prototype,"listMode",void 0),Object(r.a)([Object(u.b)({json:{read:!1},readOnly:!0,value:"map-image"})],q.prototype,"type",void 0),Object(r.a)([Object(u.b)(N.o)],q.prototype,"url",void 0),q=Object(r.a)([Object(d.a)("esri.layers.MapImageLayer")],q);const A=q}}]);
//# sourceMappingURL=185.2d8e53cd.chunk.js.map