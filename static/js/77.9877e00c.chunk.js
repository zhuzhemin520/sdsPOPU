(this["webpackJsonppopulation-arcgis"]=this["webpackJsonppopulation-arcgis"]||[]).push([[77,93],{1052:function(e,t,a){"use strict";a.r(t),a.d(t,"getFirstLayerOrTableId",(function(){return b})),a.d(t,"getNumLayersAndTables",(function(){return h})),a.d(t,"getSubtypeGroupLayerIds",(function(){return w})),a.d(t,"load",(function(){return d})),a.d(t,"preprocessFSItemData",(function(){return L}));var r=a(16),n=a(423),l=a(306),i=a(220),u=a(673),o=a(1160),s=a(1142),c=a(917),y=a(1190);async function d(e,t){const a=e.instance.portalItem;if(a&&a.id)return await a.load(t),function(e){const t=e.instance.portalItem;if(!e.supportedTypes.includes(t.type))throw new r.a("portal:invalid-layer-item-type","Invalid layer item type '${type}', expected '${expectedType}'",{type:t.type,expectedType:e.supportedTypes.join(", ")})}(e),async function(e,t){const a=e.instance,n=a.portalItem,{url:l,title:i}=n,u=Object(o.a)(n);if("group"===a.type)return a.read({title:i},u),function(e,t){var a;let n;const l=e.portalItem.type,i=t.layerModuleTypeMap,u=null!=(a=Object(s.d)(e.portalItem,"Oriented Imagery Layer"))&&a;switch(l){case"Feature Service":n=u?i.OrientedImageryLayer:i.FeatureLayer;break;case"Stream Service":n=i.StreamLayer;break;case"Scene Service":n=i.SceneLayer;break;case"Feature Collection":n=i.FeatureLayer;break;default:throw new r.a("portal:unsupported-item-type-as-group",`The item type '${l}' is not supported as a 'IGroupLayer'`)}let o;return n().then((e=>(o=e,m(t)))).then((async t=>{let a=()=>o;if("Feature Service"===l){if(w(t=await L(t,e.portalItem.url)).length){const e=i.SubtypeGroupLayer,t=await e();a=e=>"SubtypeGroupLayer"===e.layerType?t:o}return p(e,a,t)}return h(t)>0?p(e,a,t):function(e,t){return e.portalItem.url?Object(y.a)(e.portalItem.url).then((a=>{var r,n;function l(e){return{id:e.id,name:e.name}}a&&p(e,t,{layers:null==(r=a.layers)?void 0:r.map(l),tables:null==(n=a.tables)?void 0:n.map(l)})})):Promise.resolve()}(e,a)}))}(a,e);l&&a.read({url:l},u);const d=await m(e,t);return d&&a.read(d,u),a.resourceReferences={portalItem:n,paths:u.readResourcePaths},"subtype-group"!==a.type&&a.read({title:i},u),Object(c.a)(a,u)}(e,t)}function p(e,t,a){let i=a.layers||[];const o=a.tables||[];if("Feature Collection"===e.portalItem.type&&(i.forEach((e=>{var t;"Table"===(null==e||null==(t=e.layerDefinition)?void 0:t.type)&&o.push(e)})),i=i.filter((e=>{var t;return"Table"!==(null==e||null==(t=e.layerDefinition)?void 0:t.type)}))),"coverage"in a){const t=function(e){const{coverage:t}=e;if(!t)return null;const a=new URL(t);if(t.toLowerCase().includes("item.html")){const e=a.searchParams.get("id"),t=a.origin;return n.a.fromPortalItem({portalItem:new u.default({id:e,url:t})})}if(Object(l.b)(t))return n.a.fromArcGISServerUrl({url:t});throw new r.a("portal:oriented-imagery-layer-coverage","the provided coverage url couldn't be loaded as a layer")}(a);e.add(t)}i.reverse().forEach((r=>{const n=f(e,t(r),a,r);e.add(n)})),o.reverse().forEach((r=>{const n=f(e,t(r),a,r);e.tables.add(n)}))}function f(e,t,a,r){const n=new t({portalItem:e.portalItem.clone(),layerId:r.id});if("subtype-group"!==n.type&&(n.sublayerTitleMode="service-name"),"Feature Collection"===e.portalItem.type){const t={origin:"portal-item",portal:e.portalItem.portal||i.a.getDefault()};n.read(r,t);const l=a.showLegend;null!=l&&n.read({showLegend:l},t)}return n}function m(e,t){if(!1===e.supportsData)return Promise.resolve(void 0);const a=e.instance;return a.portalItem.fetchData("json",t).catch((()=>null)).then((e=>{if(function(e){return"stream"!==e.type&&"oriented-imagery"!==e.type&&"layerId"in e}(a)){let t,r=!0;if(e&&h(e)>0){if(null==a.layerId){const t=w(e);a.layerId="subtype-group"===a.type?null==t?void 0:t[0]:b(e)}t=function(e,t){var a,r;const{layerId:n}=t,l=(null==(a=e.layers)?void 0:a.find((e=>e.id===n)))||(null==(r=e.tables)?void 0:r.find((e=>e.id===n)));return l&&function(e,t){return!("feature"===t.type&&"layerType"in e&&"SubtypeGroupLayer"===e.layerType||"subtype-group"===t.type&&!("layerType"in e))}(l,t)?l:null}(e,a),t&&(1===h(e)&&(r=!1),null!=e.showLegend&&(t.showLegend=e.showLegend))}return r&&"service-name"!==a.sublayerTitleMode&&(a.sublayerTitleMode="item-title-and-service-name"),t}return e}))}async function L(e,t){var a,r;if(null==(null==(a=e)?void 0:a.layers)||null==(null==(r=e)?void 0:r.tables)){const a=await Object(y.a)(t);(e=e||{}).layers=e.layers||(null==a?void 0:a.layers),e.tables=e.tables||(null==a?void 0:a.tables)}return e}function b(e){const t=e.layers;if(t&&t.length)return t[0].id;const a=e.tables;return a&&a.length?a[0].id:null}function h(e){var t,a,r,n;return(null!=(t=null==e||null==(a=e.layers)?void 0:a.length)?t:0)+(null!=(r=null==e||null==(n=e.tables)?void 0:n.length)?r:0)}function w(e){var t;const a=[];return null!=e&&null!=(t=e.layers)&&t.forEach((e=>{"SubtypeGroupLayer"===e.layerType&&a.push(e.id)})),a}},1142:function(e,t,a){"use strict";a.d(t,"a",(function(){return c})),a.d(t,"b",(function(){return i})),a.d(t,"c",(function(){return s})),a.d(t,"d",(function(){return u})),a.d(t,"e",(function(){return o}));var r=a(40),n=a(57),l=a(96);function i(e,t){if(!u(e,t)){const a=e.typeKeywords;a?a.push(t):e.typeKeywords=[t]}}function u(e,t){var a;return!(null==(a=e.typeKeywords)||!a.includes(t))}function o(e,t){const a=e.typeKeywords;if(a){const e=a.indexOf(t);e>-1&&a.splice(e,1)}}async function s(e){const t=e.clone().normalize();let a;if(t.length>1)for(const r of t)a?r.width>a.width&&(a=r):a=r;else a=t[0];return async function(e){const t=e.spatialReference;if(t.isWGS84)return e.clone();if(t.isWebMercator)return Object(l.e)(e);const a=n.a.WGS84;return await Object(r.g)(t,a),Object(r.m)(e,a)}(a)}const c={DEVELOPER_BASEMAP:"DeveloperBasemap",JSAPI:"ArcGIS API for JavaScript",METADATA:"Metadata",MULTI_LAYER:"Multilayer",SINGLE_LAYER:"Singlelayer",TABLE:"Table"}},1160:function(e,t,a){"use strict";a.d(t,"a",(function(){return l})),a.d(t,"b",(function(){return i}));var r=a(44),n=a(220);function l(e){return{origin:"portal-item",url:Object(r.N)(e.itemUrl),portal:e.portal||n.a.getDefault(),portalItem:e,readResourcePaths:[]}}function i(e){return{origin:"portal-item",messages:[],writtenProperties:[],url:e.itemUrl?Object(r.N)(e.itemUrl):null,portal:e.portal||n.a.getDefault(),portalItem:e}}},1189:function(e,t,a){"use strict";a.d(t,"a",(function(){return r}));const r={BingMapsLayer:async()=>(await a.e(181).then(a.bind(null,1421))).default,BuildingSceneLayer:async()=>(await Promise.all([a.e(29),a.e(90)]).then(a.bind(null,1406))).default,CSVLayer:async()=>(await a.e(182).then(a.bind(null,1422))).default,DimensionLayer:async()=>(await a.e(85).then(a.bind(null,1413))).default,ElevationLayer:async()=>(await a.e(37).then(a.bind(null,1319))).default,FeatureLayer:async()=>(await Promise.resolve().then(a.bind(null,902))).default,GroupLayer:async()=>(await a.e(44).then(a.bind(null,1303))).default,GeoRSSLayer:async()=>(await a.e(183).then(a.bind(null,1383))).default,GeoJSONLayer:async()=>(await Promise.resolve().then(a.bind(null,941))).default,ImageryLayer:async()=>(await Promise.all([a.e(13),a.e(24),a.e(101)]).then(a.bind(null,1404))).default,ImageryTileLayer:async()=>(await Promise.all([a.e(13),a.e(34),a.e(24),a.e(102)]).then(a.bind(null,1405))).default,IntegratedMeshLayer:async()=>(await a.e(61).then(a.bind(null,1423))).default,KMLLayer:async()=>(await a.e(184).then(a.bind(null,1414))).default,LineOfSightLayer:async()=>(await a.e(66).then(a.bind(null,1424))).default,MapImageLayer:async()=>(await Promise.all([a.e(39),a.e(185)]).then(a.bind(null,1385))).default,MapNotesLayer:async()=>(await a.e(117).then(a.bind(null,1387))).default,OGCFeatureLayer:async()=>(await a.e(103).then(a.bind(null,1425))).default,OpenStreetMapLayer:async()=>(await a.e(104).then(a.bind(null,1388))).default,OrientedImageryLayer:async()=>(await a.e(186).then(a.bind(null,1389))).default,PointCloudLayer:async()=>(await a.e(59).then(a.bind(null,1408))).default,RouteLayer:async()=>(await Promise.all([a.e(25),a.e(88)]).then(a.bind(null,1402))).default,SceneLayer:async()=>(await Promise.all([a.e(29),a.e(115)]).then(a.bind(null,1411))).default,StreamLayer:async()=>(await a.e(187).then(a.bind(null,1426))).default,SubtypeGroupLayer:async()=>(await a.e(188).then(a.bind(null,1415))).default,TileLayer:async()=>(await Promise.all([a.e(39),a.e(91)]).then(a.bind(null,1390))).default,UnknownLayer:async()=>(await a.e(189).then(a.bind(null,1391))).default,UnsupportedLayer:async()=>(await a.e(190).then(a.bind(null,1392))).default,VectorTileLayer:async()=>(await Promise.all([a.e(16),a.e(81)]).then(a.bind(null,1407))).default,VoxelLayer:async()=>(await a.e(68).then(a.bind(null,1403))).default,WebTileLayer:async()=>(await a.e(118).then(a.bind(null,1217))).default,WFSLayer:async()=>(await a.e(92).then(a.bind(null,1427))).default,WMSLayer:async()=>(await a.e(105).then(a.bind(null,1416))).default,WMTSLayer:async()=>(await a.e(82).then(a.bind(null,1409))).default}},1190:function(e,t,a){"use strict";a.d(t,"a",(function(){return n}));var r=a(134);async function n(e){const{data:t}=await Object(r.default)(e,{responseType:"json",query:{f:"json"}});return t}},1432:function(e,t,a){"use strict";a.r(t),a.d(t,"fromItem",(function(){return s})),a.d(t,"selectLayerClassPath",(function(){return c}));var r=a(16),n=a(1189),l=a(673),i=a(1052),u=a(1142),o=a(1190);function s(e){return!e.portalItem||e.portalItem instanceof l.default||(e={...e,portalItem:new l.default(e.portalItem)}),function(e){return e.load().then(c).then(y)}(e.portalItem).then((t=>{const a={portalItem:e.portalItem,...t.properties};return new(0,t.constructor)(a)}))}function c(e){switch(e.type){case"Map Service":return function(e){return Object(o.a)(e.url).then((e=>e.tileInfo))}(e).then((e=>e?{className:"TileLayer"}:{className:"MapImageLayer"}));case"Feature Service":return function(e){return Object(u.d)(e,"Oriented Imagery Layer")?function(e){return e.load().then((()=>e.fetchData())).then((e=>e.coverage?{className:"GroupLayer"}:{className:"OrientedImageryLayer",properties:e}))}(e):d(e).then((e=>{if("object"==typeof e){const t={};return null!=e.id&&(t.layerId=e.id),{className:e.className||"FeatureLayer",properties:t}}return{className:"GroupLayer"}}))}(e);case"Feature Collection":return async function(e){await e.load();const t=Object(u.d)(e,"Map Notes"),a=Object(u.d)(e,"Markup");if(t||a)return{className:"MapNotesLayer"};if(Object(u.d)(e,"Route Layer"))return{className:"RouteLayer"};const r=await e.fetchData();return 1===Object(i.getNumLayersAndTables)(r)?{className:"FeatureLayer"}:{className:"GroupLayer"}}(e);case"Scene Service":return function(e){return d(e).then((t=>{if("object"==typeof t){const a={};let r;if(null!=t.id?(a.layerId=t.id,r=`${e.url}/layers/${t.id}`):r=e.url,Array.isArray(e.typeKeywords)&&e.typeKeywords.length>0){const t={IntegratedMesh:"IntegratedMeshLayer","3DObject":"SceneLayer",Point:"SceneLayer",PointCloud:"PointCloudLayer",Building:"BuildingSceneLayer"};for(const a of Object.keys(t))if(e.typeKeywords.includes(a))return{className:t[a]}}return Object(o.a)(r).then((e=>{let t="SceneLayer";const r={Point:"SceneLayer","3DObject":"SceneLayer",IntegratedMesh:"IntegratedMeshLayer",PointCloud:"PointCloudLayer",Building:"BuildingSceneLayer"};return e&&e.layerType&&r[e.layerType]&&(t=r[e.layerType]),{className:t,properties:a}}))}return!1===t?Object(o.a)(e.url).then((e=>"Voxel"===(null==e?void 0:e.layerType)?{className:"VoxelLayer"}:{className:"GroupLayer"})):{className:"GroupLayer"}}))}(e);case"Image Service":return async function(e){var t,a,r,n,l;await e.load();const i=null!=(t=null==(a=e.typeKeywords)?void 0:a.map((e=>e.toLowerCase())))?t:[];if(i.includes("elevation 3d layer"))return{className:"ElevationLayer"};if(i.includes("tiled imagery"))return{className:"ImageryTileLayer"};const u=null==(r=await e.fetchData())?void 0:r.layerType;if("ArcGISTiledImageServiceLayer"===u)return{className:"ImageryTileLayer"};if("ArcGISImageServiceLayer"===u)return{className:"ImageryLayer"};const s=await Object(o.a)(e.url),c=null==(n=s.cacheType)?void 0:n.toLowerCase(),y=null==(l=s.capabilities)?void 0:l.toLowerCase().includes("tilesonly");return"map"===c||y?{className:"ImageryTileLayer"}:{className:"ImageryLayer"}}(e);case"Stream Service":case"Feed":return{className:"StreamLayer"};case"Vector Tile Service":return{className:"VectorTileLayer"};case"GeoJson":return{className:"GeoJSONLayer"};case"CSV":return{className:"CSVLayer"};case"KML":return{className:"KMLLayer"};case"WFS":return{className:"WFSLayer"};case"WMTS":return{className:"WMTSLayer"};case"WMS":return{className:"WMSLayer"};default:return Promise.reject(new r.a("portal:unknown-item-type","Unknown item type '${type}'",{type:e.type}))}}function y(e){return(0,n.a[e.className])().then((t=>({constructor:t,properties:e.properties})))}function d(e){return!e.url||e.url.match(/\/\d+$/)?Promise.resolve({}):e.load().then((()=>e.fetchData())).then((async t=>{if("Feature Service"===e.type){const a=p(await Object(i.preprocessFSItemData)(t,e.url));if("object"==typeof a){const e=Object(i.getSubtypeGroupLayerIds)(t);a.className=e.includes(a.id)?"SubtypeGroupLayer":"FeatureLayer"}return a}return Object(i.getNumLayersAndTables)(t)>0?p(t):Object(o.a)(e.url).then(p)}))}function p(e){return 1===Object(i.getNumLayersAndTables)(e)&&{id:Object(i.getFirstLayerOrTableId)(e)}}}}]);
//# sourceMappingURL=77.9877e00c.chunk.js.map